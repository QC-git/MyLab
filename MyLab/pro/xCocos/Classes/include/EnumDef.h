// -*- C++ -*-

//=============================================================================
/**
 *  @file    EnumDef.h
 *
 *  $Id: EnumDef.h  2009-01-13 14:33:41 $
 *
 *  @author xxx
 */
//=============================================================================

#ifndef _TQ_ENUM_DEFINE_H_
#define _TQ_ENUM_DEFINE_H_

#include "ConstDef.h"
#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

/***************************************************************************
//请注意：这个文件定义整个系统公共的的枚举类型，请不要到处定义造成维护问题 *
****************************************************************************/

//这个enum给模块之间通信使用使用
enum ENUM_NOTIFY_CMD {
	CMD_NONE = 0, 
	SLASH_CMD = 1, 
	ADD_USER_CMD, 
	DEL_USER_CMD, 
	ADD_SPIRIT_CMD, 
	DEL_SPIRIT_CMD,
	DISPATCH_CMD,
};

enum ENUM_STONE { ENUM_STONE0, ENUM_STONE1, ENUM_STONE2, };
enum UPDATE_BOOL	      { UPDATE_FALSE=false,			UPDATE_TRUE=true };
enum DELRECORD_BOOL	      { DELRECORD_FALSE=false,		DELRECORD_TRUE=true };
enum INCLUDE_BOOL	      { EXCLUDE_SELF=false,			INCLUDE_SELF=true };
enum SYNCHRO_ENUM	      { SYNCHRO_FALSE=false,		SYNCHRO_TRUE=true,  SYNCHRO_BROADCAST, SYNCHRO_TEAM_BROADCAST = 4, SYNCHRO_TEAM_AND_SCREEN_BROADCAST = 6};
enum AWARDDEED_BOOL       { AWARDDEED_FALSE=false,		AWARDDEED_TRUE=true };
enum CHANGESHAPE_BOOL     { CHANGESHAPE_FALSE=false,	CHANGESHAPE_TRUE=true };
enum COMBINE_ENUM         { COMBINE_NONE, COMBINE_FIT,	COMBINE_OVERFLOW};
enum PAY_ENUM             { PAY_MONEY, PAY_RMB, PAY_EMONEY3};
enum BUY_ENUM             { BUY_NONE, BUY_NPCSHOP, BUY_BOOTH, BUY_TRADE, BUY_VIP_SHOP, BUY_VIP_STORE, BUY_VIP_SHOP_AND_USE, BUY_VIP_STORAGE, BUY_VIP_NIMBUS};
enum FORBID_WALLOW_STATUS {FORBID_WALLOW_STATUS_NULL = 0, FORBID_WALLOW_STATUS_FULL_EXP, FORBID_WALLOW_STATUS_HALF_EXP, FORBID_WALLOW_STATUS_ZERO_EXP};
enum					  { HIT_BY_MAGIC, HIT_BY_WEAPON, HIT_BY_ITEM };
enum DATA_IDX			  { DATAIDX_0 = 0, DATAIDX_1, DATAIDX_2, DATAIDX_3,	DATAIDX_4, DATAIDX_5, DATAIDX_6, DATAIDX_7,	DATAIDX_ALL };

// Domain领域类型
enum DOMAIN_TYPE
{
// 	DOMAINTYPE_NORMAL_REGION	= 100011,
// 	DOMAINTYPE_NORMAL_MAP	= 100010,
// 	DOMAINTYPE_DAYTIME	= 100000,
	DOMAINTYPE_MAP		= 1,
	DOMAINTYPE_REGION	= 2,
	DOMAINTYPE_MAP_SYN_ADD_DAMAGE					= 3,
	DOMAINTYPE_FIELD_SYN_ADD_DAMAGE					= 4,
	DOMAINTYPE_NO_ENERGY_INCREASE					= 5,

};
// GenaKoo 类型
enum GENAKOO_POS
{
	// 获得出征 Spirit
	GENAKOO_OUT = 1 << 1,
	// 属于玩家先锋营位置的 Spirit
	GENAKOO_VAN = 1 << 2,
	// 属于玩家后备营位置的 Spirit
	GENAKOO_REST = 1 << 3,
	// 属于玩家牢笼位置的 Spirit
	GENAKOO_LIMIT = 1 << 4,

	// 地下城生物，带在玩家身上
	GENAKOO_DUN = 1 << 5,
	// 召唤出的地下城生物，不一定跟随玩家
	GENAKOO_DUNFREE = 1 << 6,

	// 所有位置的 Spirit
	GENAKOO_ALL = GENAKOO_OUT | GENAKOO_VAN | GENAKOO_REST | GENAKOO_LIMIT | GENAKOO_DUN | GENAKOO_DUNFREE,
};

enum DBLOAD_USERDATA_EM 
{
	DBLOAD_USER_BASEINFO,
	DBLOAD_USER_EXTENDINFO,
	DBLOAD_ROBOT_FLOATCANNON_STANDBY,
	DBLOAD_JOB_SCORE,
	DBLOAD_MESSAGE_INFO,
	DBLOAD_GENA_INFO,
	DBLOAD_STATISTIC_INFO,
	DBLOAD_STATUS_INFO,
	DBLOAD_ITEMEX_ROBOT,
	DBLOAD_ITEM_ROBOT,
	DBLOAD_BONUS_INFO,
	DBLOAD_FRIEND_INFO,
	DBLOAD_FRIENDED_INFO,
	DBLOAD_ENEMY_INFO,
	DBLOAD_LEAVEWORD_INFO,
	DBLOAD_WEAPON_SKILL,
	DBLOAD_MAGIC_INFO,
	DBLOAD_MAGIC_SKILL,
	DBLOAD_AMMO_SKILL,
	DBLOAD_SYNATTR_INFO,
	DBLOAD_FAMIATTR_INFO,
	DBLOAD_CONTRACT_INFO,
	DBLOAD_RESEARCH_INFO,
	DBLOAD_TUTOR_FARTHER_LEVEL,
	DBLOAD_TUTOR_GRANDFARTHER_LEVEL,
	DBLOAD_TUTOR_MY_DATA,
	DBLOAD_TUTOR_MY_CONTRIBUTIONS,
	//作为徒孙的贡献
	DBLOAD_TUTOR_MY_CONTRIBUTIONS_SUBSTUDENT,
	DBLOAD_TUTOR_FATHER_DATA,
	DBLOAD_TUTOR_ACCESS,
	DBLOAD_TUTOR_STUDENT_DATA,
	DBLOAD_TUTOR_STUDENT_CONTRIBUTIONS,
	//徒弟作为徒孙的贡献
	DBLOAD_TUTOR_STUDENT_CONTRIBUTIONS_SUBSTUDENT,
	//师兄
	DBLOAD_TUTOR_CLASSMATE_DATA,
	DBLOAD_TUTOR_CLASSMATE_CONTRIBUTIONS,
	//师兄最为徒孙的贡献
	DBLOAD_TUTOR_CLASSMATE_CONTRIBUTIONS_SUBSTUDENT,
	//徒孙
	DBLOAD_TUTOR_SUBSTUDENT_DATA_BEGIN,
	DBLOAD_TUTOR_SUBSTUDENT_DATA_END = DBLOAD_TUTOR_SUBSTUDENT_DATA_BEGIN + 20,

	DBLOAD_TUTOR_SUBSTUDENT_CONTRIBUTIONS_BEGIN,
	DBLOAD_TUTOR_SUBSTUDENT_CONTRIBUTIONS_END = DBLOAD_TUTOR_SUBSTUDENT_CONTRIBUTIONS_BEGIN + 20,
	//徒孙作为徒孙的贡献
	DBLOAD_TUTOR_SUBSTUDENT_CONTRIBUTIONS_SUBSTUDENT,


	DBLOAD_TUTOR_MY_TUTORANNOUNCE,
	DBLOAD_QUEST_OF_MINE,
	//兄弟系统
	DBLOAD_BROTHER_ATTR,
	DBLOAD_BROTHER_TEAM,
	DBLOAD_BROTHER_TEAM_ATTR,
	DBLOAD_BROTHER_ENEMY,
	DBLOAD_SHIP_RECORD_BOOK,
	
	DBLOAD_BOOTH_FLAG_BY_PERSON,
	DBLOAD_BOOTH_FLAG_BY_SYN,
	DBLOAD_BOOTH_INCOME_BY_PERSON,
	DBLOAD_BOOTH_INCOME_BY_SYN,
	
	DBLOAD_LIFESKILL_INFO,
	
	DBLOAD_ITEMEX_SALEAPPLY,
	DBLOAD_ITEM_SALEAPPLY,
	DBLOAD_ITEM_BONDCLEARWAIT,

	DBLOAD_ROBOT_STATISTIC_INFO,
	DBLOAD_CANNON_STATISTIC_INFO_BEGIN	= 700,
	DBLOAD_CANNON_STATISTIC_INFO_END	= 799,
	DBLOAD_GENAKOO_STATISTIC_INFO_BEGIN = 800,
	DBLOAD_GENAKOO_STATISTIC_INFO_END   = 900,
	
	DBLOAD_BUSSINESS_INFO =	901,
	DBLOAD_DUN							=902,
	// 根据地下城 ID 加载建筑材料
	DBLOAD_DUN_CONSTRUCTION_MATERIAL_BY_DUN	= 906,
	DBLOAD_GENaKoo_ITEMEXBEGIN=1000,
	DBLOAD_GENaKoo_ITEMEXEND=1500,
	DBLOAD_GENaKoo_ITEMBEGIN=1501,
	DBLOAD_GENaKoo_ITEMEND=2000,

	DBLOAD_FLOATCANNON1_ITEMEXBEGIN=2001,
	DBLOAD_FLOATCANNON1_ITEMEXEND=2500,
	DBLOAD_FLOATCANNON1_ITEMBEGIN=2501,
	DBLOAD_FLOATCANNON1_ITEMEND=3000,

	DBLOAD_FLOATCANNON2_ITEMEXBEGIN=3001,
	DBLOAD_FLOATCANNON2_ITEMEXEND=3500,
	DBLOAD_FLOATCANNON2_ITEMBEGIN=3501,
	DBLOAD_FLOATCANNON2_ITEMEND=4000,
	
	DBLOAD_FLOATCANNON_MAGIC_INFO_BEGIN=4001,
	DBLOAD_FLOATCANNON_MAGIC_INFO_END=4100,
	DBLOAD_FLOATCANNON_MAGIC_SKILL_BEGIN=4101,
	DBLOAD_FLOATCANNON_MAGIC_SKILL_END=4200,

	DBLOAD_AUCTION_ITEM					=4210,
	DBLOAD_AUCTION_ITEMEX				=4211,
	
	DBLOAD_DIG_BEGIN					=4212,
	DBLOAD_DIG_END						=4250,

	DBLOAD_DUN_CONSTRUCT_BEGIN			=4251,
	DBLOAD_DUN_CONSTRUCT_END			=4289,

	DBLOAD_DUN_CONSTRUCTION_MATERIAL_BY_DUN_BEGIN = 4290,
	DBLOAD_DUN_CONSTRUCTION_MATERIAL_BY_DUN_END	  = 4318,
	DBLOAD_USER_STATE = 4400,
	DBLOAD_ID_KILLED  = 4444,
};

enum
{
	WAYLAY_ACT_USE,      // 使用埋伏技
	WAYLAY_ACT_CANCEL,   // 取消埋伏技
	WAYLAY_ACT_FLYOUT,	 // 埋伏技冲出
};


//配置文件的枚举类型
enum CFGDATA
{
	CFGDATA_ID,
	CFGDATA_NAME,
	CFGDATA_DATA,
	CFGDATA_DESC,
};


//地图的枚举类型
enum MAPDATA
{
    MAPDATA_ID		= 0,
    MAPDATA_NAME,
    MAPDATA_DESCRIBE,
    MAPDATA_MAPDOC,
    MAPDATA_TYPE,
    MAPDATA_OWNER_ID,
	MAPDATA_MAPGROUP,
    MAPDATA_IDSERVER,
    MAPDATA_WEATHER,
    MAPDATA_BGMUSIC,
    MAPDATA_BGMUDIC_SHOW,
    MAPDATA_PORTAL0_X,
    MAPDATA_PORTAL0_Y,
    MAPDATA_REBORN_MAP,
    MAPDATA_REBORN_PORTAL,
	MAPDATA_RES_LEV,
    MAPDATA_OWNER_TYPE,
    MAPDATA_LINK_MAP_ID,
    MAPDATA_LINK_MAP_X,
    MAPDATA_LINK_MAP_Y,
    MAPDATA_DEL_FLAG,
	MAPDATA_MAXLV_REQ,			//进入地图的最大等级限制
	MAPDATA_MINLV_REQ,			//进入地图的最小等级限制
	MAPDATA_ROOM1,				//固定房间的mapid
	MAPDATA_ROOM2,
	MAPDATA_ROOM3,
	MAPDATA_ROOM4,
	MAPDATA_ROOM5,
	MAPDATA_ROOM6,
	MAPDATA_PROVINCE_ID,		
	MAPDATA_GENNO,             //管理副本地图有用
};

enum PORTALDATA
{
	PROTALDATA_ID		= 0,
	PROTALDATA_MAPID,
	PROTALDATA_PORTAL_IDX,
	PROTALDATA_PORTAL_X,
	PROTALDATA_PORTAL_Y
};

enum PASSWAYDATA
{
	PASSWAYDATA_ID		= 0,
	PASSWAYDATA_MAPID,
	PASSWAYDATA_IDX,
	PASSWAYDATA_PASSWAY_MAPID,
	PASSWAYDATA_MAPPORTAL
};

//地图区域类型
enum REGIONDATA
{
	REGIONDATA_ID		= 0,
	REGIONDATA_MAPID,
	REGIONDATA_TYPE,				
	REGIONDATA_BOUND_X,
	REGIONDATA_BOUND_Y,
	REGIONDATA_BOUND_CX,
	REGIONDATA_BOUND_CY,
	REGIONDATA_DATASTR,
	REGIONDATA_DATA0,
	REGIONDATA_DATA1,
	REGIONDATA_DATA2,
	REGIONDATA_DATA3,
	REGIONDATA_GENNO,
};

//领域技能类型
const OBJID DOMAINMAGICTYPE_NOMAL_MAP	= 100010;	//通用领域，暂用于测试
const OBJID DOMAINMAGICTYPE_NOMAL_DOMAIN	= 100011;	//通用领域，暂用于测试
const OBJID DOMAINMAGICTYPE_NOMAL_CONTROL	= 100012;	//通用领域，暂用于测试
const OBJID DOMAINMAGICTYPE_DAYTIME1 = 100000;	//一级白天领域
const OBJID DOMAINMAGICTYPE_DAYTIME2 = 100001;	//二级白天领域
const OBJID DOMAINMAGICTYPE_DAYTIME3 = 100002;	//三级白天领域
const OBJID DOMAINMAGICTYPE_DAMAGE_DEC = 900100;//全地图队伍受伤害减少效果的领域,暂时测试

const OBJID DOMAIN_FIELD_SYN_ADD_DAMAGE1 = 123400; //范围全员伤害增加领域
const OBJID DOMAIN_FIELD_SYN_ADD_DAMAGE2 = 123401;
const OBJID DOMAIN_FIELD_SYN_ADD_DAMAGE3 = 123402;
const OBJID DOMAIN_FIELD_SYN_ADD_DAMAGE4 = 123403;
const OBJID DOMAIN_FIELD_SYN_ADD_DAMAGE5 = 123404;

//地图陷阱相关的枚举定义
enum TRAPTYPEDATA
{
	TRAPTYPEDATA_ID = 0,
	TRAPTYPEDATA_SOTR,
	TRAPTYPEDATA_LOOK,
	TRAPTYPEDATA_ACTION_ID,
	TRAPTYPEDATA_LEVEL,
	TRAPTYPEDATA_DEXTERITY,
	TRAPTYPEDATA_ATTACK_SPEED,
	TRAPTYPEDATA_ACTIVE_TIMES,
	TRAPTYPEDATA_MAGIC_TYPE,
	TRAPTYPEDATA_MAGIC_HITRATE,
	TRAPTYPEDATA_SIZE,
	TRAPTYPEDATA_ATK_MODE,
	TRAPTYPEDATA_ATKMAX,
	TRAPTYPEDATA_ATKMIN,
	TRAPTYPEDATA_ATKHOT,
	TRAPTYPEDATA_ATKSHAKE,
	TRAPTYPEDATA_ATKSTING,
	TRAPTYPEDATA_ATKDECAY,
	TRAPTYPEDATA_IMMUNITY,
	TRAPTYPEDATA_TRIGGER_RANGE,		
	TRAPTYPEDATA_DETONATE_RANGE,
	// TODO::MILO 11/9/2015 以下是GS中跟BS不一样的定义。
	TRAPTYPEDATA_ACTION,
	TRAPTYPEDATA_SPEED,
	TRAPTYPEDATA_STAY_TIME,
	TRAPTYPEDATA_MAGICTYPE,
	TRAPTYPEDATA_CX,
	TRAPTYPEDATA_CY,
};

enum TRAPDATA
{
	TRAPDATA_ID_= 0,
	TRAPDATA_TYPE,
	TRAPDATA_LOOK,					
	TRAPDATA_OWNERID,
	TRAPDATA_MAPID,
	TRAPDATA_POS_X,
	TRAPDATA_POS_Y,
	TRAPDATA_DATA,
	TRAPDATA_POS_CX,
	TRAPDATA_POS_CY,
	TRAPDATA_GENNO,
	// TODO::MILO 11/9/2015
	TRAPDATA_DYNA_TYPE,     // 动态生成组，0表示服务端启动时创建，其他表示在action调用时创建
	TRAPDATA_CREATE_TIME,   // 陷阱出生时间
	TRAPDATA_STAY_TIME,     // 陷阱持续时间
	TRAPDATA_BASE_MAP,      // 底图
};

enum TRAPRULEDATA
{
	TRAPRULEDATA_ID = 0,
	TRAPRULEDATA_TRAPRULL,
	TRAPRULEDATA_TRAPTYPE,
	TRAPRULEDATA_PERCENT,
	
};
enum TRAP_SORT
{
	TRAPSORT_SYSTRAP		= 1,					//系统的陷阱，多次有效
	TRAPSORT_TRAPSORT_		= 10,					// 陷阱类 
	TRAPSORT_FIREWALL		= 10,					// 火墙, 可由系统放置
	TRAPSORT_BURNWALLAMMO	= 11,					// 燃烧弹技能释放以后的火焰陷阱   trap_sort=11
	TRAPSORT_MINE			= 12,					// 地雷，机雷
	TRAPSORT_MONSTERDIE		= 100,                  // 怪物死后生成陷阱
};

/////////////////////////////////////////////////////////////////////////////////////
// 程序使用的DATA情况
enum {
		SYNFLAGNPC_FIGHTBEGIN1=0,SYNFLAGNPC_FIGHTEND1,SYNFLAGNPC_FIGHTBEGIN2,SYNFLAGNPC_FIGHTEND2,					// 帮派标志(time:WWHHMMSS, sun day = 7)
		GOALNPC_LEVEL=3,
		TIMERNPC_TIME=3,
		TRUNKNPC_SIZE=3,
		STORAGENPC_SIZE=3,
		NEIGHBORNPC_X=1,NEIGHBORNPC_Y=2,NEIGHBORNPC_SERIAL=3,
};			//? 目前一组最多支持4个变量


//NPC相关的枚举定义
enum NPCDATA
{
  NPCDATA_ID			= 0, 	
	NPCDATA_OWNER_ID,
	NPCDATA_OWNER_TYPE,
    NPCDATA_NAME,
    NPCDATA_TYPE,
    NPCDATA_LOOKFACE,		STATUARYDATA_DIR = NPCDATA_LOOKFACE,
    NPCDATA_IDSERVER,
    NPCDATA_MAPID,
    NPCDATA_CEXX,
    NPCDATA_CEXY,
    NPCDATA_TASK0,			STATUARYDATA_HELMET=NPCDATA_TASK0,
    NPCDATA_TASK1,			STATUARYDATA_ARMOR=NPCDATA_TASK1,
    NPCDATA_TASK2,			STATUARYDATA_WEAPONR=NPCDATA_TASK2,
    NPCDATA_TASK3,			STATUARYDATA_WEAPONL=NPCDATA_TASK3,
    NPCDATA_TASK4,			STATUARYDATA_FRAME=NPCDATA_TASK4,
    NPCDATA_TASK5,			STATUARYDATA_POSE=NPCDATA_TASK5,
    NPCDATA_TASK6,			STATUARYDATA_LOOKFACE = NPCDATA_TASK6,
    NPCDATA_TASK7,			STATUARYDATA_RANKSHOW_HAIR = NPCDATA_TASK7,
	NPCDATA_DATA0,
	NPCDATA_DATA1,
	NPCDATA_DATA2,
	NPCDATA_DATA3,
	NPCDATA_DATASTR,
	NPCDATA_LINKID,		
	NPCDATA_LIFE,
	NPCDATA_MAXLIFE,
	NPCDATA_BASE,
	NPCDATA_SORT,
	NPCDATA_ITEMTYPE,
	NPCDATA_DEFADJ,		
	NPCDATA_DEFSUB,
	NPCDATA_DEFHOT,
	NPCDATA_DEFSHAKE,
	NPCDATA_DEFSTING,
	NPCDATA_DEFLIGHT,
	NPCDATA_OWNER_NAME,				//商业并购
	NPCDATA_DEFAULT_OWNER_NAME,
	NPCDATA_INITIAL_PRICE,
	NPCDATA_PRICE,
	NPCDATA_DEPOSIT,
	NPCDATA_BUY_RATIO,
	NPCDATA_FEE_TYPE,
	NPCDATA_INCOME_VALUE,
	NPCDATA_PREFERENTIAL,
	NPCDATA_ANNEX,
	NPCDATA_ATTRIBUTE_TYPE,
	NPCDATA_USER_ATK_ADJUST,
	NPCDATA_USER_ATK_MODE,				
	NPCDATA_LEVEL,
	NPCDATA_CALC_DMG_TYPE,
	NPCDATA_HARVEST_DATE,
	NPCDATA_NUMBER,
	NPCDATA_GENNO,                 //副本地图有用 
};

enum NPCTYPE
{
	_NPC_NONE				= 0,			// 通用NPC
	_SHOPKEEPER_NPC			= 1,			// 商店NPC
	_TASK_NPC				= 2,			// 任务NPC(已作废，仅用于兼容旧数据)
	_STORAGE_NPC			= 3,			// 寄存处NPC
	_TRUNCK_NPC				= 4,			// 箱子NPC
	_FACE_NPC				= 5,			// 变头像NPC
	_FORGE_NPC				= 6,			// 锻造NPC		(only use for client)
	_EMBED_NPC				= 7,			// 镶嵌NPC
	_COMPOSE_NPC			= 8,			// 乾坤五行炉NPC
	_STATUARY_NPC			= 9,			// 雕像NPC
	_SYNFLAG_NPC_B			= 10,			// 帮派标记NPC
	_ROLE_PLAYER			= 11,			// 其他玩家		(only use for client)
	_ROLE_HERO				= 12,			// 自己			(only use for client)
	_ROLE_MONSTER			= 13,			// 怪物			(only use for client)
	_BOOTH_NPC				= 14,			// 摆摊NPC		(CBooth class)
	_SYNTRANS_NPC			= 15,			// 帮派传送NPC, 固定那个不要用此类型! (用于00:00收费)(LINKID为固定NPC的ID，与其它使用LINKID的互斥)
	_ROLE_BOOTH_FLAG_NPC	= 16,			// 摊位标志NPC	(only use for client)
	_ROLE_MOUSE_NPC			= 17,			// 鼠标上的NPC	(only use for client)
	_ROLE_MAGICITEM			= 18,			// 陷阱火墙		(only use for client)
	_ROLE_DICE_NPC			= 19,			// 骰子NPC
	_ROLE_SHELF_NPC			= 20,			// 物品架
	_WEAPONGOAL_NPC			= 21,			// 近程标靶NPC
	_AMMOGOAL_NPC			= 22,			// 远程标靶NPC
	_BOWGOAL_NPC			= 23,			// 弓箭靶子NPC
	_ROLE_TARGET_NPC		= 24,			// 挨打，不触发任务	(only use for client)
	_ROLE_FURNITURE_NPC		= 25,			// 家具NPC	(only use for client)
	_ROLE_CITY_GATE_NPC		= 26,			// 城门NPC	(only use for client)
	_ROLE_NEIGHBOR_DOOR		= 27,			// 邻居的门
	_ROLE_CALL_PET			= 28,			// 召唤兽	(only use for client)
	_ROLE_TELEPORT			= 29,			// 传送NPC			
	_ROLE_AMMOBIND_NPC		= 30,			// 弹药绑定NPC	
	_ROLE_SKILLBIND_NPC		= 31,			// 技能绑定NPC
	_ROLE_EVOLVE_NPC		= 32,			// 进化NPC
	_ROLE_ALLOTPNT_NPC		= 33,			// 点数分配NPC
	_ROLE_PKSETTING_NPC		= 34,			// PK设置NPC
	_ROLE_CHATROOM_NPC		= 35,			// 聊天室NPC
	_ROLE_EQUIP_NPC			= 36,			// 装备NPC
	_SHIP_NPC				= 37,			// 飞船NPC		
	_BOOTH_BUSINESS_FLAG_NPC= 38,			// 商业摊位摊位标志NPC
	_BOOTH_BUSINESS_NPC		= 39,			// 商业摊位NPC
	_SYNFLAG_NPC_A			= 40,			// 帮派标记NPC_A
	_SYNFLAG_NPC_C			= 41,			// 帮派标记NPC_C
	_FAMILY_NPC_WARLETTER	= 42,			// 家庭占领NPC
	_MISSION_PRIVATE_TENT	= 43,			// 副本任务：私有帐篷
	_MISSION_PUBLIC_TENT	= 44,			// 副本任务：共有帐篷
	_DETAIN_EQUIP_NPC       = 45,           // 扣押装备NPC

	//练功场NPC类型 （吸血鬼09-12-23）
	_NPC_EXERCISE_MAGIC_INITIATIVE	= 45,	//主动类的攻击技能训练
	_NPC_EXERCISE_MAGIC_AUXILIARY	= 46,	//主动类的辅助技能训练
	_NPC_EXERCISE_MAGIC_PASSIVE		= 47,	//被动技能训练
	_NPC_EXERCISE_WEAPON_CLOSE		= 48,	//近战武器训练
	_NPC_EXERCISE_WEAPON_DISTANT	= 49,	//远战武器训练

	_ALTAR_NPC				= 55,			//祭坛NPC
	_NPC_LAMPS_SWITCH		= 56,			//灯具开关NPC
	_AI_NPC					= 57,			//智能NPC
	_ROLE_3DFURNITURE_NPC	= 101,			// 3D家具NPC 

	_MOVE_NPC				= 160,			//移动NPC
};

enum NEW_STATE  // 顺序无关!!!用数据值 判断  但要求连续  尽量不要间断!!!
{
	STATE_START					= 0,	// 开始,不使用使用, 注意:一定保持ID的连续性 
	STATE_INTERATTACK			= 1,	//  =0x0000000000000001;
	STATE_DIE					= 2,	//  =0x0000000000000002;
	STATE_TEAMLEADER			= 3,	//  =0x0000000000000004;
	STATE_GHOST					= 4,	//  =0x0000000000000008;
	STATE_DISAPPEARING			= 5,	//	=0x0000000000000010;
	STATE_RED					= 6,	//	=0x0000000000000020;	//PK开关
	STATE_WING					= 7,	//	=0x0000000000000040;
	STATE_STARWAR_LEADER		= 8,	//	=0x0000000000000080;
	STATE_STOPALL				= 9,	//	=0x0000000000000100;	
// 	STATE_ATTACKCD				= 10,	//	=0x0000000000000200;	// 毒
// 	STATE_ATTACK				= 11,	//	=0x0000000000000400;	// 弱
// 	STATE_DEFENCE				= 12,	//	=0x0000000000000800;	// 虚
// 	STATE_MOVESLOWLY			= 13,	//	=0x0000000000001000;	// 缓
// 	STATE_STOPFIGHT				= 14,	//	=0x0000000000002000;	// 封
// 	STATE_STOPMOVE				= 15,	//	=0x0000000000004000;	// 停
// 	STATE_UNDERWRAPS			= 16,	//	=0x0000000000008000;	// 隐
// 	STATE_SHIELD				= 17,	//	=0x0000000000010000;	// 防御罩效果 状态
// 	STATE_GUARDIANSHIP			= 18,	//	=0x0000000000020000;	// 守护 状态
	STATE_SUCKBLOOD_EXPIATE_EXP_UP	=19,	//	=0x0000000000040000;	//吸血或清洗救赎经验提升状态
	STATE_INVINCIBLE			= 20,	//	=0x0000000000080000;	// 无敌状态
//	STATE_FETCH_BURST			= 21,	//	=0x0000000000100000;	// 魂爆状态
	STATE_MONSTER_BE_STEAL_LIFE	= 22,	//	=0x0000000000200000;	// 怪物已经被血族法师成功偷取生命状态
	STATE_SUCKBLOOD_EXPIATE		= 23,	//	=0x0000000000400000;	 
	STATE_TEAMROLE_ATTACKER		= 24,	//	=0x0000000000800000;	// 队伍角色攻击者TEAM_ROLEPLAYING_ATTACKER
	STATE_TEAMROLE_TANK			= 25,	//	=0x0000000001000000;	// 队伍角色坚守者TEAM_ROLEPLAYING_TANK
	STATE_TEAMROLE_HELAER		= 26,	//	=0x0000000002000000;	// 队伍角色治疗者TEAM_ROLEPLAYING_HEALER
	STATE_TEAMROLE_INSPIRER		= 27,	//	=0x0000000004000000;	// 队伍角色鼓舞者TEAM_ROLEPLAYING_INSPIRER
//	STATE_INSPIRER_ADDMONEY		= 28,	//	=0x0000000008000000;
//	STATE_INSPIRER_ADDDAMAG		= 29,	//	=0x0000000010000000;
//	STATE_INSPIRER_DECATTACK	= 30,	//	=0x0000000020000000;
//	STATE_INSPIRER_ADDEXP		= 31,	//	=0x0000000040000000;	
	STATE_VAMPIRE_UNDER_SUNSHINE= 32,   //  =0x0000000080000000;	// 吸血鬼被太阳晒的状态
	STATE_ANGEL					= 33,  	//	=0x0000000100000000;	//天使状态
	STATE_BUSY_LevupInterface	= 34,	//	=0x0000000200000000;	// 技能升级界面（全屏界面）忙碌状态
	STATE_POWERCRAZYFIGHTER		= 35,	//	=0x0000000400000000;	// 真狂战士状态
	STATE_MOUNT					= 36,	//  =0x0000000800000000;	// 交易中的状态
//	STATE_FLAMETHROWER			= 37,	//	=0x0000001000000000;	//火焰喷射器连续攻击状态
	STATE_XPFULL				= 38,	//	=0X0000002000000000;	// xp full status.
	STATE_PURPLE				= 39,	//	=0x0000004000000000;	// 紫名的状态
	STATE_WATCH_STARWAR			= 40,	//	=0x0000008000000000;	// 观战状态
	STATE_DEEPRED				= 41,	//	=0X0000010000000000;    //红名  //黑名通过红、黄名复用实现 
	STATE_PRACTISE				= 43,	//	=0X0000040000000000;	//在线练功状态
	STATE_VAMPIRE_UNDER_SAINT_LIGHT = 44,//	=0X0000080000000000;	// 吸血鬼被圣光照射状态		//压制状态
//	STATE_DODGE					= 45,	//	=0X0000100000000000;	//分身躲避状态
	STATE_SELFPROTECT			= 46,	//	=0x0000200000000000;    //自动防护状态
//	STATE_LOCKATTACK			= 47,	//	=0x0000400000000000;    //锁定攻击状态
	STATE_GODBLESS				= 48,	//	=0x0000800000000000;    //共和国徽章状态
//	STATE_TRANSLOOK				= 49,	//	=0x0001000000000000;    //狼人一级状态
	STATE_FLYMAP				= 50,	//	=0x0002000000000000;    //切屏零时状态服务器和客户端独立清除
//	STATE_BAITMONSTER			= 51,	//	=0x0004000000000000;	// 狼人二级状态
	STATE_UPMODELLEV_USEITEM	= 52,	//	=0x0008000000000000;	//使用物品进行星级升级
	STATE_DIVE					= 53,	//  =0x0010000000000000;	//潜水
	STATE_PK_CHAMPION1			= 54,	//	=0x0020000000000000;	//pk赛 超级冠军状态 
	STATE_PK_CANDICATE1			= 55,	//  =0x0040000000000000;	//pk赛 超级入围状态 
	STATE_PK_CHAMPION2			= 56,	//	=0x0080000000000000;	//pk赛 高级冠军状态 
	STATE_PK_CANDICATE2			= 57,	//	=0x0100000000000000;	//pk赛 高级入围状态 
	STATE_PK_CHAMPION3			= 58,	//	=0x0200000000000000;	//pk赛 中级冠军状态 
	STATE_PK_CANDICATE3			= 59,	//	=0x0400000000000000;	//pk赛 中级入围状态 
	STATE_WAYLAY				= 60,	//	=0x0800000000000000;	//玩家伏击 vampire 
	STATE_CONK					= 61,	//	=0x1000000000000000;	//晕 majl
//	STATE_TRUMP_SELFBLAST_DECBATTLEEFFECT = 62,//=0x2000000000000000;	//法宝-自爆降敌人战斗力功能
	STATE_CHAOS					= 63,	//  =0x4000000000000000;	//混乱
	STATE_FIRST_NIMBUS			= 64,	//	=0X8000000000000000;	// 第一名灵气排行榜状态

// 扩展状态定义   第二个64位
	STATE_SKILL_SHOTGUNSPEEDYCHANGEBULLET = 95, //= 0x0000000040000000;//换弹夹散弹枪状态

// 128位以下的不能带数据信息 
	

// 128为以上的可以选择性带数据到客户端      //        注意: 需要跟客户端同步的尽量就近用数值写死  服务端自己内部使用的只加入枚举就可以了 
	STATE_START1				= 129,	  
	STATE_GODTRANSPORT			= 130,		// 神仙传送状态
	STATE_TEAM_SIGNROLE			= 131,		// 被队长标记状态
	STATE_TEAMSTATUS_EXP_MEDICINE=132,
	STATE_USER_IN_BOOTH			 =133, 

	STATE_SKILL_BLEEDING		= 135,	// 新的技能流血状态
	STATE_SKILL_BURNING			= 136,  // 新的技能灼烧状态
    STATE_CRIME                 = 137,  // 闪蓝状态
// 	STATE_FLOWER				= 137,	// 收到红玫瑰数据
// 	STATE_WHITEFLOWER			= 138,	// 收到白玫瑰数据
	STATE_MAGE_STEAL_LIFE		= 139,	// 血族法师偷取生命技能引导状态
	STATE_SKILL_FREEZING		= 141,	// 新的技能冰冻状态
	STATE_SKILL_MOVESPEEDREDUCE	= 142,	// 移动速度降低状态-- 鲜血震击技能
	STATE_SKILL_SAN_SHIELD		= 143,	// 增益状态 神圣盾击
	STATE_SKILL_DIZZY			= 144,	// 新技能的眩晕状态 神圣盾击
	STATE_SKILL_JUSTICE			= 145,	// 审判状态  神圣打击技能
	STATE_SKILL_BLOODSHADOWSTEP = 146,	// 血影步状态
	STATE_SKILL_WITHBOMB		= 147,  // 新的技能炸弹附身状态
	STATE_SKILL_MOVEDISABLE		= 148,	// 音速攻击禁止移动状态
	STATE_SKILL_QUICK_SHOT		= 149,	// 快速射击
	STATE_EQUIP_AMMO		    = 150,	// 装弹状态
	STATE_CURSE                 = 151,  // 诅咒状态
	STATE_SKILL_LIGHTNING_SHAKE	= 152,  //新的技能电击状态
	STATE_WERWOLF_VARIATION1    = 153,  // 狼人变异 一级
	STATE_WERWOLF_VARIATION2    = 154,  // 狼人变异 二级
	STATE_SKILL_ADD_LIFE        = 155,
	STATE_INSPIRER_ADDMONEY		= 156,	// 鼓舞者增加金币获取
	STATE_INSPIRER_ADDDAMAG		= 157,	// 鼓舞者增加伤害效果
	STATE_INSPIRER_DECATTACK	= 158,	// 鼓舞者降低攻击效果
	STATE_INSPIRER_ADDEXP		= 159,	// 鼓舞者增加经验获取
	STATE_GEM_CAN_EXCHANGE_EXP,				//流星换经验
	STATE_VAMPIRE_UNDER_DOMAIN_LIGHT = 161,// 吸血鬼被白天领域照射状态
	STATE_ATTACKCD	                 = 162, //用于控制攻击的间隔的状态----僵尸
	STATE_LIFT_ITEM					 = 163,
	STATE_ACT_EMOTION		,				// 2007.03.05 动作表情保存
	
	STATE_ATKRANGE,
	STATE_ATTACK_LOCK,
	STATE_CARRY_WOOD			, // 跑商状态
//	STATE_VAMPIRE_UNDER_DOMAIN_LIGHT = 161,// 吸血鬼被白天领域照射状态
	STATE_ATKSPEED,    
	STATE_USER_CANNOT_CONJURE_DEVIL,
	STATE_USER_HP_AUTO_RESUME,
	STATE_USER_MP_AUTO_RESUME,

	STATE_RECOVERY,
	STATE_PKBEATBACK,
	STATE_ADD_BATTLEEFFECT,
	STATE_TRUMP_WHOLEMAP_ADD_EXP,				 //法宝-全地图全员经验值结界
	STATE_TRUMP_WHOLEMAP_SYNDIACTE_ADD_EXP,		 //法宝-全地图舰队经验值结界
	STATE_TRUMP_WHOLEMAP_TEAM_ADD_EXP,			 //法宝-全地图队伍经验值结界
	STATE_TRUMP_WHOLEMAP_FAMILY_ADD_EXP,		 //法宝-全地图家族经验值结界
	STATE_TRUMP_REGION_FORBID_JUMP,
	STATE_TRUMP_REGION_BATTLEEFFECT,			 //法宝-战斗力区域结界		
	STATE_TRUMP_REGION_DAMAGE,					 //法宝的区域范围全员伤害结界		
	STATE_TRUMP_REGION_BE_DAMAGE,				 //法宝的区域范围全员被伤害结界		
	STATE_TRUMP_REGION_TYPE_REGION_ADD_HP,		 //法宝的区域范围全员HP结界    
	STATE_TRUMP_REGION_FORBID_RESTORE_HP,		 //区域范围全员HP回复
	 STATE_TRUMP_REGION_FORBID_TRANS_POS,
 
	STATE_TRUMP_REGION_ADD_DEAD_TIME,
	STATE_TRUMP_WHOLEMAP_BATTLEEFFECT,			 //法宝-全地图全员战斗力结界
	STATE_TRUMP_WHOLEMAP_SYNDIACTE_BATTLEEFFECT,//法宝-全地图舰队战斗力结界
	STATE_TRUMP_WHOLEMAP_FAMILY_BATTLEEFFECT,	 //法宝-全地图家族战斗力结界
	STATE_TRUMP_WHOLEMAP_TEAM_BATTLEEFFECT,		//法宝-全地图队伍战斗力结界		
	STATE_TRUMP_WHOLEMAP_HP,					 //法宝-全地图全员HP结界
	STATE_TRUMP_WHOLEMAP_SYNDIACTE_HP,			 //法宝-全地图舰队HP结界
	STATE_TRUMP_WHOLEMAP_FAMILY_HP,				//法宝-全地图家族HP结界
	STATE_TRUMP_WHOLEMAP_TEAM_HP,				 //法宝-全地图队伍HP结界
	STATE_TRUMP_WHOLEMAP_ADD_DAMAGE,			 //法宝的全地图全员加伤害结界
	STATE_TRUMP_WHOLEMAP_SYNDIACTE_ADD_DAMAGE,	 //法宝的全地图舰队加伤害结界
	STATE_TRUMP_WHOLEMAP_TEAM_ADD_DAMAGE,		 //法宝的全地图队伍加伤害结界
	STATE_TRUMP_WHOLEMAP_FAMILY_ADD_DAMAGE,		//法宝的全地图家族加伤害结界
	STATE_TRUMP_WHOLEMAP_DEC_DAMAGE,			 //法宝的全地图全员减伤害结界
	STATE_TRUMP_WHOLEMAP_SYNDIACTE_DEC_DAMAGE,	 //法宝的全地图舰队减伤害结界
	STATE_TRUMP_WHOLEMAP_TEAM_DEC_DAMAGE,		 //法宝的全地图队伍减伤害结界
	STATE_TRUMP_WHOLEMAP_FAMILY_DEC_DAMAGE,		//法宝的全地图家族减伤害结界
	STATE_TRUMP_REGION_RESTORE_XP_SPEED, 
	STATE_TRUMP_REGION_FORBID_RESTORE_EN,
	STATE_TRUMP_REGION_FORBID_RESTORE_POWER,
	STATE_TRUMP_REGION_FORBID_RESTORE_THRUSTER,
	STATE_TRUMP_REGION_FORBID_RESTORE_DEF,
	STATE_BECALL_BY_TEAMLEADER,
	STATE_BROTHER_BE_APPLIED_TRANSFER ,//被申请兄弟瞬移
	STATE_BROTHER_TRANSFER	,		// 兄弟瞬移
	STATE_BETRAY_BROTHER,
	STATE_BROTHER_SWEAR,
	STATE_COACH_UNDERSTAND,				 //被指导者领悟状态
	STATE_COACH_USER,
	STATE_COACH_SYN,

	// 一下为服务端自己使用的状态 不需要通知客户端的  数值不需要写死!
	STATE_USER_LOGOUT_TIMER_30_MIN, 
	STATE_SKILL_BLEEDING_IMMUNE,    // 服务端自己使用的免疫对应状态
	STATE_SKILL_JUSTICE_IMMUNE,
	STATE_SKILL_LIGHTNING_SHAKE_IMMUNE,
	STATE_SKILL_BURNING_IMMUNE,
	STATE_SKILL_DIZZY_IMMUNE,
	STATE_NORMAL,
	STATE_EXERCISE_SKILLEXP_ONLINE,	//练功场训练技能、武器熟练度状态（吸血鬼09-12-23）
	STATE_TODAYFLOWER_NUM_RED,		//今日收花数量（红玫瑰）
	STATE_TODAYFLOWER_NUM_WHITE,	//今日收花数量（白玫瑰）

	// 僵尸新状态
	STATE_CAP,						//被抓住
	STATE_CAPPOWER,					//被抓住强化状态	
	STATE_CAPOVER,					//被抓住2秒后

	STATE_SUPPRESSED,               // 被压制状态

	STATE_SUPERARMOR = 229,      //霸体状态
	STATE_SUPERARMOR_RESUME = 230,      //怪物霸体恢复计时状态
	STATE_SUPERARMOR_IMMUNE = 231,
	STATE_LAMPS_ON = 239,		//灯具开状态
	STATE_ROLE_STAND = 240,      //僵直状态
	STATE_DOTFLOOR_SPRING_ENTERBATTLE = 241,	//因为点地进入的战斗状态
	STATE_BATTLE_SPRING_ENTERBATTLE = 242,	//战斗状态
	STATE_REGION_SPRING_ENTERBATTLE = 243,	//进入战斗区域的战斗状态
	STATE_LEADER_OFFLINE = 244,	//队长离线状态
	STATE_NPCMOVE = 245,  // NPC移动状态
	STATE_NPCFORMOVE = 246,  // NPC禁止移动状态
	STATE_USEROFFLINE = 247,  // 
	STATE_BURN = 250,      //燃烧状态
	//	STATE_ININSTANCE		     		    = 251,      //副本状态

	NEW_STATE_END,					// 结束, 同样不使用
};

const UINT STATUS_UINT32_TOTAL_COUNT = /*4; //*/ (NEW_STATE_END-2)/32 +1;  // 最多表示状态: m_nStatusTotalCount*32 个
const INT   TIME_ONCE_ONTIMER = 500;				//一次ontimer的时间
const INT	TIME_CAP = TIME_ONCE_ONTIMER / 250	;	//0.25秒，500毫秒中有 500/250 次
 
enum NPCSORT
{
	NPCSORT_NONE		= 0,
	NPCSORT_TASK		= 1,			// 任务类
	NPCSORT_RECYCLE		= 2,			// 可回收类
	NPCSORT_SCENE		= 4,			// 场景类(带地图物件)
	NPCSORT_LINKMAP		= 8,			// 挂地图类(LINKID为地图ID，与其它使用LINKID的互斥)
	NPCSORT_DIEACTION	= 16,			// 带死亡任务(LINKID为ACTION_ID，与其它使用LINKID的互斥)
	NPCSORT_DELENABLE	= 32,			// 可以手动删除(不是指通过任务)
	NPCSORT_EVENT		= 64,			// 带定时任务, 时间在data3中，格式为DDWWHHMMSS。(LINKID为ACTION_ID，与其它使用LINKID的互斥)
	NPCSORT_TABLE		= 128,			// 带数据表类型
	NPCSORT_SHOP		= 256,			// 商店类
	NPCSORT_VIPSHOP		= 512,			// VIP商店类
		
	NPCSORT_USELINKID	= NPCSORT_LINKMAP | NPCSORT_DIEACTION | NPCSORT_EVENT
};

enum NPC_PATH_DATA
{
	NPC_PATH_DATA_ID,
	NPC_PATH_DATA_NPCID,
	NPC_PATH_DATA_APPEAR_TIME,
	NPC_PATH_DATA_DISAPPEAR_TIME,
	NPC_PATH_DATA_ACTION_MOD,
	NPC_PATH_DATA_POS_NUM,
	NPC_PATH_DATA_MAPID,
	NPC_PATH_DATA_POSX,
	NPC_PATH_DATA_POSY,
	NPC_PATH_DATA_STAY_TIME,
	NPC_PATH_DATA_MOVE_SPEED,
	NPC_PATH_DATA_FUNCTION,
};

enum NPC_INCOME_DATA
{
	INCOMEDATA_ID,
	INCOMEDATA_NPCID,
	INCOMEDATA_OWNERID,
	INCOMEDATA_OWNERTYPE,
	INCOMEDATA_INCOMEEXP,
	INCOMEDATA_INCOMEMONEY,
};

enum NPC_INCOME_TYPE
{
	NPC_SYSTEM_INCOME = 0,
	NPC_PERSON_INCOME = 1, 
	NPC_SYN_INCOME    = 2, 
	NPC_FAMILY_INCOME = 3, 
};			

enum 
{ 
	NPC_OWNER_SYSTEM, 
	NPC_OWNER_PERSON, 
	NPC_OWNER_SYN, 
	NPC_OWNER_FAMILY, 
};

enum 
{ 
	PURCHASE_BY_PERSON, 
	PURCHASE_BY_SYN, 
};


enum USERDATA // 不再 对应 user 和 user_x 表  顺序随便,   // 数据库一一对应的是VAMPIRE_USER_DB_DATA       
{
 	USERDATA_ID,
	USERDATA_NAME,
	USERDATA_MATE_NAME,//USERDATA_MATE,
	USERDATA_MATE_ID,
	USERDATA_LOOKFACE,
	USERDATA_HAIR,
	USERDATA_MONEY,
	USERDATA_MONEY_SAVED,
	USERDATA_WEAPON_SELECT,
	USERDATA_LEVEL,
	USERDATA_EXP,
	USERDATA_STORAGELEVEL,//USERDATA_STORAGE_LV,
	USERDATA_DEED,
	USERDATA_PK_MODE,//USERDATA_PK,
	USERDATA_MEDAL,
	USERDATA_STONE_LIMIT,//USERDATA_STORAGE_STONE_LIMIT,
	USERDATA_CREATETIME,
	USERDATA_RECORD_MAP,//USERDATA_RECORDMAP_ID,
	USERDATA_RECORD_X,//USERDATA_RECORDX,
	USERDATA_RECORD_Y,//USERDATA_RECORDY,
	USERDATA_ACCOUNT_ID,
	USERDATA_LAST_LOGIN,
	USERDATA_TASK_MASK,
	USERDATA_HOME_ID,
	USERDATA_TITLE,
	USERDATA_STORAGE_LIMIT,//USERDATA_STORAGE_WEIGHT_LIMIT,
	USERDATA_LOCK_KEY,
	USERDATA_REBORN_MAPID,
	USERDATA_NEWTYPE_LV,
	USERDATA_Coach,
	USERDATA_Coach_time,
	USERDATA_Coach_date,
	USERDATA_virtue,
	USERDATA_XP_BEAT,
	USERDATA_CAMP,
	USERDATA_PKENABLE,
	USERDATA_MILITARYRANK1,
	USERDATA_MILITARYRANK2,
	USERDATA_MILITARYRANK3,
	USERDATA_MILITARYRANK4,
	USERDATA_MARRYTIME,
	USERDATA_GENAKOO_INFO,	// SPIRITstorage_lev
	USERDATA_ACCUMULATE,	// accumulate
	USERDATA_EMONEY,
	USERDATA_EMONEY_CHK,
	USERDATA_SAVED2,
	USERDATA_EXPBALL,		// 2006.09.07 补充
	USERDATA_STATUS,		// 2006.09.07 补充	status
	USERDATA_STRATAGEM,		// 2006.09.07 补充	stratagem
	USERDATA_ONLINETIME,	// 2006.09.07 补充	online_time
	USERDATA_AUTOEXP,		// 2006.09.07 补充	auto_exercise
	USERDATA_FLOWER,		// 2006.09.07 补充	flower
	USERDATA_BAGNUM,
	USERDATA_FORBITDDENWORDS,	// 2007.01.12 GM抓禁言标志
	USERDATA_CRYSTALPOINT,
	USERDATA_CRYSTALUSAGE0,
	USERDATA_CRYSTALUSAGE1,
	USERDATA_CRYSTALUSAGE2,
	USERDATA_CRYSTALUSAGE3,
	USERDATA_CRYSTALUSAGE4,
	USERDATA_PASSWORD_ID,
	USERDATA_LOCKTIME,
	USERDATA_CHK_SUM,
	USERDATA_FLOWER_W,			// 2007.03.27 白玫瑰，别人送的增值的玫瑰种类
	USERDATA_TUTOR_LEVE,
	USERDATA_TUTOR_EXP,
	USERDATA_ONLINE_TIME2,
	USERDATA_OFFLINE_TIME,
	USERDATA_LAST_LOGIN2,
	USERDATA_LIST1,
	USERDATA_LIST2,
	USERDATA_PROFESSION,
	USERDATA_BROTHER_TEAM_ID,
	USERDATA_LIFE,
	USERDATA_MANA,
	USERDATA_EN,
	USERDATA_INCOME,
	USERDATA_DF,
	USERDATA_BUSINESS,
	USERDATA_DONATE,			//爵位捐献总额
	USERDATA_LOGIN_TIME,		//登录时间
	USERDATA_LOGIN_IP,			//登录IP
	USERDATA_FRIEND_SHARE,
	USERDATA_EMONEY3,			//emoney3
	USERDATA_EMONEY3_CHK,
	USERDATA_QUIZ_POINT,
	USERDATA_BATTLE_LEV,
	USERDATA_FAMILY_RANK,
	USERDATA_IDFAMILY,
	USERDATA_PROFESSION_LEV,
	USERDATA_PROFESSION_EXP,
	USERDATA_ONLINE_EXP,
	USERDATA_EXT_MONSTOR_EXP,
	USERDATA_VAMPIRE_VAL,
	USERDATA_LIMIT,
	//以下字段时输入user_x表的, 程序内部自动处理索引值关系
	USERDATA_EX_ID ,
	USERDATA_EX_NAME,
	USERDATA_EX_BIG_BADLUCK,
	USERDATA_EX_SMALL_BADLUCK,
	USERDATA_EX_LOTTERY_TIMES,
	USERDATA_EX_BIG_GOODLUCK,
	USERDATA_EX_SMALL_GOODLUCK,
	USERDATA_EX_LASTLOTTERY,
	USERDATA_EX_STONE0,
	USERDATA_EX_STONE1,
	USERDATA_EX_STION2,
	USERDATA_EX_CHK_SUM,
	USERDATA_EX_EXPBALLSPIRIT,
	USERDATA_EX_VIPSHOW,

	// 非字段
	USERDATA_MAXLIFE,
	USERDATA_MAXXP,

	//no use
	USERDATA_BANK,
	USERDATA_TIME_OF_LIFE,		// NPC SERVER
	USERDATA_TASK_TIME,
	// 临时变量
	
	USERDATA_PKCOMPETE_SPIRITID,			// 机体ID
	USERDATA_PKCOMPETE_BEGINEXP,		// 2007.02.07 进入pk赛时机体经验
	USERDATA_PKCOMPETE_BEGINLEV,		// 2007.02.07 进入PK赛时机体等级
	USERDATA_PKCOMPETE_BEGINUSERLEV,	// 2007.02.07 进入PK赛时玩家等级

	USERDATA_PKCOMPETE_SPIRITID1,		// 浮游炮(1)ID
	USERDATA_PKCOMPETE_BEGINEXP1,		// 2007.02.07 进入pk赛时浮游炮经验
	USERDATA_PKCOMPETE_BEGINLEV1,		// 2007.02.07 进入PK赛时浮游炮等级
	
	USERDATA_PKCOMPETE_SPIRITID2,		// 浮游炮(2)ID
	USERDATA_PKCOMPETE_BEGINEXP2,		// 2007.02.07 进入pk赛时浮游炮经验
	USERDATA_PKCOMPETE_BEGINLEV2,		// 2007.02.07 进入PK赛时浮游炮等级		

	USERDATA_PKCOMPETE_KILL,
	USERDATA_PKCOMPETE_FIELD,			// 2007.02.07 进入PK赛中的场地
	USERDATA_ACTION_TARGET_ID,			// 2007.03.28 送增值花束
	USERDATA_ACTION_TARGETNAME,			// 2007.04.13 支持%target_name

	USERDATA_MOUNT,

// 	USERDATA_ACCURATEPOINT			= 501,//精确点数
// 	USERDATA_ATTF					= 502,//攻击
// 	USERDATA_DFVAULE				= 503,//防御值
// 	USERDATA_SMVALUE				= 504,//敏捷 闪避
// 	USERDATA_PWVALUE				= 505,//负重
// 	USERDATA_STVALUE				= 506,//体力
// 	USERATTRIB_ACCURATE				= 507,//精确值
// 	USER_FIELD_DEFENCEPOINT			= 514,//防御点数
// 	USER_FILED_SMARTPOINT			= 515,//敏捷点数
// 	USER_FILED_POWERPOINT			= 516,//力量点数
// 	USER_FILED_STRONGPOINT			= 517,//体力点数
// 	USER_FILED_LIFEPOINT			= 518,//生命点数
// 	USERDATA_FREEPOINT				= 519,//自由点数
// 	USERDATA__DEFENSEPOINT_TOADD	= 520,//待分配防御点数
// 	USERDATA__AGILITYPOINT_TOADD	= 521,//待分配敏捷点数
// 	USERDATA__STRENGTHPOINT_TOADD	= 522,//待分配力量点数
// 	USERDATA__SPPOINT_TOADD			= 523,//待分配体力点数
// 	USERDATA__HPPOINT_TOADD			= 524,//待分配生命点数
	USERDATA_DODGE = 501,        //敏捷 闪避
	USERDATA_SHORT_DEFENCE = 502,        //近战防御力
	USERDATA_LONG_DEFENCE = 503,        //远战（枪弹）防御力
	USERDATA_SHORT_MINATK = 507,        //最小近战攻击力
	USERDATA_SHORT_MAXATK = 508,        //最大近战攻击力
	USERDATA_LONG_MINATK = 509,        //最小远战(枪弹)攻击力
	USERDATA_LONG_MAXATK = 510,        //最大远战(枪弹)攻击力

	USERDATA_DEFENCEPOINT = 514,        //抗打击点数
	USERDATA_DODGEPOINT = 515,        //敏捷点数
	USERDATA_POWERPOINT = 516,        //力量点数
	USERDATA_MANAPOINT = 517,        //体力点数
	USERDATA_LIFEPOINT = 518,        //生命点数
	USERDATA_FREEPOINT = 519,        //自由点数

	USERDATA_HEAD = 600,        // 玩家头部模型ID
	USERDATA_CITY = 601,        // 玩家所在城市
};

enum USERDATA_EX
{
	USERDATAEX_ID = 0,
	USERDATAEX_NAME,
	USERDATAEX_BIG_BADLUCK,
	USERDATAEX_SMALL_BADLUCK,
	USERDATAEX_LOTTERY_TIMES,
	USERDATAEX_STONE0,
	USERDATAEX_STONE1,
	USERDATAEX_STION2,
	USERDATAEX_CHK_SUM,
	USERDATAEX_EXPBALLSPIRIT,
	USERDATAEX_VIPSHOW,
};

enum VAMPIRE_USER_DB_DATA       // 吸血鬼数据库字段枚举  这个与数据库一一对应的
{
	VAMPIRE_DB_USER_FIELD_ID,                        // "user, id"                       字段,   表示:
	VAMPIRE_DB_USER_FIELD_NAME,                      // "user, name"                     字段,   表示:
	VAMPIRE_DB_USER_FIELD_MATE,                      // "user, mate"                     字段,   表示:
	VAMPIRE_DB_USER_FIELD_MATE_ID,                   // "user, mate_id"                  字段,   表示:
	VAMPIRE_DB_USER_FIELD_LOOKFACE,                  // "user, lookface"                 字段,   表示:
	VAMPIRE_DB_USER_FIELD_HAIR,                      // "user, hair"                     字段,   表示:
	VAMPIRE_DB_USER_FIELD_MONEY,                     // "user, money"                    字段,   表示:
	VAMPIRE_DB_USER_FIELD_MONEY_SAVED,               // "user, money_saved"              字段,   表示:
	VAMPIRE_DB_USER_FIELD_WEAPON_SELECT,             // "user, weapon_select"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_LEVEL,                     // "user, level"                    字段,   表示:
	VAMPIRE_DB_USER_FIELD_FLATLEVEL,                 // "user, flatlevel"                字段,   表示:
	VAMPIRE_DB_USER_FIELD_EXP,                       // "user, exp"                      字段,   表示:
	VAMPIRE_DB_USER_FIELD_FLAT_EXP,                  // "user, flatexp"                  字段,   表示:
	VAMPIRE_DB_USER_FIELD_STORAGE_LV,                // "user, storage_lv"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_DEED,                      // "user, deed"                     字段,   表示:
	VAMPIRE_DB_USER_FIELD_PK,                        // "user, pk"                       字段,   表示:
	VAMPIRE_DB_USER_FIELD_MEDAL,                     // "user, medal"                    字段,   表示:
	VAMPIRE_DB_USER_FIELD_STORAGE_STONE_LIMIT,       // "user, storage_stone_limit"      字段,   表示:
	VAMPIRE_DB_USER_FIELD_CREATETIME,                // "user, CreateTime"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_RECORDMAP_ID,              // "user, recordmap_id"             字段,   表示:
	VAMPIRE_DB_USER_FIELD_RECORDX,                   // "user, recordx"                  字段,   表示:
	VAMPIRE_DB_USER_FIELD_RECORDY,                   // "user, recordy"                  字段,   表示:
	VAMPIRE_DB_USER_FIELD_ACCOUNT_ID,                // "user, account_id"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_LAST_LOGIN,                // "user, last_login"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_TASK_MASK,                 // "user, task_mask"                字段,   表示:
	VAMPIRE_DB_USER_FIELD_HOME_ID,                   // "user, home_id"                  字段,   表示:
	VAMPIRE_DB_USER_FIELD_TITLE,                     // "user, title"                    字段,   表示:
	VAMPIRE_DB_USER_FIELD_STORAGE_WEIGHT_LIMIT,      // "user, storage_weight_limit"     字段,   表示:
	VAMPIRE_DB_USER_FIELD_LOCK_KEY,                  // "user, lock_key"                 字段,   表示:
	VAMPIRE_DB_USER_FIELD_REBORN_MAPID,              // "user, reborn_mapid"             字段,   表示:
	VAMPIRE_DB_USER_FIELD_NEWTYPE_LV,                // "user, newtype_lv"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_COACH,                     // "user, Coach"                    字段,   表示:
	VAMPIRE_DB_USER_FIELD_COACH_TIME,                // "user, Coach_time"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_COACH_DATE,                // "user, Coach_date"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_VIRTUE,                    // "user, virtue"                   字段,   表示:
	VAMPIRE_DB_USER_FIELD_XP_BEAT,                   // "user, xp_beat"                  字段,   表示:
	VAMPIRE_DB_USER_FIELD_CAMP,                      // "user, camp"                     字段,   表示:
	VAMPIRE_DB_USER_FIELD_PKENABLE,                  // "user, pkenable"                 字段,   表示:
	VAMPIRE_DB_USER_FIELD_MILITARYRANK1,             // "user, militaryrank1"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_MILITARYRANK2,             // "user, militaryrank2"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_MILITARYRANK3,             // "user, militaryrank3"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_MILITARYRANK4,             // "user, militaryrank4"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_MARRYTIME,                 // "user, marrytime"                字段,   表示:
	VAMPIRE_DB_USER_FIELD_ROBOTSTORAGE_LEV,          // "user, robotstorage_lev"         字段,   表示:
	VAMPIRE_DB_USER_FIELD_ACCUMULATE,                // "user, accumulate"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_EMONEY,                    // "user, Emoney"                   字段,   表示:
	VAMPIRE_DB_USER_FIELD_EMONEY_CHK,                // "user, Emoney_chk"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_MONEY_SAVED2,              // "user, money_saved2"             字段,   表示:
	VAMPIRE_DB_USER_FIELD_EXPBALLUSAGE,              // "user, ExpBallUsage"             字段,   表示:
	VAMPIRE_DB_USER_FIELD_STATUS,                    // "user, status"                   字段,   表示:
	VAMPIRE_DB_USER_FIELD_STRATAGEM,                 // "user, stratagem"                字段,   表示:
	VAMPIRE_DB_USER_FIELD_ONLINE_TIME,               // "user, online_time"              字段,   表示:
	VAMPIRE_DB_USER_FIELD_AUTO_EXERCISE,             // "user, auto_exercise"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_FLOWER,                    // "user, flower"                   字段,   表示:
	VAMPIRE_DB_USER_FIELD_BAGNUM,                    // "user, BagNum"                   字段,   表示:
	VAMPIRE_DB_USER_FIELD_FORBITDDEN_WORDS,          // "user, forbitdden_words"         字段,   表示:
	VAMPIRE_DB_USER_FIELD_CRYSTALPOINT,              // "user, CrystalPoint"             字段,   表示:
	VAMPIRE_DB_USER_FIELD_CRYSTALUSAGE0,             // "user, CrystalUsage0"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_CRYSTALUSAGE1,             // "user, CrystalUsage1"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_CRYSTALUSAGE2,             // "user, CrystalUsage2"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_CRYSTALUSAGE3,             // "user, CrystalUsage3"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_CRYSTALUSAGE4,             // "user, CrystalUsage4"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_PASSWORD_ID,               // "user, password_id"              字段,   表示:
	VAMPIRE_DB_USER_FIELD_LOCKTIME,                  // "user, locktime"                 字段,   表示:
	VAMPIRE_DB_USER_FIELD_CHK_SUM,                   // "user, chk_sum"                  字段,   表示:
	VAMPIRE_DB_USER_FIELD_FLOWER_W,                  // "user, flower_w"                 字段,   表示:
	VAMPIRE_DB_USER_FIELD_TUTOR_LEVEL,               // "user, tutor_level"              字段,   表示:
	VAMPIRE_DB_USER_FIELD_TUTOR_EXP,                 // "user, Tutor_exp"                字段,   表示:
	VAMPIRE_DB_USER_FIELD_ONLINE_TIME2,              // "user, online_time2"             字段,   表示:
	VAMPIRE_DB_USER_FIELD_OFFINE_TIME,               // "user, offine_time"              字段,   表示:
	VAMPIRE_DB_USER_FIELD_LAST_LOGOUT2,              // "user, last_logout2"             字段,   表示:
	VAMPIRE_DB_USER_FIELD_LIST1,                     // "user, list1"                    字段,   表示:
	VAMPIRE_DB_USER_FIELD_LIST2,                     // "user, list2"                    字段,   表示:
	VAMPIRE_DB_USER_FIELD_PROFESSION,                // "user, profession"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_BROTHER_TEAM_ID,           // "user, brother_team_id"          字段,   表示:
	VAMPIRE_DB_USER_FIELD_LIFE,                      // "user, life"                     字段,   表示:
	VAMPIRE_DB_USER_FIELD_MANA,                      // "user, mana"                     字段,   表示:
	VAMPIRE_DB_USER_FIELD_ENERGY,                    // "user, energy"                   字段,   表示:
	VAMPIRE_DB_USER_FIELD_INCOME,                    // "user, Income"                   字段,   表示:
	VAMPIRE_DB_USER_FIELD_DF,                        // "user, Df"                       字段,   表示:
	VAMPIRE_DB_USER_FIELD_BUSINESS,                  // "user, business"                 字段,   表示:
	VAMPIRE_DB_USER_FIELD_DONATION,                  // "user, donation"                 字段,   表示:
	VAMPIRE_DB_USER_FIELD_LOGIN_TIME,                // "user, login_time"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_IP,                        // "user, ip"                       字段,   表示:
	VAMPIRE_DB_USER_FIELD_FRIEND_SHARE,              // "user, friend_share"             字段,   表示:
	VAMPIRE_DB_USER_FIELD_EMONEY3,                   // "user, Emoney3"                  字段,   表示:
	VAMPIRE_DB_USER_FIELD_EMONEY3_CHK,               // "user, Emoney3_chk"              字段,   表示:
	VAMPIRE_DB_USER_FIELD_QUIZ_POINT,                // "user, quiz_point"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_BATTLE_LEV,                // "user, battle_lev"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_FAMILY_RANK,               // "user, family_rank"              字段,   表示:
	VAMPIRE_DB_USER_FIELD_IDFAMILY,                  // "user, idfamily"                 字段,   表示:
	VAMPIRE_DB_USER_FIELD_PROFESSION_LEV,            // "user, profession_lev"           字段,   表示:
	VAMPIRE_DB_USER_FIELD_PROFESSION_EXP,            // "user, profession_exp"           字段,   表示:
	VAMPIRE_DB_USER_FIELD_ONLINE_EXP,                // "user, online_exp"               字段,   表示:
	VAMPIRE_DB_USER_FIELD_ONLINE_EXT_MONSTER_EXP,    // "user, online_ext_monster_exp"   字段,   表示:
	VAMPIRE_DB_USER_FIELD_VAMPIRE_VAL,               // "user, vampire_val"              字段,   表示:
	VAMPIRE_DB_USER_FIELD_VITALCAPACITY,             // "user, VitalCapacity"            字段,   表示:
	VAMPIRE_DB_USER_FIELD_OXYGEN,                    // "user, Oxygen"                   字段,   表示:
	VAMPIRE_DB_USER_FIELD_DEFENCEPOINT,
	// TODO::MILO 11/9/2015
	VAMPIRE_DB_USER_FILED_DODGEPOINT,
	VAMPIRE_DB_USER_FILED_POWERPOINT,
	VAMPIRE_DB_USER_FILED_STRONGPOINT,
	VAMPIRE_DB_USER_FILED_LIFEPOINT,
	VAMPIRE_DB_USER_FILED_STAMINA,
	VAMPIRE_DB_USER_FIELD_HEAD,
	VAMPIRE_DB_USER_FIELD_CITY,
	VAMPIRE_DB_USER_FIELD_ACHIVE_ADDPOINT,
	VAMPIRE_DB_USER_FIELD_IDTEAM,
}; //VAMPIRE_USER_DB

enum VAMPIRE_USER_X_DB_DATA     // 吸血鬼数据库字段枚举 这个与数据库一一对应的
{
	VAMPIRE_DB_USER_X_FIELD_ID,                         // "user_x, id"
	VAMPIRE_DB_USER_X_FIELD_NAME,                       // "user_x, name"
	VAMPIRE_DB_USER_X_FIELD_BIG_BADLUCK,                // "user_x, big_badluck"
	VAMPIRE_DB_USER_X_FIELD_SMALL_BADLUCK,              // "user_x, small_badluck"
	VAMPIRE_DB_USER_X_FIELD_LOTTERY_TIMES,              // "user_x, lottery_times"
	VAMPIRE_DB_USER_X_FIELD_BIG_GOODLUCK,               // "user_x, big_goodluck"
	VAMPIRE_DB_USER_X_FIELD_SMALL_GOODLUCK,             // "user_x, small_goodluck"
	VAMPIRE_DB_USER_X_FIELD_LASTLOTTERY,                // "user_x, lastlottery"
	VAMPIRE_DB_USER_X_FIELD_STONE0,                     // "user_x, Stone0"
	VAMPIRE_DB_USER_X_FIELD_STONE1,                     // "user_x, Stone1"
	VAMPIRE_DB_USER_X_FIELD_STONE2,                     // "user_x, Stone2"
	VAMPIRE_DB_USER_X_FIELD_CHK_SUM,                    // "user_x, chk_sum"
	VAMPIRE_DB_USER_X_FIELD_EXPBALLROBOT,               // "user_x, ExpBallRobot"
	VAMPIRE_DB_USER_X_FIELD_VIP_SHOW,                   // "user_x, vip_show"
};

enum VAMPIRE_USER_DB_ATTRIBUTE
{
	ZOMBIE_DB_USER_ATT_LEVEL,
	ZOMBIE_DB_USER_ATT_LEVELPOINT,
	ZOMBIE_DB_USERATTRDATA_DODGE,
	ZOMBIE_DB_USERATTRDATA_WEIGHT,
	ZOMBIE_DB_USER_ATT_END,

};

enum ZOMBIE_USER_ATTRIBUTE_TYPE
{
	ZOMBIE_DB_USERATTRDATA_ID,
	ZOMBIE_DB_USERATTRDATA_TYPE,
	ZOMBIE_DB_USERATTRDATA_NAME,
	ZOMBIE_DB_USERATTRDATA_ATTACK_TYPE,
	ZOMBIE_DB_USERATTRDATA_DEF_TYPE,
	ZOMBIE_DB_USERATTRDATA_MOVE_SPEED,
	ZOMBIE_DB_USERATTRDATA_CHASE_RANGE,
	ZOMBIE_DB_USERATTRDATA_PVE_PHYATTACK_MODULUS,				// PVE英雄攻击系数
	ZOMBIE_DB_USERATTRDATA_ATTACK_SPEED,
	ZOMBIE_DB_USERATTRDATA_MAIN_ATTRIBUTE,
	ZOMBIE_DB_USERATTRDATA_BASE_POWER,
	ZOMBIE_DB_USERATTRDATA_BASE_BRAINS,
	ZOMBIE_DB_USERATTRDATA_BASE_AGILITY,
	ZOMBIE_DB_USERATTRDATA_POWER_PULLULATE,
	ZOMBIE_DB_USERATTRDATA_BRAINS_PULLULATE,
	ZOMBIE_DB_USERATTRDATA_AGILITY_PULLULATE,
	ZOMBIE_DB_USERATTRDATA_LIFE_PULLULATE,
	ZOMBIE_DB_USERATTRDATA_ATTACK_FREQUENCY,
	ZOMBIE_DB_USERATTRDATA_STATE_DAMAGE_TYPE,					// 状态伤害类型
	ZOMBIE_DB_USERATTRDATA_STATE_DAMAGE_MODULUS,				// 状态伤害系数
	ZOMBIE_DB_USERATTRDATA_DAY_VIEW,
	ZOMBIE_DB_USERATTRDATA_NIGHT_VIEW,
	ZOMBIE_DB_USERATTRDATA_COLLIDE_RADIUS,
	ZOMBIE_DB_USERATTRDATA_TURN_ABOUT_SPEED,
	ZOMBIE_DB_USERATTRDATA_RESUME_LIFE,//生命回复速度
	ZOMBIE_DB_USERATTRDATA_RESUME_MANA,
	ZOMBIE_DB_USERATTRDATA_RELIVE_MANA,
	ZOMBIE_DB_USERATTRDATA_BASE_LIFE,
	ZOMBIE_DB_USERATTRDATA_BASE_MAGIC_DEF,
	ZOMBIE_DB_USERATTRDATA_DEF_CORRECT,
	ZOMBIE_DB_USERATTRDATA_BASE_MIN_ATK,
	ZOMBIE_DB_USERATTRDATA_BASE_MAX_ATK,
	ZOMBIE_DB_USERATTRDATA_OBSIZE,
	ZOMBIE_DB_USERATTRDATA_AI_NAME,
	ZOMBIE_DB_USERATTRDATA_SKILL_INDEX,
	ZOMBIE_DB_USERATTRDATA_SKILL,
	ZOMBIE_DB_USERATTRDATA_SKILL_TYPE,
	ZOMBIE_DB_USERATTRDATA_LONGRANGE,
	ZOMBIE_DB_USERATTRDATA_OPEN,
	ZOMBIE_DB_USERATTRDATA_FREE,
	ZOMBIE_DB_USERATTRDATA_PVE_PERLEVEL_ATTACK,
	ZOMBIE_DB_USERATTRDATA_PVE_PERLEVEL_ARMOR,
	ZOMBIE_DB_USERATTRDATA_PVE_PERLEVEL_ATTACK_MAGIC,
	ZOMBIE_DB_USERATTRDATA_PVE_PERLEVEL_SKILLCD,
	ZOMBIE_DB_USERATTRDATA_PVE_PERLEVEL_LIFE,
	ZOMBIE_DB_USERATTRDATA_PVE_PERLEVEL_LIFE_RESTORE,
	ZOMBIE_DB_USERATTRDATA_DEFAULT_PASSIVE_SKILL,

	ZOMBIE_DB_USERATTRDATA_END,
};

const int NUM_SPIRIT_CORE = 39;// 装甲核心

enum USERATTR
{
    _USERATTRIB_EN = 1,        // 玩家当前En值(En仓当前的En值)
    _USERATTRIB_MANA = 2,        // Mana值
    _USERATTRIB_TEAMEXP = 3,        // 2005.11.11 队伍统计信息
    _USERATTRIB_MONEY = 4,
    _USERATTRIB_PK = 6,
    _USERATTRIB_PORFESSION = 7,
    _USERATTRIB_SIZEADD = 8,
    _USERATTRIB_MONEYSAVED = 10,
    _USERATTRIB_ADDPOINT = 11,
    _USERATTRIB_LOOKFACE = 12,
    _USERATTRIB_HEALTH = 15,
    _USERATTRIB_STORAGELEVEL = 16,
    _USERATTRIB_SPEED = 17,
    _USERATTRIB_DEGREE = 18,
    _USERATTRIB_POSE = 19,
    _USERATTRIB_PROFFER = 20,   // 帮派贡献度
    _USERATTRIB_MERCENARYEXP = 23,
    _USERATTRIB_VIRTUE = 24,
    _USERATTRIB_MANTLE = 25,
    _USERATTRIB_KEEPEFFECT = 26,
    _USERATTRIB_HAIR = 27,
    _USERATTRIB_XP_X = 28,
    _USERATTRIB_STONE_LIMIT = 29,
    _USERATTRIB_STORAGE_LIMIT = 30,
    _USERATTRIB_CRAZYFIGHT_SKILLLIMITAMOUNT = 31,   // 狂战士状态下，还能使用的右键技能次数。
    _USERATTRIB_CRAZYFIGHT_DETATIME = 32,   // 狂战士状态下，受击增量
    _USERATTRIB_KEEPEFFECT2 = 33,   //64 位 effect
    _USERATTRIB_BASESUPPORTENABLE = 34,   // 基地援助允许使用通知
    _USERATTRIB_EXP = 35,   // 机体经验
    _USERATTRIB_LEV = 36,   // 机体等级
    _USERATTRIB_USEREXP = 37,   // 机师经验
    _USERATTRIB_USERLEV = 38,   // 机师等级
    _USERATTRIB_SPIRITSTORAGELEV = 39,   // 玩家格纳库属性SPIRITstorage_lev更新
    _USERATTRIB_QUANTA = 40,   // 量子脉动舱积累值
    _USERATTRIB_TEAM_MEMBER_AMOUNT = 41,   // 队长头上显示的队伍人数
    _USERATTRIB_STONE0 = 42,
    _USERATTRIB_STONE1 = 43,
    _USERATTRIB_STONE2 = 44,

    _USERATTRIB_EXPTYPE = 50,
    _USERATTRIB_XP = 51,
    _USERATTRIB_MAXXP = 52,

    _USERATTRIB_ARMOR = 53,
    _USERATTRIB_SPIRITLOOK = 54,
    _USERATTRIB_SPIRITCOLOR = 55,           //机体变色
    _USERATTRIB_FUEL = 56,           // 燃料
    _USERATTRIB_RMB = 57,
    _USERATTRIB_MONEYSAVED2 = 58,
    _USERATTRIB_SYMBOLFEETIME = 59,           //共和国卫队徽章的状态和状态的时间
    _USERATTRIB_TEAM_STATUS_EFFECT = 60,           //
    _USERATTRIB_KILLMONSTERAMOUNT = 61,           // 杀怪只数增加action, 同步给客户端
    _USERATTRIB_ARMORLOOK = 62,
    _USERATTRIB_GENERATOR = 63,           // 能量场发生器能量
    _USERATTRIB_SPIRITDATA_EN_STATE = 64,

    _USERATTRIB_LIST1 = 65,
    _USERATTRIB_LIST2 = 66,
    _USERATTRIB_SENDGOODS = 67,
    _USERATTRIB_KEEPEFFECTEX = 68,
    _USERATTRIB_INC_KILL_HERO_AMOUNT = 69,
    _USERATTRIB_INC_KILL_MONSTER_AMOUNT = 70,
    _USERATTRIB_INC_DEADAMOUNT = 71,
    _USERATTRIB_INC_SECONDARY_ATTACK_AMOUNT = 72,
    _USERATTRIB_USERFLATEXP = 73,
    _USERATTRIB_USERFLATLEV = 74,
    _USERATTRIB_USERIBS = 75,
    _USERATTRIB_RESTORELIFE = 76,
    _USERATTRIB_RESTOREMANA = 77,

    _USERATTRIB_INC_KILL_BARRACKS_AMOUNT = 78,
    _USERATTRIB_INC_KILL_EMPACEMENT_AMOUNT = 79,
    _USERATTRIB_SERIES_KILL_AMOUNT = 80,
    _USERATTRIB_SECONDARY_ATTACK_AMOUNT_TOBS = 81,

    // SPIRIT	注意和SPIRITDATA_??? 同步
    _USERATTRIB_SPIRITDATA_OFFSET = 100,
    _USERATTRIB_TYPE = 105,

    // --- delete ----
    _USERATTRIB_REGISTER = 106,
    _USERATTRIB_LIFE = 107,
    _USERATTRIB_ADDLIFE = 108,
    _USERATTRIB_POWAER = 109,
    _USERATTRIB_BRAINS = 110,
    _USERATTRIB_AGILITY = 111,
    _USERATTRIB_MINATTACK = 112,

    _USERATTRIB_ADDPOWAER = 113,
    _USERATTRIB_ADDBRAINS = 114,
    _USERATTRIB_ADDAGILITY = 115,
    _USERATTRIB_ADDATTACK = 116,
    _USERATTRIB_ADDARMOR = 117,
    _USERATTRIB_ADDMAXLIFE = 118,
    _USERATTRIB_ADDMAMA = 119,
    _USERATTRIB_MAXATTACK = 120,
    _USERATTRIB_UPLEVATTRIB = 121,

    _USERATTRIB_DECPOWAER = 122,
    _USERATTRIB_DECBRAINS = 123,
    _USERATTRIB_DECAGILITY = 124,

    _USERATTRIB_CAP1,
    _USERATTRIB_CAP2,
    _USERATTRIB_CAP3,
    _USERATTRIB_CAP4,
    _USERATTRIB_CAP5,
    _USERATTRIB_CAP6,
    _USERATTRIB_POINT,
    _USERATTRIB_DEED,

    // --- need update value.
    _USERATTRIB_SHIELDSKILLPOWER,           // 2005.1.10 itemtype中sort=18，且type=0|1的盾的盾能量数值更新
    _USERATTRIB_COUNTERSTRIKELIGHT,         // 2005.1.25 反射之光能量积累

    _USERATTRIB_SPIRITVAR_BASE = 200,
    _USERATTRIB_SHIELD_ENERGY,

    _USERATTRIB_BODYTYPE = 211,

    _USERATTRIB_MAXLIFE = 300,
    _USERATTRIB_MAXMANA = 301,
    _USERATTRIB_MAXFUEL = 302,
    _USERATTRIB_VIPLEV = 303,
    _USERATTRIB_MOUNT = 304,
    _USERATTRIB_BUSINESSACCOUNT = 305,          //dwAttributeData:business字段值,dwAttributeDataHigh: 0:非首次登录 1:首次登录

    //add by ccw-xxx
    _USERATTRIB_EMONEY3 = 306,
    _USERATTRIB_TIME = 308,

    _USERATTRIB_ATK_DECREASE = 309,
    _USERATTRIB_DEF_DECREASE = 310,
    _USERATTRIB_ATKRATE_DECREASE = 311,
    _USERATTRIB_DEF_INCREASE = 312,
    _USERATTRIB_OXYGEN = 322,

    _USERATTRIB_AUTOEXPLORE_TIME = 323,

    // 【僵尸来了】人物战斗相关属性类型 V1.07 中， 删除掉了精确属性点/精确值
    //    _USERATTRIB_ACCURATEPOINT       = 501, //精确点数
    _USERATTRIB_SHORT_ATKMIN = 502, //攻击
    _USERATTRIB_SHORT_DEF = 503, //防御值
    _USERATTRIB_DODGEVALUE = 504, //敏捷 闪避
    //    _USERATTRIB_WEIGHTVALUE         = 505, //负重
    //    _USERATTRIB_STVALUE             = 506, //体力
    //    _USERATTRIB_ACCURATE            = 507, //精确值
    _USERATTRIB_DEFENCEPOINT = 514, //抗打击点数
    _USERATTRIB_DODGEPOINT = 515, //敏捷点数
    _USERATTRIB_POWERPOINT = 516, //力量点数
    _USERATTRIB_MANAPOINT = 517, //体力点数
    _USERATTRIB_LIFEPOINT = 518, //生命点数
    _USERATTRIB_FREEPOINT = 519, //自由点数
    _USERATTRIB_DEFENSEPOINT_TOADD = 520, //待分配抗打击点数
    _USERATTRIB_DODGEPOINT_TOADD = 521, //待分配敏捷点数
    _USERATTRIB_POWERPOINT_TOADD = 522, //待分配力量点数
    _USERATTRIB_MANAPOINT_TOADD = 523, //待分配体力点数
    _USERATTRIB_LIFEPOINT_TOADD = 524, //待分配生命点数

    //    _USERATTRIB_WEIGHT              = 525, //玩家当前负重值

    _USERATTRIB_PROFESSION_LEV = 526, //职业等级
    _USERATTRIB_PROFESSION_EXP = 527, //职业经验值
    _USERATTRIB_STAMINA = 528, //玩家精力值 09-12-22
    _USERATTRIB_EMOTIONAL_EXPREESION = 529,	//玩家表情

    //Dota
    _USERATTRIB_DELMAGIC = 550,	//
    _USERATTRIB_ADDMAGIC = 551,	//
    _USERATTRIB_POWER_DELTA = 552,
    _USERATTRIB_BRAIN_DELTA = 553,
    _USERATTRIB_AGILITY_DELTA = 554,

    _USERATTRIB_MONEY_ADDITIONAL_ACCUMULATION = 555,	//设置额外奖励金币值

    _USERATTRIB_ATTACK_DELTA = 556,
    _USERATTRIB_MONEY_RATE = 661,	//金币倍率
    _USERATTRIB_BRAIN_TO_MAGICATTACK_RATE = 663,
    _USERATTRIB_BASE_MAGICATTACK = 664,	//GS TO BS
    _USERATTRIB_BUFF_BRAIN = 665,	//BS TO GS
    _USERATTRIB_BUFF_AGILITY = 666,	//BS TO GS
    _USERATTRIB_BUFF_POWER = 667,	//BS TO GS

    _USERATTRIB_PARRY_CHANCE = 700,			// 神识，闪避几率
    _USERATTRIB_ADD_PARRY_CHANCE = 701,			// 神识，增加闪避几率
    _USERATTRIB_MAGIC_ARMOR = 702,			// 神识，魔抗
    _USERATTRIB_ADD_MAGIC_ARMOR = 703,			// 神识，增加魔抗

    _USERATTRIB_BEKILL_EXTRA_MONEY = 710,          //英雄被击杀额外金钱
    _USERATTRIB_BEKILL_SEC_EXTRA_MONEY = 711,          //英雄被助攻额外金钱
    _USERATTRIB_BANNER_ADD = 713,
    _USERATTRIB_BANNER_DEL = 714,
    _USERATTRIB_BEKILL_ADDMONEY = 717,							// 英雄被击杀，指定目标加指定金钱
    _USERATTRIB_PVE_Energy = 718,									// 同步能量
    _USERATTRIB_GuardianBeastTime = 720,							// 守护兽持续时间
    _USERATTRIB_SECOND_MONEY_INC = 722,								// 增加每秒获得额外金币
    _USERATTRIB_SECOND_MONEY_DEC = 723,								// 减少每秒获得额外金币
    _USERATTRIB_BATTLECHAUNT_GETPOINT = 724,						// 战歌得分
    _USERATTRIB_BANNER_Amount = 721,							   //更新资源数量
    _USERATTRIB_PVE_CHANGE_HERO = 800,							   // PVE切换英雄
    _USERATTRIB_PVE_CHANGE_HERO_ACK = 801,						  // PVE切换英雄

    _USERATTRIB_PVE_LEVEL = 899,
    _USERATTRIB_PVE_EXPERIENCE = 900,
    _USERATTRIB_PVE_ATTACK = 901,
    _USERATTRIB_PVE_ARMOR = 902,
    _USERATTRIB_PVE_ATTACK_MAGIC = 903,
    _USERATTRIB_PVE_SKILL_CD = 904,
    _USERATTRIB_PVE_LIFE_MAX = 905,
    _USERATTRIB_PVE_LIFE_RESTORE = 906,

    _USERATTRIB_NONE = 65535,               // 非法值
};

enum DEVIL_ATTR
{
	DEVIL_ATTRIBUTE_NONE				= 0,
	DEVIL_ATTRIBUTE_MANA				= 1,		 
	DEVIL_ATTRIBUTE_EXP, 
	DEVIL_ATTRIBUTE_LIFE,
	DEVIL_ATTRIBUTE_LEV,
	DEVIL_ATTRIBUTE_ADDITIONAL_LIFE,
	DEVIL_ATTRIBUTE_ADDITIONAL_PHY_ATK,
	DEVIL_ATTRIBUTE_ADDITIONAL_PHY_DEF,
	DEVIL_ATTRIBUTE_ADDITIONAL_MAG_ATK,
	DEVIL_ATTRIBUTE_ADDITIONAL_MAG_DEF,
	DEVIL_ATTRIBUTE_ADDITIONAL_AGILTIY,
	DEVIL_ATTRIBUTE_ADDITIONAL_MAGIC,
	DEVIL_ATTRIBUTE_LIFE_SPAN,
	DEVIL_ATTRIBUTE_EXP_PERCENT,
	DEVIL_ATTRIBUTE_ERROR	= 65535,			// 非法值
};

enum MSG_NOTIFY_CODE       //只发送到客户端的通知类型消息 服务端不做接受    
{
	TAG_ERROR,

	TAG_ERROR_END = 65535,


	TAG_ALL_END   = -1,	
};
//////////////////////////////////////////////////////////////////////////
enum XP_STATUS
{
	XPSTATUS_STOP,		// 暂停状态
	XPSTATUS_ADD,		// 增长状态
	XPSTATUS_WAIT,		// 满值状态(等待触发)
	XPSTATUS_FIRE,		// 爆发状态(已经在XP中了)
};


enum  USERSHIPJOB_SCORE
{
	USERSHIPJOBSCORE_ID				= 0,
	// -- old totalscore
	USERSHIPJOBSCORE_TOTALSCORES	,
	USERSHIPJOBSCORE_TOTALKILLS	,
	USERSHIPJOBSCORE_TOTALDEATHS	,
	USERSHIPJOBSCORE_FINISHS		,
	USERSHIPJOBSCORE_PERFECTFINISHS	,
	USERSHIPJOBSCORE_SAFEFINISHS	,
	// -- score
	USERSHIPJOBSCORE_MISSIONNAME	,
	USERSHIPJOBSCORE_MISSIONID		,
	USERSHIPJOBSCORE_BASESCORE		,
	USERSHIPJOBSCORE_KILLS			,
	USERSHIPJOBSCORE_DEATHS			,
	USERSHIPJOBSCORE_MISSIONSCORE	,
	USERSHIPJOBSCORE_MISSIONNAME_1	,
	USERSHIPJOBSCORE_MISSIONSCORE_1	,
	USERSHIPJOBSCORE_MISSIONNAME_2	,
	USERSHIPJOBSCORE_MISSIONSCORE_2	,
	USERSHIPJOBSCORE_MISSIONNAME_3	,
	USERSHIPJOBSCORE_MISSIONSCORE_3	,
	USERSHIPJOBSCORE_MISSIONNAME_4	,
	USERSHIPJOBSCORE_MISSIONSCORE_4	,
	USERSHIPJOBSCORE_MISSIONNAME_5	,
	USERSHIPJOBSCORE_MISSIONSCORE_5	,
	USERSHIPJOBSCORE_MISSIONNAME_6	,
	USERSHIPJOBSCORE_MISSIONSCORE_6	,
	USERSHIPJOBSCORE_MISSIONNAME_7	,
	USERSHIPJOBSCORE_MISSIONSCORE_7	,
	USERSHIPJOBSCORE_MISSIONNAME_8	,
	USERSHIPJOBSCORE_MISSIONSCORE_8	,
	USERSHIPJOBSCORE_PERFECTFINISH	,		// 非数据库字段，完美任务标志
	USERSHIPJOBSCORE_END_			,
};

enum SHIP_DATA
{
	SHIPDATA_ID,
		SHIPDATA_TYPE,
		SHIPDATA_NAME,
		SHIPDATA_IDNAME,
		SHIPDATA_CAPTAIN,
		SHIPDATA_CAPTAIN_LEV,
		SHIPDATA_OWNER_TYPE,
		SHIPDATA_OWNER_ID,
		SHIPDATA_RECORD_FLY,
		SHIPDATA_RECORD_FINISH, 
		SHIPDATA_NPC1,
		SHIPDATA_NPC2,
		SHIPDATA_NPC3,
		SHIPDATA_NPC4,
		SHIPDATA_NPC5,
		SHIPDATA_NPC6,
		SHIPDATA_NPC7,
		SHIPDATA_NPC8,		
		SHIPDATA_LOOKFACE,
};

enum SHIPJOB_TYPEDATA
{// "shipmission"
	SHIPJOB_ID				, 
		SHIPJOB_Name			,
		SHIPJOB_Sort			,
		SHIPJOB_Type			,	// 服务端根据type字段，在任务进行时采用相应的主任务完成判断方式。
		SHIPJOB_Monster1		,
		SHIPJOB_Num1			,
		SHIPJOB_Monster2		,
		SHIPJOB_Num2			,
		SHIPJOB_Monster3		,
		SHIPJOB_Num3			,
		SHIPJOB_Monster4		,
		SHIPJOB_Num4			,
		SHIPJOB_TargetMapGenNO	,
		SHIPJOB_Shipid			,
		SHIPJOB_Path			,
		SHIPJOB_Maxplayers		,
		SHIPJOB_Req_minlev		,
		SHIPJOB_Req_maxlev		,
		SHIPJOB_Req_robottype	,
		SHIPJOB_Req_sex			,
		SHIPJOB_Req_item		,
		SHIPJOB_Limit_time		,
		SHIPJOB_Introduce		,
		SHIPJOB_Action			,
		SHIPJOB_Task			,
		SHIPJOB_Req_maxreborn	,
		SHIPJOB_MissionNum		,	// 任务（主+分支）总数
		SHIPJOB_DeathPunish		,	// 死亡惩罚
		SHIPJOB_FinishBonus		,
		SHIPJOB_SurviveBonus	,
		SHIPJOB_Speed_finish	,	// 主任务的最短完成时间
		SHIPJOB_Speed_finish_time,	// 主任务最短时间达成时的系统时间
		SHIPJOB_Speed_perfect	,	// 完美评分任务的最短完成时间
		SHIPJOB_Speed_perfect_time, // 完美评分任务最短时间达成时的系统时间
		SHIPJOB_Destroy_num,
		SHIPJOB_Secret_num,
		SHIPJOB_Main_score,
		SHIPJOB_Monster1_score,
		SHIPJOB_Monster2_score,
		SHIPJOB_Monster3_score,
		SHIPJOB_Monster4_score,
		SHIPJOB_Destroy_item_score,
		SHIPJOB_Secret_score,
		SHIPJOB_Total_score,
		SHIPJOB_req_battlelev,
		SHIPJOB_need_score,
		SHIPJOB_prize_item,
		SHIPJOB_prize_money,
		SHIPJOB_prize_stone,
		
		SHIPJOB_action_begin,		//进入副本地图之后执行的action
		SHIPJOB_action_finish,		//任务完成后执行的action
		
		SHIPJOB_action_levexp_79,
		SHIPJOB_action_levexp_80_89,
		SHIPJOB_action_levexp_90_99,	
		SHIPJOB_action_levexp_100_109,	
		SHIPJOB_action_levexp_110_119,	
		SHIPJOB_action_levexp_120,	
		SHIPJOB_action_rankexp_12,		
		SHIPJOB_action_rankexp_13,		
		SHIPJOB_action_rankexp_14,		
		SHIPJOB_action_rankexp_15,		
		SHIPJOB_action_rankexp_16,		
		SHIPJOB_action_rankexp_17,
		SHIPJOB_action_Stat_monster1,
		SHIPJOB_action_Stat_monster2,
		SHIPJOB_action_Stat_monster3,
		SHIPJOB_action_Stat_monster4,
		// 字段定义结束标志
		SHIPJOB_End
};

enum
{
	//需要重新计算共享战斗力的部分,CalcBattleEffect用
	//重新计算家族分享战斗力
	RECAL_FAMILY_SHARE = 0x1,
	
};

//以下是物品相关的枚举定义
//物品类型枚举
enum ITEMTYPEDATA
{
	ITEMTYPEDATA_ID	= 0,
	ITEMTYPEDATA_NAME,
	ITEMTYPEDATA_LEVEL,				
	ITEMTYPEDATA_WEIGHT_h,				
	ITEMTYPEDATA_PRICE,
	ITEMTYPEDATA_ACTION,
	ITEMTYPEDATA_LIFE,
	ITEMTYPEDATA_MANA,					// 记录该物品增加内力值上限的效果
	ITEMTYPEDATA_MANA_RE,				// 记录该物品的内力恢复调整值效果，正值表示内力回复增长，负值表示内力回复降低
	ITEMTYPEDATA_MAX_POWER,			
	ITEMTYPEDATA_CHARGE_POWER, //10			
	ITEMTYPEDATA_AMOUNTLIMIT,
	ITEMTYPEDATA_IDENT_h,
	ITEMTYPEDATA_EQUIP_TYPE,
	ITEMTYPEDATA_EQUIP_LEVEL,
	ITEMTYPEDATA_EQUIP_SKILL,
	ITEMTYPEDATA_GEM1_h,
	ITEMTYPEDATA_GEM2_h,
	ITEMTYPEDATA_MAGIC1_h,
	ITEMTYPEDATA_MAGIC2_h,
	ITEMTYPEDATA_MAGIC3_h,//20
	ITEMTYPEDATA_MAXRANGE,
	ITEMTYPEDATA_ATKSPEED,
	ITEMTYPEDATA_PRECISION,
	ITEMTYPEDATA_PACK_SIZE,
	ITEMTYPEDATA_PACK_WIDTH,
	ITEMTYPEDATA_MAX_SHORT_ATK,
	ITEMTYPEDATA_MIN_SHORT_ATK,
	ITEMTYPEDATA_MAX_LONG_ATK,
	ITEMTYPEDATA_MIN_LONG_ATK,//30
	ITEMTYPEDATA_SHORT_DEF,		
	ITEMTYPEDATA_LONG_DEF,		
	ITEMTYPEDATA_DEFENCE_MAX,
	ITEMTYPEDATA_DEFENCE,
	ITEMTYPEDATA_DODGE,
	ITEMTYPEDATA_VALUE,
	ITEMTYPEDATA_UPLEVTIME,
	ITEMTYPEDATA_DECAYDEF,
	ITEMTYPEDATA_SHAPE_h,
	ITEMTYPEDATA_RMB,//40
	ITEMTYPEDATA_REQ_ENGINE,		
	ITEMTYPEDATA_REQ_GUARD,
	ITEMTYPEDATA_ADDITIONAL_LEVEL,
	ITEMTYPEDATA_SELL_TYPE,		//本字段以二进制进行表示，每一位代表一个拍卖物品组，同一个物品可以同时存在多个拍卖物品组中。如果拍卖的物品为拍卖物品组中的物品，则在生成拍卖物品时，从该组中随机抽取一个

	ITEMTYPEDATA_DFP,			//防御点数
	ITEMTYPEDATA_PRESP,			//精确属性点数
	ITEMTYPEDATA_PWP,			//力量属性点数
	ITEMTYPEDATA_SMP,			//敏捷 闪避
	ITEMTYPEDATA_STP,			//体力属性点数
	ITEMTYPEDATA_LIFEP,			//生命属性点数
	ITEMTYPEDATA_DFVAULE,		//防御值
	ITEMTYPEDATA_PRESVALUE,		//精确值
	ITEMTYPEDATA_PWVALUE,		//负重值
	ITEMTYPEDATA_SMVALUE,		//敏捷 闪避
	ITEMTYPEDATA_STVALUE,		//体力值

	ITEMTYPEDATA_HEADSHOT_RATE,			//装备爆头率
	ITEMTYPEDATA_HOLDKEY_TIME_LIMIT,	//蓄力或瞄准时间上限
	ITEMTYPEDATA_HOLDKEY_GAIN,			//瞄准提升爆头率上限或近战武器提升攻击上限
	ITEMTYPEDATA_NEEDAMMO_NUM,			//枪械一次射击需要的子弹数
	ITEMTYPEDATA_SUPPRESS_PROBALITY,	//枪械射击时造成怪物压制几率
	ITEMTYPEDATA_BACK_OFF,	            //枪械射击时震退几率
	ITEMTYPEDATA_BREAK_BODY,	         //枪械射击时打断肢体的几率
	ITEMTYPEDATA_SHOT_WITH,	          
	ITEMTYPEDATA_ALLOW_REPAIR,	        //是否允许修理  1：不允许  0：允许      
	ITEMTYPEDATA_TRIGGERSKILL_ID,       //物品触发技能ID,与magic表中ID字段同	shf
	ITEMTYPEDATA_TRIGGERSKILL_COOLTIME, //物品触发技能冷却时间，使用6位数字表示；前2位表示物品公共冷却时间类型；后4位数字表示冷却时间;
	ITEMTYPEDATA_EFFECTIVE_LONG,        //时效物品有效时长
	ITEMTYPEDATA_FIRE_TYPE,				//引火属性 TQD16910【末日危机】关于燃烧爆炸的设计总案
	ITEMTYPEDATA_BURN,					//燃烧属性 TQD16910【末日危机】关于燃烧爆炸的设计总案
	ITEMTYPEDATA_BURN_RANGE,			//火焰范围 TQD16910【末日危机】关于燃烧爆炸的设计总案
	ITEMTYPEDATA_BOMB,					//爆炸属性 TQD16910【末日危机】关于燃烧爆炸的设计总案

	//Dota 新增
	ITEMTYPEDATA_COMPONENT0,		//合成所需部件
	ITEMTYPEDATA_COMPONENT1,
	ITEMTYPEDATA_COMPONENT2,
	ITEMTYPEDATA_COMPONENT3,
	ITEMTYPEDATA_COMPONENT4,
	ITEMTYPEDATA_DOTA_POWER,
	ITEMTYPEDATA_DOTA_BRAIN,
	ITEMTYPEDATA_DOTA_AGILITY,
	ITEMTYPEDATA_DOTA_DAMAGE0_USE,
	ITEMTYPEDATA_DOTA_DAMAGE1_USE,
	ITEMTYPEDATA_DOTA_DAMAGE2_USE,
	ITEMTYPEDATA_DOTA_DAMAGE0_EQUIP,
	ITEMTYPEDATA_DOTA_DAMAGE1_EQUIP,
	ITEMTYPEDATA_DOTA_DAMAGE2_EQUIP,
	ITEMTYPEDATA_DOTA_DAMAGE0_REMOVE,
	ITEMTYPEDATA_DOTA_DAMAGE1_REMOVE,
	ITEMTYPEDATA_DOTA_DAMAGE2_REMOVE,
	ITEMTYPEDATA_DOTA_SECADDMONEY,

	ITEMTYPEDATA_MAX_ITEMTYPE,

	//转义
	ITEMTYPEDATA_AMOUNT_h = ITEMTYPEDATA_AMOUNTLIMIT,	
	ITEMTYPEDATA_AMOUNTLIMIT_h = ITEMTYPEDATA_AMOUNTLIMIT,

	////////////////////////////////////////////////
	ITEMTYPEDATA_DELETE	=	ITEMTYPEDATA_MAX_ITEMTYPE	+	1,	// 后面是无效的字段，请勿直接使用。仅用于分表判断 46
// 	ITEMTYPEDATA_MINRANGE,
	ITEMTYPEDATA_EQUIP_POS,					// 可装备的位置
	ITEMTYPEDATA_EQUIP_PROF,				// 机体类型要求
// 	ITEMTYPEDATA_EQUIP_TYPE1,				// 装备要求
	ITEMTYPEDATA_EQUIP_DATA1,				// 装备要求
// 	ITEMTYPEDATA_EQUIP_TYPE2,				// 装备要求
// 	ITEMTYPEDATA_EQUIP_DATA2,				// 装备要求
// 	ITEMTYPEDATA_ATTACK_CAP,				// 对技能和弹药的装备前提
	ITEMTYPEDATA_PACK_WEIGHTLIMIT,
	ITEMTYPEDATA_REPAIR_SELF,				// 每3秒修复的点数
// 	ITEMTYPEDATA_REPAIR_TYPE1,				// 自修装置，修理类型
// 	ITEMTYPEDATA_REPAIR_CAP1, 				// 自修装置，修改能力
	ITEMTYPEDATA_REPAIR_TYPE2,
	ITEMTYPEDATA_REPAIR_CAP2,//60
	ITEMTYPEDATA_REPAIR_TYPE3,
	ITEMTYPEDATA_REPAIR_CAP3,
// 	ITEMTYPEDATA_MAXATK_h,			// 
// 	ITEMTYPEDATA_MINATK_h,
	ITEMTYPEDATA_FIGHTERATK_h,
	ITEMTYPEDATA_GUNNERATK_h,
	ITEMTYPEDATA_ENERGYATK_h,
// 	ITEMTYPEDATA_FINALDEF,
	ITEMTYPEDATA_SWITCH,			// head_switch 
	ITEMTYPEDATA_AMMO_TYPE,
// 	ITEMTYPEDATA_PK_DEF,		//新加字段pk_def：针对atk_fighter、atk_gunne、atk_energy的防御数值
// 	ITEMTYPEDATA_POINT_h,
// 	ITEMTYPEDATA_UPLEVEL_RULE,	//升级规则,字段后3位代表武器等级。前面的位代表升级规则，对应武器item表中的uplv_rule字段
// 	ITEMTYPEDATA_QUALITY_h,		//品质
// 	ITEMTYPEDATA_SORT_h,
// 
// 
// 	ITEMTYPEDATA_SPRITE_LEVEL = 200,		// 精灵等级 装备精灵的玩家的等级必须不能少于精灵的等级×2。
// 	ITEMTYPEDATA_GROWTH_h = 201,		// 精灵原始成长率
// 	ITEMTYPEDATA_LEVEXP = 202,				// 精灵升级到下一级需要的经验值
	//配件特殊
	//配件的item字段使用定制
	ITEMTYPEDATA_FITTINGS_COMBIME_1 = ITEMTYPEDATA_REPAIR_TYPE2,//------------合成的搭配1
	ITEMTYPEDATA_FITTINGS_COMBIME_2 = ITEMTYPEDATA_REPAIR_CAP2,//------------合成的搭配2
	ITEMTYPEDATA_FITTINGS_COMBIME_ODDS = ITEMTYPEDATA_REPAIR_CAP3, //------------合成几率
	ITEMTYPEDATA_FITTINGS_COMBIME_RESULT = ITEMTYPEDATA_REPAIR_TYPE3,//------------合成结果

	//机枪和霰弹	
// 	ITEMTYPEDATA_AMMO_CANISTER			= ITEMTYPEDATA_PACK_SIZE,			//-----------霰弹（0为普通，1为霰弹）
	ITEMTYPEDATA_AMMO_STRAFE			= ITEMTYPEDATA_PACK_WEIGHTLIMIT,	//-----------机枪每次发射的子弹发数
	
	//武器进化
// 	ITEMTYPEDATA_EVOLVE_1				= ITEMTYPEDATA_DEFENCE,				//-----------表示第一钟进化路线
// 	ITEMTYPEDATA_EVOLVE_2				= ITEMTYPEDATA_DODGE,				//-----------表示第二钟进化路线
// 	ITEMTYPEDATA_EVOLVE_3				= ITEMTYPEDATA_VALUE,				//-----------表示第三钟进化路线
// 
// 	//EN库、推进器重用
// 	ITEMTYPEDATA_EN_REGENERATE			= ITEMTYPEDATA_SWITCH,				//-----------自动回复EN参数
// 	ITEMTYPEDATA_FU_REGENERATE			= ITEMTYPEDATA_SWITCH,				//-----------自动回复FU参数
// 		
// 	//配件特殊
// 	//隔板配件重用
// 	ITEMTYPEDATA_FITTINGS_REGENERATE_HP	= ITEMTYPEDATA_REPAIR_SELF,
// 	ITEMTYPEDATA_FITTINGS_REGENERATE_EN	= ITEMTYPEDATA_REPAIR_TYPE1,
// 	ITEMTYPEDATA_FITTINGS_REGENERATE_FU	= ITEMTYPEDATA_REPAIR_CAP1,
// 	ITEMTYPEDATA_FITTINGS_MAX_FU	= ITEMTYPEDATA_PACK_SIZE,//-----------修正燃料上限
// 	ITEMTYPEDATA_FITTINGS_IMMUNITY_TYPE = ITEMTYPEDATA_SWITCH,//--------不良属性的免疫
// 	ITEMTYPEDATA_FITTINGS_IMMUNITY_LEVEL = ITEMTYPEDATA_AMMO_TYPE,//--------不良属性的免疫的等级限制
// 	//头部配件重用
// 	ITEMTYPEDATA_FITTINGS_PRODUCE_EXP	= ITEMTYPEDATA_REPAIR_SELF,
// 	ITEMTYPEDATA_FITTINGS_PRODUCE_GOLD	= ITEMTYPEDATA_REPAIR_TYPE1,
// 	ITEMTYPEDATA_FITTINGS_PRODUCE_STONE	= ITEMTYPEDATA_REPAIR_CAP1,
	ITEMTYPEDATA_FITTINGS_SKILL_CAPACITY	= ITEMTYPEDATA_PACK_WEIGHTLIMIT,//----------代表增及的主技能容量上限数值

	//地雷
	ITEMTYPEDATA_LAYMINE_INTONE			= ITEMTYPEDATA_REPAIR_SELF,		//-----------自动布雷时是布雷的时间间隔 
// 	ITEMTYPEDATA_REMOTEMINE_RANGE		= ITEMTYPEDATA_MAXRANGE,			//-----------机雷的安装范围
};

//物品类别
enum ITEMTYPECATE{
	ITEMDATA_SORT1 = 0,
	ITEMDATA_SORT2,
	ITEMDATA_SORT3,
	ITEMDATA_SORT4,
	ITEMDATA_SORT5,
	ITEMDATA_EQUIPTYPE,
	ITEMDATA_EQUIPSUBTYPE,
	ITEMDATA_EQUIPINTERNALLEVEL,
	ITEMDATA_QUALITY,
	ITEMDATA_EQUIPTYPE_1,		
	ITEMDATA_SKILLTYPE,			
	ITEMDATA_AMMO_HEAD,
	ITEMDATA_SPECIALWEAPONE,
	ITEMDATA_TYPEID_END	
};

//物品表枚举定义
enum ITEMDATA
{
	ITEMDATA_ID			= 0,			
	ITEMDATA_TYPE,
	ITEMDATA_OWNERTYPE,
	ITEMDATA_OWNERID,
	ITEMDATA_PLAYERID,
	ITEMDATA_POSDIR,
	ITEMDATA_AMOUNT,
	ITEMDATA_IDENT,
	ITEMDATA_DATA,
	ITEMDATA_PLUNDER,     //可疑物品标识
	ITEMDATA_SALE_TIME,   //销售申请日期
	ITEMDATA_TIMELIMIT,   //物品使用时限
// 	//////////////////
// 	ix,	ITEMDATA_MAX_ITEM = ix - 1,	// item最大字段，请勿直接使用。仅用于分表判断
// 	/////////////////////////////////////////////
		
	ITEMDATA_MAXHP,	
	ITEMDATA_WEIGHT,
	//////////////////
	ix,	ITEMDATA_MAX_ITEM = ix - 1,	// item最大字段，请勿直接使用。仅用于分表判断
	/////////////////////////////////////////////
	ITEMDATA_DATA1,	
	ITEMDATA_DATA2,
	ITEMDATA_DATA3,
	ITEMDATA_DATA4,
	ITEMDATA_SHAPE,
	ITEMDATA_ADDLEVEL,
	
	ITEMDATA_HOTATK,
	ITEMDATA_SHAKEATK,
	ITEMDATA_COLDATK,
	ITEMDATA_LIGHTATK,
	ITEMDATA_CHK_SUM,
	ITEMDATA_FORGENAME,
	ITEMDATA_SPECIALFLAG,//装备灵魂血契系统 tcp 2007-3-18 add
	ITEMDATA_DATA5,		//表示第三洞的情况。与data1～data2含义相同。
	ITEMDATA_DATA6,		//表示第四洞的情况。与data1～data2含义相同。
	ITEMDATA_WEIGHT3,	//
	ITEMDATA_WEIGHT4,
	ITEMDATA_ADDLEVEL_EXP,
	ITEMDATA_UP_ADDLEVEL_TODAY,
	ITEMDATA_DEAD_TIME,               //时效物品失效时间	srf
	iy,ITEMDATA_MAX_ITEMEX=iy-1,	// itemex最大字段，请勿直接使用。仅用于分表判断
	/////////////////////////////////////////////////
	// old field
	ITEMDATA_GEM1=ITEMDATA_DATA1,				//改用作配件标识
	ITEMDATA_GEM2=ITEMDATA_DATA2,

	// 设计图记录下机体的ID和TYPE，用于客户端显示机体属性。
	ITEMDATA_SPIRIT_ID = ITEMDATA_DATA,
	ITEMDATA_SPIRIT_COLOR=ITEMDATA_MAXHP,
	ITEMDATA_SPIRIT_LEVEL=ITEMDATA_WEIGHT,
	// data1~4合成为SPIRIT_TYPE
	
	
	/////////////////////////////////////////////////
	// deleted field
	ITEMDATA_DELETE=ITEMDATA_MAX_ITEMEX+1,	// 后面是无效的字段，请勿直接使用。仅用于兼容代码
	
	//		ITEMDATA_MAXATK,			//2005-2-28 以下修改只是针对武器
	//	原先武器的普通攻击有最大与最小两个值，攻击的数值在该范围随机取值
	//	现在修改为：
	//	只保留一个普通攻击数值（max_atk），原最小攻击（min_atk）修改为武器普通攻击的上下波动率 
	//		ITEMDATA_MINATK,			//
	ITEMDATA_FIGHTERATK,
	ITEMDATA_GUNNERATK,
	ITEMDATA_ENERGYATK,
	ITEMDATA_EXP,
	//		ITEMDATA_LEVEL,					// 物品等级
	ITEMDATA_POINT,
	//		ITEMDATA_QUALITY,				// 品质，武器用
	ITEMDATA_UNIDENT_BIM_REALTYPE,	// 2007.03.16 未鉴定增益模块真实的TYPE值
	ITEMDATA_UNIDENT_BIM_REALSHAPE,	// 2007.03.16 未鉴定增益模块真实的Shape值
	
	/////////////////////////////////////
	ITEMDATA_INTIMACY=80,				//? for mount, NOTE: no this field
	
	// for sprite -- add by zlong 2003-12-05
	ITEMDATA_ATTRIB	= 91,
	ITEMDATA_GROWTH	= 92,
};

//物品鉴定类型枚举定义
enum ITEM_IDENT
{
	_ITEM_STATUS_NOT_IDENT		= 1,		// 未鉴定 0x0001
	_ITEM_STATUS_CANNOT_REPAIR	= 2,		// 不可修复 0x0002
	_ITEM_STATUS_NEVER_DAMAGE	= 4,		// 永不磨损 0x0004
	_ITEM_STATUS_INSTANTTMPPACK	= 8,		// 即时触发地图物品并且是放入临时仓中的类型物品 0x0000
	_ITEM_STATUS_PROP			= 16,		// 道具0x0010
	_ITEM_STATUS_GROW			= 32,		// 可成长,0x0020
	_ITEM_STATUS_MONOPOLY		= 64,		// 独占(死亡不掉落)0x0040
	_ITEM_STATUS_CANNOT_STORAGE	= 128,		// 不可存储0x0080
	_ITEM_STATUS_CANNOT_SALE	= 256,		// 不可出售	0x0100
	_ITEM_STATUS_CANNOT_DROP_IN_DIE = 512,		// 不可掉落物品(死亡不掉落)0x0200		
	_ITEM_STATUS_UNDISPEAR_IN_MAP = 1024,	// 在地图上不会消失的物品 tcp 2007-4-15 add 机战新增功能需求0x0400	
	_ITEM_STATUS_CANNOT_DISCARD = 2048,		// 不可丢弃	0x0800
	_ITEM_STATUS_RARITY			= 4096,		// 贵重物品 0x1000
	_ITEM_STATUS_CHK_SUM_ITEM	= 8192,		// 需检验物品 0x2000
	_ITEM_STATUS_TiMetal		= 16384,	// 钛合金 0x4000
	_ITEM_STATUS_UNEXCHANGE		= 32768,	// 不可交易 0x8000
     //add by ccw_xxx 物品的特殊交易属性
	 _ITEM_SPECIAL_MONOPOLY1 =     65536,  //65536
	 _ITEM_SPECIAL_MONOPOLY2 =     131072,  //65536 * 2
	 
	 //以下废弃不用了///////////////////////////////////////////////////
	 _ITEM_STATUS_FORBID_GNDAIR	= 131072,		// 子弹类型禁止地对空 0x20000
	 _ITEM_STATUS_FORBID_AIRGND	= 131072,		// 子弹类型禁止空对地
	 _ITEM_STATUS_FORBID_AIRAIR	= 131072,		// 子弹类型禁止空对空
	 _ITEM_STATUS_FORBID_UNIVERSE= 131072,		// 子弹类型禁止在宇宙场景中使用
	 _ITEM_STATUS_BLACKMARKET	= 131072,		// 黑市里才能买到的物品，要用原石购买
	_ITEM_STATUS_ADJUSTTOGETHER	= 131072,		// 只能在调合状态下使用

	_ITEM_USE0_TOUCH_SKILL = 0x40000,      // 使用物品1 触发技能
	_ITEM_USE1_TOUCH_SKILL = 0x80000,      // 使用物品0 触发技能
	_ITEM_USE2_TOUCH_SKILL = 0x100000,      // 使用物品2 触发技能
	_ITEM_REPEAT_TOUCH = 0x200000,      // 是否重复触发
	_ITEM_REMOVE0_LAST_TOUCH = 0x400000,      // 是否仅在物品最后一件时触发
	_ITEM_REMOVE1_LAST_TOUCH = 0x800000,      // 是否仅在物品最后一件时触发
	_ITEM_REMOVE2_LAST_TOUCH = 0x1000000,      // 是否仅在物品最后一件时触发
	_ITEM_DIRECTNESS_USE_TOUCH = 0x2000000,      // 背包满直接使用的物品
};

enum
{
	ITEM_USAGE_NONE = 0,
	ITEM_USAGE_SELF	= 1,
	ITEM_USAGE_SINGLE,
	ITEM_USAGE_GROUP,
};

//装备类别枚举定义
enum
{
	EQUIPSORT_SHIELD				= 2,	// 盾
	EQUIPSORT_WEAPON1HAND			= 4,	// 单手武器
	EQUIPSORT_WEAPON2HAND			= 3,	// 双手武器
	EQUIPSORT_WEAPONPAIR			= 5,	// 对武器
	EQUIPSORT_EQUIP					= 7,	// 装备

};


// 4以下暂时不定义，现在是表示没有品
enum ITEM_QUALITY_DATA
{
	ITEM_QUALITY_DATA_NORMAL	= 5,	// 白品
	ITEM_QUALITY_DATA_GOOD		= 6,	// 良品
	ITEM_QUALITY_DATA_TOP		= 7,	// 上品
	ITEM_QUALITY_DATA_PERFECT	= 8,	// 精品
	ITEM_QUALITY_DATA_SUPERIOR	= 9,	// 极品
};

//物品类型枚举定义
enum NEWTYPE
{
	NEWTYPE_None=0,
	NEWTYPE_Thruster,					// 推进器
	NEWTYPE_Expend,						// 消耗品
	NEWTYPE_Weapon,						// 武器类
	NEWTYPE_Shield,						// 盾牌
	NEWTYPE_UserHat,					// 帽子，机师装备，头
	NEWTYPE_UserCloth,					// 衣服，机师装备，身体
	NEWTYPE_UserJacket,					// 外套
	NEWTYPE_UserLeftHand,				// 左戒指，或左手套，机师装备，左手
	NEWTYPE_UserRightHand,				// 右戒指，或右手套，机师装备，右手
	NEWTYPE_UserShoes,					// 鞋，机师装备
	NEWTYPE_UserNecklace,				// 项链(颈饰)，机师装备
	NEWTYPE_UserTwoHands,				// 机师装备，双手，装备在右手上，但是同时占用左手位置
	NEWTYPE_Equipment,					// 装备类
	NEWTYPE_TaskItem,					// 任务物品
	NEWTYPE_Gem,						// 龙珠、流星
	NEWTYPE_Status,						// 状态类(解毒剂？)
	NEWTYPE_Medicine,					// 药品(红蓝药)
	NEWTYPE_Ammo,						// 弹药(箭支)
	NEWTYPE_Mine,						// 地雷
	NEWTYPE_SpiritHelmet,				// 头盔（新增，0711XXX,0721XXX）
	NEWTYPE_Spirit_Ring,					// 手镯（新增，0712XXX,0722XXX）
	NEWTYPE_Spirit_Necklace,				// 项链（新增，0713XXX,0723XXX）
	NEWTYPE_Spirit_Jacket,				// 外套（新增，188XXXX）
	NEWTYPE_Spirit_Mount,				// 坐骑（新增，36XXXXX）
	NEWTYPE_Weapon1Hand,				// 单手武器
	NEWTYPE_Weapon2Hand,				// 双手武器
	NEWTYPE_WeaponPair,					// 对武器
	NEWTYPE_Spirit_Coat,			// 防御装置
	NEWTYPE_Spirit_Shoes,				// 闪避装置
	NEWTYPE_Weapon1Hand1Shoulder,		// 单手单肩武器
	NEWTYPE_Weapon2Hand1Shoulder,		// 双手单肩武器
	NEWTYPE_Weapon2Hand2Shoulder,		// 双手双肩武器
	NEWTYPE_EquipEnable,				// 可装备的物品
	NEWTYPE_EatEnable,					// 可吃的物品
	NEWTYPE_InstantMapItem,				// 可装备的物品
	NEWTYPE_ShoulderEngaged,			// 占用肩位置的装备。武器有可能装备在手上，但也占用肩的位置
	NEWTYPE_LeftHandEngaged,			// 占用左手位置的装备。武器有可能装备在右手上，但也占用左手的位置
	NEWTYPE_EnPack,						// EN舱
	NEWTYPE_Blueprint,					// 机体设计图
	NEWTYPE_HeadLoop,					// 头部回路
	NEWTYPE_AmplifierChip,				// 增幅器芯片
	NEWTYPE_Engine,						// 发动机
	NEWTYPE_Amplifier,					// 增幅器
	NEWTYPE_BackPackItem,				// 货舱物品
	NEWTYPE_EnergyGenerator,			// 能量场发生器 906
	NEWTYPE_OtherChip,					// 其它控制芯片 907
	NEWTYPE_SpiritHpGenerator,			// 机体HP增加模块 908
	NEWTYPE_AbsorbEnergyShield,			// 可吸收能量的盾牌
	NEWTYPE_EngineRoom,					// 可放入机舱的物品
	NEWTYPE_Human,						// 人类的物品
	NEWTYPE_UnequipDisable,				// 不可卸载的装备
	NEWTYPE_EquipOnlyOne,				// 只能同时装备一件(在机舱里)
	NEWTYPE_SubTypeEquipOnlyOne,		// 只能同时装备同一子类的物品一件(在机舱里)(振幅器，头部回路)
	NEWTYPE_RandomShape,				// 创建时会随机变形
	NEWTYPE_EquipmentChip,				// 标准芯片
	NEWTYPE_HasFettings,				// 可以嵌入武器芯片
	NEWTYPE_Ore,						// 矿石
	NEWTYPE_Reel,						// 卷轴
	NEWTYPE_IdentReel,					// 鉴定卷轴
	NEWTYPE_PickMine,					// 采矿工具
	NEWTYPE_SpiritOuterEquipment,		// 机体外部装置
	NWETYPE_SkillBookItem,				// 技能书物品
	NEWTYPE_ChgLookface,				// 换头像用物品,自动触发action的物品
	NEWTYPE_NeedShape,					// 是否需要加入位置判断
	NEWTYPE_BuildInModule,				// 机体增益模块(内置模块) 909
	NEWTYPE_ExpBall,					// 经验球
	NEWTYPE_AddLevStone,				// 装备追加原石
	NEWTYPE_AddLevEquip,				// 可追加装备		
	NEWTYPE_Symbol,						// 共和国徽章				
	NEWTYPE_ChipDefenceShift,			// 90700001，机体防御转换装置		
	NEWTYPE_ChipAutoAttack,				// 90700011，自动攻击装置
	NEWTYPE_Musket,						// 机枪，
	NEWTYPE_VirtualSpace,				// 虚空间扩展舱 目前暂定为共为3类，每类都有5种的品质，即游戏中共有15个虚空间扩展舱。物品ID：51000205~51000229。
	NEWTYPE_Bow,					    // 弓弩
	NEWTYPE_ShotGun	,					// 散弹枪
	NEWTYPE_HandGun,					// 手枪
	NEWTYPE_FlameThrowerGun,			// 火焰枪
	NEWTYPE_Spear,						// 矛
	NEWTYPE_ReapHook,					// 镰
	NEWTYPE_BroadSword,					// 刀
	NEWTYPE_Pala_Spear,					// 长枪（新增，0390XXX）
	NEWTYPE_Sword,						//剑
	NEWTYPE_Harmer,						//锤
	NEWTYPE_Axe,						//斧头
	NEWTYPE_Stick,						//棍

	NEWTYPE_MachineSaw,					//电锯	
	NEWTYPE_MachineStick,				//电棍
	NEWTYPE_FireExtinguisher,			//灭火器
	NEWTYPE_FlameThrower,				//喷火器

	NEWTYPE_SnipeGun,					// 狙击枪	
	NEWTYPE_IceWeapon,					// 冰冻类			
	NEWTYPE_ShakeWeapon,				// 震荡类					
	NEWTYPE_RMBEffectChatItem,			// 增值聊天效果物品
	NEWTYPE_SpecialShotGun_Ammo,		// 散弹枪特殊子弹
	NEWTYPE_ShotGun_Ammo,			    // 散弹枪子弹
	NEWTYPE_HandGun_Ammo,				// 手枪子弹
	NEWTYPE_SpecialHandGun_Ammo,		// 手枪特殊子弹
	NEWTYPE_SpecialMusketGun_Ammo,		// 步枪特殊子弹		
	NEWTYPE_MusketGun_Ammo,				// 机枪子弹	
	NEWTYPE_FreezeGun,
	NEWTYPE_NearWarWeapon,				// 近战武器
	NEWTYPE_EnergyGeneratorAccelerate,  // 能量场发生器回复加速器
	NEWTYPE_Can_UpQuality,				// 可改良物品
    NEWTYPE_Can_DownLevelEquiptment,	// 可降级装备
	NEWTYPE_Can_UpLevelEquiptment,		// 可升级装备
	NEWTYPE_Can_MakeHoleEquipByUseItem,	// 可使用某物品进行开洞的装备
	NEWTYPE_Can_MakeHoleEquipByNpc,		// 可通过NPC来进行开洞的装备
	NEWTYPE_ModelLevUpGradeItem,		// 机体型级升型物品
	NEWTYPE_Crystal,					// 水晶
	NEWTYPE_Crystal0,					// 水晶I
	NEWTYPE_Crystal1,					// 水晶II
	NEWTYPE_Crystal2,					// 水晶III
	NEWTYPE_Spirit_Color_Item,			// 机体染色剂2007-1-22 tcp add 机体换色物品制作
	NEWTYPE_Gem_ItemEx,					// 2007.02.13 为特殊itemex表 51000801-51000899
	NEWTYPE_WEAPONSKILL_BOOK,			// 武器熟练度技能书
	NEWTYPE_SPIRITSKILL_BOOK,			// 机体熟练度技能书
	NEWTYPE_MAGICSKILL_BOOK,			// 魔法熟练度技能书
	NEWTYPE_SPIRITSKILL_USEIDEA,			// 机体操控等级使用心得
	NEWTYPE_ExpBall_Special,			// 特制经验球
	NEWTYPE_Drop_Disappear,				// 2007.03.26 丢弃立刻消失的物品类型
	NEWTYPE_Trump,						// 法宝
	NEWTYPE_Trump_Fixed,				// 固定型法宝
	NEWTYPE_Trump_Change,				// 变化型法宝
	NEWTYPE_ExpBall_DoubleEffect,		// 经验球具有双倍效果
	NEWTYPE_SynWar_Reborn_Medicine,		// 帮派战复活药
	NEWTYPE_Cannon_Reborn_Medicine,		// 浮游炮复活药
	NEWTYPE_ExpBall_SkillUp,			// 通用技能经验值球
	NEWTYPE_Guard_Equip,				// 侍卫装备
	NEWTYPE_Guard_Equip_Compound,		// 侍卫装备合成材料
	NEWTYPE_Guard_Equip_Stone,			// 侍卫装备―百炼丹
	NEWTYPE_Guard_Equip_Common_Stone,	// 侍卫装备―普通百炼丹
	NEWTYPE_Guard_Equip_Enhanced_Stone,	// 侍卫装备―强效百炼丹
	NEWTYPE_Guard,						// 侍卫
	NEWTYPE_Marry_Jacket,				// 新郎新娘装
	NEWTYPE_Guard_Jacket,               //侍卫外套
	NEWTYPE_ExpBall_Package,			// 经验值球礼包
	NEWTYPE_BEFORE_MAKE_BROTHER,        // 申请结拜物品
	NEWTYPE_AFTER_MAKE_BROTHER,			// 结拜物品
	NEWTYPE_GUARD_HAIR,					// 侍卫发型
	NEWTYPE_GIRL_AVOID_MEMSES,			//经期道具
	NEWTYPE_GUARD_OPENTRUMPSKILL,		//开启侍卫特技项的物品
	NEWTYPE_HAIR,           
	NEWTYPE_STEED_STYLE_EQUIP,          // 战马个性装备 
	NEWTYPE_TRUCK,
	NEWTYPE_TEAMSKILL_BOOK,			    // 组队技能书
	NEWTYPE_USER_LEG,					// 裤子
	NEWTYPE_USER_WAISTBAND,		        // 腰带（新增，7X4XXX）
	NEWTYPE_USER_ARMGUARD,		        // 护手（新增，7X5XXX）
	NEWTYPE_USER_FINGER_RING,		    // 戒指（新增，7X6XXX）
	NEWTYPE_BOW,                        // 弓弩
	NEWTYPE_Arrow_Ammo,				    // 箭矢
	NEWTYPE_SpecialArrow_Ammo,		    // 特殊箭矢
	NEWTYPE_Gun,						// 枪支
	NEWTYPE_Skill_With_Cool,            // 使用后触发技能的物品
	NEWTYPE_BulletProofVest,            // 防弹衣
};


enum STEED_STYLE_EQUIP				// 战马个性装备   horse
{	
	STEED_STYLE_EQUIP_NONE      = 0,
	STEED_STYLE_EQUIP_SMOCK		= 1,	// 战马的罩衫
	STEED_STYLE_EQUIP_SHIELD	= 2, 	// 战马的护甲
	STEED_STYLE_EQUIP_SADDLE	= 3,	// 战马的马鞍 
	STEED_STYLE_EQUIP_PENDANT 	= 4,	// 战马的挂件
};

enum ITEM_OPERATER_TYPE
{
	ITEM_OPERATER_TYPE_NONE = 0,
	ITEM_OPERATER_TYPE_SELL_TO_NPC_SHOP,			//可疑物品不允许被卖到NPC商店中
	ITEM_OPERATER_TYPE_EXCAHNGE_TO_ADDLEV1,			//可疑物品不允许进行+1物品兑换       
	ITEM_OPERATER_TYPE_DROP_TO_GROUND,				//可疑物品不允许丢弃
	ITEM_OPERATER_TYPE_MICRO_DEC_SHAPE_SIZE,		//可疑物品不可进行缩微
	ITEM_OPERATER_TYPE_ADD_LEV_ITEM,				//可疑物品不可作为装备进行装备追加
	ITEM_OPERATER_TYPE_COMBIND_SECOND_ITEM,			//可疑物品（核心）不可作为副核心进行合成
	ITEM_OPERATER_TYPE_USEABLE,						//可疑物品不允许点右键使用，如扩展装置、联盟军校金徽章等右键点击使用后删除的物品
	
	ITEM_OPERATER_TYPE_USE_TO_UPDATE_LEV = ITEM_OPERATER_TYPE_USEABLE,			//不允许被使用来升级
	ITEM_OPERATER_TYPE_USE_TO_UPDATE_QUALITY = ITEM_OPERATER_TYPE_USEABLE,		//不允许被使用来改良
	ITEM_OPERATER_TYPE_USE_TO_EMBED_GEM,			//不允许被使用来镶嵌
	ITEM_OPERATER_TYPE_USE_TO_MICRO_DEC_SHAPE_SIZE,	//不允许被使用来缩微

	ITEM_OPERATER_TYPE_UNEMBED_GEM,					//不允许卸下已镶嵌的宝石
	ITEM_OPERATER_TYPE_USE_TO_ADD_NIMBUS,			//不允许用于增加机体智能值			
	ITEM_OPERATER_TYPE_DROP_WHEN_DIE,				//人物被杀死时，可疑物品不会从背包或装备栏中掉出
	ITEM_OPERATER_TYPE_MAKE_BLOODBOND,				//可疑物品不允许签订装备精神烙印
	ITEM_OPERATER_TYPE_EQUIP_INTO_ENGINEE_ROOM,		//引擎和货舱如果在可疑状态下，则不允许装备
	ITEM_OPERATER_TYPE_502ACTION_DEL_ITEM,			//执行502删除物品的action时，不会删除符合删除条件的可疑物品，直接选择删除非可疑物品的任务物品
	ITEM_OPERATER_TYPE_EXCHANGE,					//交易			
	ITEM_OPERATER_TYPE_BOOTH,						//摆摊				
	ITEM_OPERATER_TYPE_EQUIP,						//装备
};

//镶嵌芯片
enum CHIP_EMB_MASK
{
	CHIP_EMB_MASK_WEAPON	= 1,	//表示可以镶嵌到武器
	CHIP_EMB_MASK_HELMET	= 2,	//表示可以镶嵌到头盔
	CHIP_EMB_MASK_NECKLACE	= 4,	//表示可以镶嵌到项链
	CHIP_EMB_MASK_RING		= 8,	//表示可以镶嵌到手镯
	CHIP_EMB_MASK_COAT		= 16,	//表示可以镶嵌到衣服
	CHIP_EMB_MASK_SHOES		= 32,	//表示可以镶嵌到鞋子	
	CHIP_EMB_MASK_TRUMP		= 256	//表示可以镶嵌到核心类物品（物品id范围：90010000~90089999）
};

//装备灵魂血契
enum 
{ 
	BLOOD_BOND_STATE			   = 0x0001,				  //签订灵魂血契状态
	BLOOD_BOND_WAITFOR_CLEAR_STATE = 0x0002, //灵魂血契待解除状态	
};


/****************升型专用资源的掉落规则**tcp2007-1-9 add begin**************/
enum STONE_TYPE
{
	STONE_TYPE_I,
	STONE_TYPE_II,
	STONE_TYPE_III,		
};

//物品追加枚举定义
enum ITEMADDITIONDATA
{
	ITEMADDITIONDATA_ID,
	ITEMADDITIONDATA_TYPEID,
	ITEMADDITIONDATA_LEVEL,
	ITEMADDITIONDATA_LIFE,
	ITEMADDITIONDATA_SHORT_ATK_MAX,//ITEMADDITIONDATA_ATTACK_MAX,
	ITEMADDITIONDATA_SHORT_ATK_MIN,//ITEMADDITIONDATA_ATTACK_MIN,
	ITEMADDITIONDATA_SHORT_DEF,//ITEMADDITIONDATA_DEFENCE,
	ITEMADDITIONDATA_LONG_ATK_MAX,//ITEMADDITIONDATA_DEFENCE_MAX,
	ITEMADDITIONDATA_LONG_ATK_MIN,//ITEMADDITIONDATA_DEFENCE_PERCENT,
	ITEMADDITIONDATA_LONG_DEF,//ITEMADDITIONDATA_MAX_EN,
	ITEMADDITIONDATA_MANA,//ITEMADDITIONDATA_CHARGE_EN,
	ITEMADDITIONDATA_MANA_RE,//ITEMADDITIONDATA_MAX_POWER,
	ITEMADDITIONDATA_CHARGE_POWER,
	ITEMADDITIONDATA_MAX_RANGE,
	ITEMADDITIONDATA_NICETY,
	ITEMADDITIONDATA_DODGE,
	ITEMADDITIONDATA_PACK_SIZE,
};


enum SKILLDATA
{
	SKILLDATA_BEGIN_ = 0,			
	SKILLDATA_ID	 = 0,
	SKILLDATA_OWNERID,
	SKILLDATA_MAIN,	SKILLDATA_ITEMTYPE		= SKILLDATA_MAIN,		// 6位数(MMMM LL = magic(type) * 100 + level) | 7位数(ITEMTYPE)
	SKILLDATA_SUB1,	SKILLDATA_WEAPON_ACTION = SKILLDATA_SUB1,		// 子弹动作		// (MMMM LL = magic(type) * 100 + level)
	SKILLDATA_SUB2, 												// (MMMM LL = magic(type) * 100 + level)
	SKILLDATA_SUB3,													// ...
	SKILLDATA_HOTKEY,												// 保存触发热键
	SKILLDATA_WEAPONPOS,											// 武器位置
	SKILLDATA_OWNERTYPE,											// 1:USER, 5:SPIRIT
	SKILLDATA_END_,			
};

// //僵尸功能 无限制 可以对自己使用 不需要点目标 对地使用 需选定友方对象使用
enum { TARGET_EMENY = 0, TARGET_SELF=1, TARGET_NONE = 2, TARGET_TERRAIN = 4, TARGET_FRIEND = 8};
//单体  直线range width有效  圆形range有效  扇形range width有效 整队攻击
enum { MULTI_NONE = 0, MULTI_LINE, MULTI_CIRCLE, MULTI_FAN, MULTI_TEAM, MULTI_CIRQUE, MULTI_RHOMBUS, MULTI_SCREEN};//增加圆环及菱形，全屏
enum IMMUNITY_TYPE
{
	IMMUNITY_NONE,
	IMMUNITY_ALLY		= 0x1 << 0,
	IMMUNITY_ENEMY		= 0x1 << 1,
	IMMUNITY_SELF		= 0x1 << 2,
};

enum { WOUND_MODE_NONE, WOUND_MODE_LIFE, WOUND_MODE_XP, };
enum { KILL_MODE_NONE, KILL_MODE_LIFE, KILL_MODE_XP, };


enum { AIR_MODE_NONE, AIR_MODE_LAND_AIR, AIR_MODE_AIR_LAND, AIR_MODE_AIR_AIR, };
enum { CLASSILY_NONE, CLASSILY_MAIN, CLASSILY_ASSISTANCE, };
enum { XP_MODE_NONE, XP_MODE_MULTI, XP_MODE_STATUS };
enum { NOT_AUTO_ATTACK=0, AUTO_ATTACK=1, AUTO_ATTACK_EQUIPMENT=2,AUTO_RAND_ATTACK=4};


enum SKILLSUIT
{
	SKILLSUIT_BEGIN,		// no use

	SKILLSUIT_ID	=	SKILLSUIT_BEGIN,

	//僵尸重构代码，把需要的SKILLSUIT从吸血鬼代码中移到僵尸代码下
	// range
	SKILLSUIT_DISTANCE,				// SKILLSUIT_ADJUST_DISTANCE,
	SKILLSUIT_RANGE,				// 半径
	SKILLSUIT_WIDTH,				// 直线的宽度或扇形的角度

	// sort
	SKILLSUIT_SORT,
	SKILLSUIT_CRIME,
	SKILLSUIT_PASSIVE,				// 被动技能
	SKILLSUIT_GROUND,
	SKILLSUIT_MULTIMODE,

	// condition | expend
	SKILLSUIT_EXPEND_MANA,		   //消耗的魔法值

	// param
	SKILLSUIT_IMMUNITY_MODE,		// enum { IMMUNITY_NONE, IMMUNITY_ALLY, IMMUNITY_ENEMY, IMMUNITY_SELF, };
	SKILLSUIT_DELAY_MS,				//冷却时间
	SKILLSUIT_STEP_SECS,			//
	SKILLSUIT_ACTION_TIMES,
	SKILLSUIT_POWER,				
	SKILLSUIT_DATA,
	SKILLSUIT_PERCENT,
	SKILLSUIT_STATUS,
	SKILLSUIT_STATUS_CHANCE,
	SKILLSUIT_STATUS_TIME,
	SKILLSUIT_ATTACK,
	SKILLSUIT_ACTION,
	SKILLSUIT_TARGET,
	SKILLSUIT_NEED_WEAPON,
	SKILLSUIT_PART_PERCENT1,
	SKILLSUIT_PART_PERCENT2,
	SKILLSUIT_HEAD_PERCENT,
	SKILLSUIT_STAND_TIME,
	SKILLSUIT_TARGET_DISTINCT,
	SKILLSUIT_SELF_DISTINCT,
	SKILLSUIT_NAME,
	SKILLSUIT_FIRE_TYPE,

//	// end flag //////////////////////
	SKILLSUIT_ALL,		// no use

	//吸血鬼原代码定义
	// sort
//	SKILLSUIT_CRIME,				// 良性还是恶性技能标志，良性不伤对象的血。此值为1则代表恶性，为0代表良性
//	SKILLSUIT_GROUND,				// 是否地效魔法
	//SKILLSUIT_PASSIVE,			// 被动技能
// 	SKILLSUIT_TARGET,				// 

	// range
//	SKILLSUIT_MULTIMODE,			// enum { MULTI_NONE = 0, MULTI_LINE, MULTI_CIRCLE, MULTI_FAN, MULTI_TEAM, MULTI_CIRQUE, MULTI_RHOMBUS, MULTI_SCREEN };
//	SKILLSUIT_DISTANCE,				// SKILLSUIT_ADJUST_DISTANCE,
//	SKILLSUIT_RANGE,				// 半径
// 	SKILLSUIT_WIDTH,				// 直线的宽度或扇形的角度
// 	SKILLSUIT_ANIMOSITY,
	// time control
	SKILLSUIT_INTONE,
	SKILLSUIT_DELAY,
	SKILLSUIT_DELAYCHANGSKILLSUIT, // 不同主技能ID招式之间的时间间隔

	// condition | expend
// 	SKILLSUIT_NEED_WEAPON,
	SKILLSUIT_NEED_AMMO,
	SKILLSUIT_EXPEND_LIFE,         //消耗的生命值
//	SKILLSUIT_EXPEND_MANA,		   //消耗的魔法值
	SKILLSUIT_EXPEND_FUEL,		   //消耗的体力
	SKILLSUIT_EXPEND_AMMO,		   //消耗的弹药数量
//	SKILLSUIT_EXPEND_ENERGY,	   //消耗的精力
	SKILLSUIT_REQ_CAMP,			   //职业要求
	SKILLSUIT_REQ_LEV,			   //等级要求
	SKILLSUIT_LHANDEQUIP,			// 副手装备要求
	SKILLSUIT_CONDITION,			// 环境要求，二进制标识，0表示无需求，1表示非骑乘状态，10表示骑乘状态
//	SKILLSUIT_REQ_TEAM_ROLE,		// 队伍角色需求

// 	// param
// 	SKILLSUIT_IMMUNITY_MODE,		// enum { IMMUNITY_NONE, IMMUNITY_ALLY, IMMUNITY_ENEMY, IMMUNITY_SELF, };
	SKILLSUIT_FORBIDATKTYPE,		//256技能类型禁止地对空	512技能类型禁止空对地 1024技能类型禁止空对空  2048技能类型禁止在宇宙场景中使用

	// special effect
// 	SKILLSUIT_RECRUIT_ENABLE,
// 	SKILLSUIT_RECRUIT_POWER,      //血量

	//会心一击
	SKILLSUIT_DOUBLE_ENABLE,      
	SKILLSUIT_DOUBLE_PERCENT,    //命中率
	SKILLSUIT_DOUBLE_POWER,

	SKILLSUIT_MORTAL_ENABLE,		// 一击必杀
	SKILLSUIT_MORTAL_PERCENT,
	SKILLSUIT_MORTAL_POWER,				
	SKILLSUIT_MORTAL_MODE,			//杀阵分类（1为轰雷杀阵，2为苍雷杀阵）
	SKILLSUIT_MORTAL_DATA,          //杀阵目标修正指数（比例、200为200%）

	SKILLSUIT_FINAL_ENABLE,			// 终结技
	SKILLSUIT_FINAL_PERCENT,		// 终结技发动概率
	SKILLSUIT_FINAL_DATA,			// 终结技2 发动概率修正比例
	SKILLSUIT_FINAL_POWER,			// 终结技2 伤害数值
	SKILLSUIT_FINAL_MODE,			// mode=0, 终结技   mode=1,终结技2

	SKILLSUIT_EXTREMITY_ENABLE,		// 绝命技
	SKILLSUIT_EXTREMITY_PERCENT,	// 当前LIFE的百分比
	SKILLSUIT_EXTREMITY_POWER,

	SKILLSUIT_STATUS_BEGIN,
	SKILLSUIT_STATUS_END	= SKILLSUIT_STATUS_BEGIN + MAX_SKILLSIZE,
	SKILLSUIT_STATUS_POWER_BEGIN = SKILLSUIT_STATUS_BEGIN + MAX_SKILLSIZE,
	// ...
	SKILLSUIT_STATUS_SECS_BEGIN = SKILLSUIT_STATUS_POWER_BEGIN+ MAX_SKILLSIZE,
	// ...
	SKILLSUIT_STATUS_TIMES_BEGIN = SKILLSUIT_STATUS_SECS_BEGIN+ MAX_SKILLSIZE,			// 0: for once status (no more status)
	// ...
	SKILLSUIT_STATUS_PERCENT_BEGIN = SKILLSUIT_STATUS_TIMES_BEGIN+ MAX_SKILLSIZE,
	// ...
	SKILLSUIT_STATUS_NPARAM_BEGIN	= SKILLSUIT_STATUS_PERCENT_BEGIN + MAX_SKILLSIZE,
	// ...
	SKILLSUIT_STATUS_WPARAM_BEGIN	= SKILLSUIT_STATUS_NPARAM_BEGIN + MAX_SKILLSIZE,
	// ...
	SKILLSUIT_STATUS_ALL_END = SKILLSUIT_STATUS_WPARAM_BEGIN+ MAX_SKILLSIZE,

	SKILLSUIT_EXPLODE_ENABLE	=	SKILLSUIT_STATUS_ALL_END,
	SKILLSUIT_EXPLODE_RANGE,				// 主动爆炸(炸对方)
	SKILLSUIT_EXPLODE_POWER,

	SKILLSUIT_DESTROY_ENABLE,				// 装备破坏(否则为掉血)
	SKILLSUIT_DESTROY_PERCENT,				// 破坏几率
	SKILLSUIT_DESTROY_POS,
	SKILLSUIT_DESTROY_POWER,
	SKILLSUIT_DESTROY_DATA,					// 震坏几率调整
	SKILLSUIT_DESTROY_MODE,					// mode=0, 装备破坏  mode=1, 装备震坏

	SKILLSUIT_LOOP_ENABLE,
	//SKILLSUIT_LOOP_PERCENT,
	//SKILLSUIT_LOOP_TIMES,

	SKILLSUIT_STEAL_ENABLE,
	SKILLSUIT_STEAL_PERCENT,

	SKILLSUIT_BEATBACK_ENABLE,
	SKILLSUIT_BEATBACK_PERCENT,
	SKILLSUIT_BEATBACK_DISTANCE,

	SKILLSUIT_SELFBACK_ENABLE,
	SKILLSUIT_SELFBACK_PERCENT,
	SKILLSUIT_SELFBACK_DISTANCE,

	SKILLSUIT_PK_BEATBACK_ENABLE,
	SKILLSUIT_PK_BEATBACK_DISTANCE,

	SKILLSUIT_AIR_MODE,				// enum { AIR_MODE_NONE, AIR_MODE_LAND_AIR, AIR_MODE_AIR_LAND, AIR_MODE_AIR_AIR, };
	SKILLSUIT_AIR_POWER,

	SKILLSUIT_WOUND_MODE,
	SKILLSUIT_WOUND_POWER,

	SKILLSUIT_KILL_MODE,
	SKILLSUIT_KILL_POWER,

	SKILLSUIT_XP_MODE,

	SKILLSUIT_DROP_MAPITEM_ENABLE,
	SKILLSUIT_DROP_MAPITEM_PERCENT,
	SKILLSUIT_DROP_MONEY_ENABLE,
	SKILLSUIT_DROP_MONEY_PERCENT,
	SKILLSUIT_DROP_STONE_ENABLE,
	SKILLSUIT_DROP_STONE_PERCENT,
	SKILLSUIT_DROP_EXP_ENABLE,
	SKILLSUIT_DROP_EXP_PERCENT,
	
	SKILLSUIT_ONRUSH_ENABLE,						// 突进技能 mode=0
	SKILLSUIT_ONRUSH_MODE,							// 穿越技能 mode=1

	// addition
	SKILLSUIT_DEFENCE_INVALID,
	SKILLSUIT_JUMPATTACK,			// bool

	SKILLSUIT_CANNONFIRECOVERCAST_ENABLE,			// 炮火覆盖技能
	SKILLSUIT_CANNONFIRECOVERCAST_POWER,			// 炮火覆盖技能,小范围的半径（中心点由程序随机选定）
	SKILLSUIT_CANNONFIRECOVERCAST_BLASTNUM,			// 炮火覆盖技能,小范围攻击的个数		
	SKILLSUIT_CANNONFIRECOVERCAST_RANGE,			// 炮火覆盖技能,大圆形范围的半径（以目标点为中心）		

	SKILLSUIT_CLOSETODIE_ENABLE,					// 濒死技能
	SKILLSUIT_CLOSETODIE_ACTIVEADJUST,				// 濒死技能发动概率修正数值，数值为百分比
	SKILLSUIT_CLOSETODIE_INJUREADJUST,				// 濒死技能伤害修正数值，数值为千分比

	SKILLSUIT_FUELERASER_ENABLE,					// 燃料杀灭技能
	SKILLSUIT_FUELERASER_FUELADJUST,				// 燃料杀灭减少目标推进器最大燃料的百分比
	SKILLSUIT_FUELERASER_ACTIVERATE,				// 燃料杀灭发动概率，百分比数值
	
	SKILLSUIT_ENERGYERASER_ENABLE,					// En杀灭
	SKILLSUIT_ENERGYERASER_ACTIVEADJUST,			// En杀灭减少目标最大En的百分比
	SKILLSUIT_ENERGYERASER_ACTIVERATE,				// En杀灭发动概率，百分比数值

	SKILLSUIT_BURNWALLAMMO_ENABLE,					// 燃烧弹
	SKILLSUIT_BURNWALLAMMO_INJUREADJUST,			// 燃烧弹伤害调整百分比
	SKILLSUIT_BURNWALLAMMO_TRAPTYPE,				// 燃烧弹陷阱类型

	SKILLSUIT_INJURESELF_ENABLE,					// 自伤
	SKILLSUIT_INJURESELF_ACTIVERATE,				// 自伤发动概率，百分比数值
	SKILLSUIT_INJURESELF_ATKADJUST,					// 自伤的伤害修正千分比例（为了跟其他字段统一，所以填31000为100%）
	SKILLSUIT_INJURESELF_EXPENDLIFE,				// 自伤（减少的HP值有两种，一种是减少一定的数值，另一种是按自身的最大HP的比例来减少。字段值30000以下为一定的数值，30000以上为比例，如：30500则为50%）

	SKILLSUIT_BODYBLAST_ENABLE,						// 尸爆

	SKILLSUIT_RECOVERHP_ENABLE,						// HP回复
	SKILLSUIT_RECOVERHP_DATA,						// HP回复数值或者比例 填30020代表回复当前最大HP的20%
	SKILLSUIT_RECOVERHP_MODE,						// HP回复类型

	SKILLSUIT_DRAWCLOSE_ENABLE,						// 拉近
	SKILLSUIT_DRAWCLOSE_ACTIVERATE,					// 拉近发动成功率
	
	SKILLSUIT_ADDITIONINJURE_ENABLE,				// 高伤害，低伤害
	SKILLSUIT_ADDITIONINJURE_MODE,					// mode=0, 低伤害  mode=1, 高伤害
	SKILLSUIT_ADDITIONINJURE_PERCENT,				// 发动概率（50为50%）
	SKILLSUIT_ADDITIONINJURE_DATA,					// 公式中的修正指数

	SKILLSUIT_CAPTURE_ENABLE,						// 捕获
	SKILLSUIT_CAPTURE_PERCENT,						// 捕获成功率
	SKILLSUIT_CAPTURE_STEPSECOND,					// 捕获后晕状态时间

	SKILLSUIT_REBORN_ENABLE,						// 复活
	SKILLSUIT_REBORN_DATA,							// 复活的HP比例
	
	SKILLSUIT_RETALIATEUPON_ENABLE,					// 还击

	SKILLSUIT_SHIELDSKILL_ENABLE,					// 盾技能
	SKILLSUIT_SHIELDSKILL_DATA,						// 修正数值
	SKILLSUIT_SHIELDSKILL1_ENABLE,					// 盾技能1
	SKILLSUIT_SHIELDSKILL1_DATA,					// 修正数值1
	SKILLSUIT_SHIELDSKILL2_ENABLE,					// 盾技能2
	SKILLSUIT_SHIELDSKILL2_DATA,					// 修正数值2
	SKILLSUIT_SHIELDSKILL3_ENABLE,					// 盾技能3
	SKILLSUIT_SHIELDSKILL3_DATA,					// 修正数值3

	SKILLSUIT_SEARCHBODY_ENABLE,					// 搜索
	SKILLSUIT_SEARCHBODY_PERCENT,					// 成功概率
	
	SKILLSUIT_IMPACT_ENABLE,						// 撞击
	SKILLSUIT_IMPACT_POWER,							// 修正数值
	
	SKILLSUIT_MINESWEEPING_ENABLE,					// 扫雷
	SKILLSUIT_MINESWEEPING_RANGE,					// 扫雷范围

	SKILLSUIT_SELFBLAST1_ENABLE,					// 自爆1
	SKILLSUIT_SELFBLAST1_DATA,						// 自爆1指数
	SKILLSUIT_SELFBLAST2_ENABLE,					// 自爆2
	SKILLSUIT_SELFBLAST2_DATA,						// 自爆2指数
	SKILLSUIT_SELFBLAST3_ENABLE,					// 自爆3
	SKILLSUIT_SELFBLAST3_DATA,						// 自爆3指数

	SKILLSUIT_INTERLINK_ENABLE,						// 连环
	SKILLSUIT_INTERLINK_DATA,						// 连环攻击次数
	SKILLSUIT_INTERLINKFORCE_ENABLE,				// 连环附属加强第一击威力技能
	SKILLSUIT_INTERLINKFORCE_POWER,
	SKILLSUIT_INTERLINKFAINT_ENABLE,				// 连环附属最后一击晕技能
	SKILLSUIT_INTERLINKEXTRA_DATA,					// 连环附属增加攻击次数 增加的次数值
	
	SKILLSUIT_COUNTERSTRIKE_ENABLE,					// 反击
	SKILLSUIT_COUNTERSTRIKE_POWER,					// 被动，修正数值
	SKILLSUIT_COUNTERSTRIKE_DATA,					// 主动，修正指数
	SKILLSUIT_COUNTERSTRIKE_PERCENT,
	SKILLSUIT_COUNTERSTRIKEFORCE_ENABLE,			// 反击附属，被动使用，增加威力
	SKILLSUIT_COUNTERSTRIKEFORCE_POWER,
	SKILLSUIT_COUNTERSTRIKELIGHT_ENABLE,			// 反击附属，主动使用，增加威力
	SKILLSUIT_COUNTERSTRIKELIGHT_DATA,
	
	SKILLSUIT_RETALIATEUPONCURSE_ENABLE,			// 还击附属 诅咒 （玩家受攻击死亡时，此技能才有效）
	SKILLSUIT_RETALIATEUPONCURSE_DATA,				// 修正指数
	SKILLSUIT_RETALIATEUPONBLAST_ENABLE,			// 还击附属 自爆  (玩家受攻击死亡时，范围攻击)
	SKILLSUIT_RETALIATEUPONBLAST_DATA,
	
	SKILLSUIT_THROWENEMY_ENABLE,					// 投技
	SKILLSUIT_THROWENEMY_DATA,
	SKILLSUIT_THROWENEMYDOUBLE_ENABLE,				// 投技附属会心一击
	SKILLSUIT_THROWENEMYDOUBLE_PERCENT,				// 投技附属会心一击发动概率
	SKILLSUIT_THROWENEMYDOUBLE_POWER,				// 投技附属会心一击提高的百分比，填200代表200%

	SKILLSUIT_MULTISELECTENEMY_ENABLE,				// 多目标指定

	SKILLSUIT_FETCH_BURST_ENHANCE_CLASSILY,			// 受魂爆状态影响类型
	
	SKILLSUIT_CENTERINJURE_ENABLE,					// 中心伤害
	SKILLSUIT_CENTERINJURE_DATA,

	SKILLSUIT_ENSKILLMASTER_ENABLE,					// 附技能En消耗减少
	SKILLSUIT_ENSKILLMASTER_DATA,
	SKILLSUIT_ENSKILLMASTER_POWER,

	SKILLSUIT_POISONRANGE_ENABLE,					// 毒环
	SKILLSUIT_POISONRANGE_POWER,
	SKILLSUIT_POISONRANGE_DATA,
	SKILLSUIT_POISONRANGE_SEC,
	SKILLSUIT_POISONRANGE_IMMUNITY,
	SKILLSUIT_POISONRANGEADD2_ENABLE,				// 毒环附属技能2
	SKILLSUIT_POISONRANGEADD2_INJURERATE,
	SKILLSUIT_POISONRANGEADD3_ENABLE,				// 毒环附属技能3
	SKILLSUIT_POISONRANGEADD3_INJURESELFRATE,
	SKILLSUIT_POISONRANGEADD3_INJURERATE,

	SKILLSUIT_REINFORCE_FROM_TEAM,					// 向队友支援攻击参数（浮游炮，电磁炮）
	SKILLSUIT_REINFORCE_FROM_SELF,					// 自己的支援攻击参数（浮游炮，电磁炮）
	SKILLSUIT_REINFORCE_POWER,						// 援助攻击技能攻击威力
	SKILLSUIT_REINFORCE_DAMAGE,						// 援助攻击的威力伤害，由触发者和被触发者以及（浮游炮，电磁炮）的参数有关，不同于一般的技能伤害计算方法

	SKILLSUIT_ADJUSTTOGETHER_ENABLE,				// 调和

	SKILLSUIT_KILLLINEUP_ENABLE,					// 杀阵
	SKILLSUIT_KILLLINEUP_MODE,						// 1为轰雷杀阵，2为苍雷杀阵
	SKILLSUIT_KILLLINEUP_SECOND,
	SKILLSUIT_KILLLINEUP_PERCENT,
	SKILLSUIT_KILLLINEUP_TARGETMAXAMOUNT,			// 杀阵可攻击目标的总数量
	SKILLSUIT_KILLLINEUP_TARGETAMOUNT,				// 杀阵状态下，已经攻击过的目标数(在失效时间前，动态变化，也是发动的依据)
	SKILLSUIT_KILLLINEUP_INJUREADJUST,				// 修正指数
	SKILLSUIT_KILLLINEUP2_FAINT_ENABLE,				// 杀阵附属2，最后一个晕
	SKILLSUIT_KILLLINEUP3_POWER,
	
	SKILLSUIT_CRAZYFIGHTER_ENABLE,					// 狂战士状态
	SKILLSUIT_CRAZYFIGHTER_CANUSESKILL,				// 狂战士状态下，可以允许使用的技能标志
	SKILLSUIT_CRAZYFIGHTER_POWERUP,					// 所有狂战士下可以用的技能威力都比例提升
	SKILLSUIT_CRAZYFIGHTER_TIMEDATA,				// 折算成状态持续时间
	SKILLSUIT_CRAZYFIGHTER_SKILLAMOUNT,				// 狂战士状态下，右键技能有使用次数的限制
	SKILLSUIT_CRAZYFIGHTERADD1_ENABLE,				// 狂战士 附属技能 真狂战士
	SKILLSUIT_CRAZYFIGHTERADD1_POWER,				// 真狂战士
	SKILLSUIT_CRAZYFIGHTERADD2_TIMEADD,				// 延长时间
	SKILLSUIT_CRAZYFIGHTERADD3_ENABLE,				
	SKILLSUIT_CRAZYFIGHTERADD3_HPRECOVER,
	SKILLSUIT_CRAZYFIGHTERADD4_ENABLE,
	SKILLSUIT_CRAZYFIGHTERADD4_TIMEADD,				// 受击延长时间
	SKILLSUIT_CRAZYFIGHTERADD4_PERCENT,

	SKILLSUIT_DISTANCE_NOWEAPONEFFECT,				// 不受极品武器属性影响距离标志 2006.10.13

	SKILLSUIT_HOTBURN_ENABLE,						// 2006.10.22 高温灼烧
	SKILLSUIT_HOTBURN_PERCENT,						// 灼烧几率percent
	SKILLSUIT_HOTBURN_POWER,						// 灼烧强度power
	SKILLSUIT_HOTBURN_ATTACK,						// 灼烧温度递增量attack
	SKILLSUIT_HOTBURN_HOTATK,						// 灼烧伤害atk_hot
	
	SKILLSUIT_BAITMONSTER_ENABLE,					// 2007.02.02 引诱怪物
	SKILLSUIT_BAITMONSTER_SECOND,					// 技能持续时间
	SKILLSUIT_BAITMONSTER_PERCENT,					// 成功率
	SKILLSUIT_BAITMONSTER_RANGE,					// 引诱怪物的有效范围
	
	SKILLSUIT_SUDDEMOVENATTACK_ENABLE,				// 2007.03.19 瞬移攻击技能
	
	SKILLSUIT_ICE_POWER,							// 冰冻
	SKILLSUIT_SHAKE_POWER,							// 震荡
	SKILLSUIT_XPMAGIC_ACTION,						// xp技能点燃xp同时，触发Action字段值所对应的action
	SKILLSUIT_TRANSLOOK,							// 变形技能的外形look

	SKILLSUIT_FULLSCREEN_ATK_ENABLE,				// 全屏轰炸技能
	SKILLSUIT_FULLSCREEN_ATK_POWER,					// 全屏攻击强度
	SKILLSUIT_FULLSCREEN_ATK_SORT,					// 普通全屏轰炸攻击,高温全屏轰炸攻击,冰冻全屏轰炸攻击, 振荡全屏轰炸攻击

    SKILL_SPIRIT_TRANSFORM_SPIRIT_TYPE_ID,			// 2007.04.01 tcp add 变形系统文档
	SKILLSUIT_SPIRIT_MODEL_LEV,						// 
// 	SKILLSUIT_POWER,
// 	SKILLSUIT_PERCENT,
// 	SKILLSUIT_STEP_SECS,
	SKILLSUIT_ACTIVETIMES,

	SKILLSUIT_CHAOS_ENABLE,								//使怪物进入混乱状态
	SKILLSUIT_CHAOS_RANGE,								//混乱攻击范围

	SKILLSUIT_SINGLEIMPACT_ENABLE,						//单人冲击技能
	SKILLSUIT_SINGLEIMPACT_POWER,						//单人冲击技能攻击力
	SKILLSUIT_SINGLEIMPACT_PERCENT,						//导致状态的几率
	SKILLSUIT_SINGLEIMPACT_RANGE,						//单人冲击攻击的范围
	SKILLSUIT_RECOVERY_ENABLE ,
	SKILLSUIT_RECOVERY_POWER,

	SKILLSUIT_TEAMIMPACT_ENABLE,						//组队冲击技能
	SKILLSUIT_TEAMIMPACT_POWER,						//组队冲击技能攻击力
	SKILLSUIT_TEAMIMPACT_PERCENT,						//导致状态的几率
	SKILLSUIT_TEAMIMPACT_RANGE,						//组队冲击攻击的范围
	
	SKILLSUIT_MAX_TARGET_NUM,		// 记录群体技能使用时，允许最多对多少个目标对象(0表示无数量上限，单体技能该字段不起作用)

	SKILLSUIT_DETACHTARGET_STATUS_EXIST,//清除目标状态
	SKILLSUIT_DETACHTARGET_STATUS,

	SKILLSUIT_DETACHSELF_STATUS_EXIST,//清除自身状态
	SKILLSUIT_DETACHSELF_STATUS,

	SKILLSUIT_ATTACHSELF_STATUS_EXIST,//增加自身状态
	SKILLSUIT_ATTACHSELF_STATUS,
	SKILLSUIT_ATTACHSELF_STATUS_CHANCE,
	SKILLSUIT_ATTACHSELF_STATUS_POWER,
	SKILLSUIT_ATTACHSELF_STATUS_SECS,
	SKILLSUIT_ATTACHSELF_STATUS_TIMES,
	SKILLSUIT_ATTACHSELF_STATUS_NPARAM,
	SKILLSUIT_ATTACHSELF_STATUS_WPARAM,

	SKILLSUIT_ATTACHTARGET_STATUS_EXIST,//增加目标状态
	SKILLSUIT_ATTACHTARGET_STATUS,
	SKILLSUIT_ATTACHTARGET_STATUS_CHANCE,
	SKILLSUIT_ATTACHTARGET_STATUS_POWER,
	SKILLSUIT_ATTACHTARGET_STATUS_SECS,
	SKILLSUIT_ATTACHTARGET_STATUS_TIMES,
	SKILLSUIT_ATTACHTARGET_STATUS_NPARAM,
	SKILLSUIT_ATTACHTARGET_STATUS_WPARAM,

	SKILLSUIT_ADJDAMG_FROM_STATUS,//状态增加伤害
	SKILLSUIT_STATUSA,			//技能额外状态需求	
	SKILLSUIT_STATUSA_POWER,
	SKILLSUIT_STATUSA_DATA,
	SKILLSUIT_STATUSB,	
	SKILLSUIT_STATUSB_POWER,	
	SKILLSUIT_STATUSB_DATA,
	
	SKILLSUIT_CURSE_ENABLE,								//怪物进入诅咒状态

	SKILLSUIT_CREATE_MAPDOMAIN_ENABLE,					//创建地图领域技能
	SKILLSUIT_CREATE_REGIONDOMAIN_ENABLE,				//创建区域领域技能
	SKILLSUIT_CREATE_CONTROLDOMAIN_ENABLE,				//操控领域技能
	SKILLSUIT_CREATE_DOMAIN_DATA,						//可同时创建领域数量

	SKILL_DOMAIN_ENABLE,							//领域内减少伤害
	SKILL_DOMAIN_POWER,							//伤害减少数量
	SKILL_DOMAIN_SECS,							//领域伤害减少状态持续时间
//
//	SKILL_DOMAIN_HP_ENABLE,										//全地图全员HP领域
//	SKILL_DOMAIN_HP_POWER,
//	SKILL_DOMAIN_HP_SECS,

	SKILLSUIT_CALL_ALTAR_ENABLE,						//召唤祭坛
	SKILLSUIT_CALL_ALTAR_SECS,							//召唤祭坛的持续时间
	SKILLSUIT_CALL_ALTAR_RANGE,							//祭坛范围

	SKILLSUIT_DODGE_ENABLE,							//分身躲避

	SKILLSUIT_FLY_ENABLE,							//飞行
	SKILL_CATCH_MONSTER_ENABLE,						//抓捕怪物
	SKILL_MONSTER_WORSHIP_ENABLE,					//抓捕怪物献祭
	SKILL_DOMAIN_FIELD_ADD_DAMAGE,					// 区域		军团加伤害
	SKILL_DOMAIN_MAP_TEAM_ADD_DAMAGE,					// 全地图	队伍加伤害  
	SKILL_DOMAIN_FIELD_NO_HP_RECOVER,					// 区域		禁止Hp回复

	SKILLSUIT_REGION_ADD_HP_ENABLE,						//区域范围全员HP结界
	SKILLSUIT_REGION_ADD_HP_POWER,
	SKILLSUIT_REGION_ADD_HP_SECS,

	SKILLSUIT_WHOLEMAP_SYNDIACTE_ADD_EXP_ENABLE,						//全地图舰队经验值结界
	SKILLSUIT_WHOLEMAP_SYNDIACTE_ADD_EXP_POWER,
	SKILLSUIT_WHOLEMAP_SYNDIACTE_ADD_EXP_SECS,
	
// 	SKILLSUIT_WHOLEMAP_ADD_DAMAGE_ENABLE,						//全地图全员加伤害结界
// 	SKILLSUIT_WHOLEMAP_ADD_DAMAGE_POWER,
// 	SKILLSUIT_WHOLEMAP_ADD_DAMAGE_SECS,
	
	SKILLSUIT_WHOLEMAP_ADD_EXP_ENABLE,						//全地图全员经验值结界
	SKILLSUIT_WHOLEMAP_ADD_EXP_POWER,
	SKILLSUIT_WHOLEMAP_ADD_EXP_SECS,
	
	SKILLSUIT_WHOLEMAP_ADD_DAMAGE_ENABLE,						//全地图全员加伤害结界
	SKILLSUIT_WHOLEMAP_ADD_DAMAGE_POWER,
	SKILLSUIT_WHOLEMAP_ADD_DAMAGE_SECS,
	
// 	SKILLSUIT_WHOLEMAP_ADD_EXP_ENABLE,						//全地图全员经验值结界
// 	SKILLSUIT_WHOLEMAP_ADD_EXP_POWER,
// 	SKILLSUIT_WHOLEMAP_ADD_EXP_SECS,

	SKILL_DOMAIN_WHOLEMAP_FAMILY_INCDAMAGE_ENABLE,										//全地图家族加伤害
	SKILL_DOMAIN_WHOLEMAP_FAMILY_INCDAMAGE_POWER,
	SKILL_DOMAIN_WHOLEMAP_FAMILY_INCDAMAGE_SECS,
	
	SKILL_DOMAIN_FILDLD_NO_MOVE_ENABLE,										//区域禁止瞬移
	SKILL_DOMAIN_FILDLD_NO_MOVE_POWER,
	SKILL_DOMAIN_FILDLD_NO_MOVE_SECS,
	
	SKILL_DOMAIN_FIELD_DECDAMAGE_ENABLE,										//区域减少伤害
	SKILL_DOMAIN_FIELD_DECDAMAGE_POWER,
	SKILL_DOMAIN_FIELD_DECDAMAGE_SECS,
	
	SKILL_DOMAIN_FIELD_NO_JUMP_ENABLE,										//区域禁止跳跃
	SKILL_DOMAIN_FIELD_NO_JUMP_POWER,
	SKILL_DOMAIN_FIELD_NO_JUMP_SECS,
	
	SKILL_DOMAIN_WHOLEMAP_TEAMEXP_ENABLE,										//全地图队伍经验值
	SKILL_DOMAIN_WHOLEMAP_TEAMEXP_POWER,
	SKILL_DOMAIN_WHOLEMAP_TEAMEXP_SECS,
	
	SKILL_DOMAIN_WHOLEMAP_FAMILYEXP_ENABLE,										//全地图家族经验值
	SKILL_DOMAIN_WHOLEMAP_FAMILYEXP_POWER,
	SKILL_DOMAIN_WHOLEMAP_FAMILYEXP_SECS,

	SKILL_DOMAIN_WHOLEMAP_TEAMINCDAMGE_ENABLE,										//全地图队伍加伤害
	SKILL_DOMAIN_WHOLEMAP_TEAMINCDAMGE_POWER,
	SKILL_DOMAIN_WHOLEMAP_TEAMINCDAMGE_SECS,

	SKILL_DOMAIN_FIELD_INCDAMAGE_ENABLE,										//区域加伤害
	SKILL_DOMAIN_FIELD_INCDAMAGEDAMGE_POWER,
	SKILL_DOMAIN_FIELD_INCDAMAGEDAMGE_SECS,

	

	MAGICSORT_WHOLEMAP_DEC_DAMAGE_ENABLE,						
	MAGICSORT_WHOLEMAP_DEC_DAMAGE_POWER,
	MAGICSORT_WHOLEMAP_DEC_DAMAGE_SECS,

	MAGICSORT_DOMAIN_DEC_MAXHP_ENABLE,						
	MAGICSORT_DOMAIN_DEC_MAXHP_POWER,
	MAGICSORT_DOMAIN_DEC_MAXHP_SECS,

//ypn add
	SKILLSUIT_SANSTORM_ENABLE,					// 神圣风暴
// 	SKILLSUIT_SANSTORM_EXPEND_MANA,
// 	SKILLSUIT_SANSTORM_DELAY_MS,
	SKILLSUIT_SANSTORM_ATTACK,
//	SKILLSUIT_SANSTORM_RANGE,
//	SKILLSUIT_SANSTORM_STATUS,
//	SKILLSUIT_SANSTORM_STATUS_CHANCE,
//	SKILLSUIT_SANSTORM_POWER,

	SKILLSUIT_VELOCITY_SOUND_ENABLE,			// 音速攻击
// 	SKILLSUIT_VELOCITY_SOUND_EXPEND_FUEL,
// 	SKILLSUIT_VELOCITY_SOUND_DELAY_MS,
// 	SKILLSUIT_VELOCITY_SOUND_DISTANCE,
	SKILLSUIT_VELOCITY_SOUND_ATTACK,

	SKILLSUIT_SOUL_LIGHTNING_ENABLE,			// 灵魂闪电
// 	SKILLSUIT_SOUL_LIGHTNING_EXPEND_MANA,
// 	SKILLSUIT_SOUL_LIGHTNING_DISTANCE,
// 	SKILLSUIT_SOUL_LIGHTNING_INTONE_MS,
// 	SKILLSUIT_SOUL_LIGHTNING_DELAY_MS,
//	SKILLSUIT_SOUL_LIGHTNING_STATUS,
//	SKILLSUIT_SOUL_LIGHTNING_STATUS_CHANCE,
//	SKILLSUIT_SOUL_LIGHTNING_RANGE,
	SKILLSUIT_SOUL_LIGHTNING_DATA,
	SKILLSUIT_SOUL_LIGHTNING_POWER,
//	SKILLSUIT_SOUL_LIGHTNING_STATUS_TIME,
//	SKILLSUIT_SOUL_LIGHTNING_STATUS_POWER,
	SKILLSUIT_SOUL_LIGHTNING_STATUS_DATA,

	SKILLSUIT_SAN_BEAT_ENABLE,					//神圣打击
// 	SKILLSUIT_SAN_BEAT_EXPEND_MANA,
// 	SKILLSUIT_SAN_BEAT_DISTANCE,
// 	SKILLSUIT_SAN_BEAT_INTONE_MS,
// 	SKILLSUIT_SAN_BEAT_DELAY_MS,
//	SKILLSUIT_SAN_BEAT_STATUS,
//	SKILLSUIT_SAN_BEAT_STATUS_CHANCE,
	SKILLSUIT_SAN_BEAT_ATTACK,
	SKILLSUIT_SAN_BEAT_ATK_ENERGY,
//	SKILLSUIT_SAN_BEAT_STATUS_TIME,

	SKILLSUIT_BLOOD_SHAKE_ENABLE,				//鲜血震击
	SKILLSUIT_BLOOD_SHAKE_ATTACK,
	SKILLSUIT_BLOOD_SHAKE_PERCENT,
//	SKILLSUIT_BLOOD_SHAKE_STATUS_CHANCE,
//	SKILLSUIT_BLOOD_SHAKE_STATUS_TIME,
	SKILLSUIT_BLOOD_SHAKE_STATUS_DATA,

	SKILLSUIT_SAN_SHIELD_BEAT_ENABLE,					//神圣盾击
//	SKILLSUIT_SAN_SHIELD_BEAT_STATUS,
//	SKILLSUIT_SAN_SHIELD_BEAT_STATUS_CHANCE,
//	SKILLSUIT_SAN_SHIELD_BEAT_STATUS_TIME,
	SKILLSUIT_SAN_SHIELD_BEAT_SELF_STATUS,
	SKILLSUIT_SAN_SHIELD_BEAT_SELF_STATUS_CHANCE,
	SKILLSUIT_SAN_SHIELD_BEAT_SELF_STATUS_TIME,
	SKILLSUIT_SAN_SHIELD_BEAT_SELF_STATUS_POWER,
	SKILLSUIT_SAN_SHIELD_BEAT_SELF_STATUS_DATA,
	SKILLSUIT_SAN_SHIELD_BEAT_ATTACK,
	
	SKILLSUIT_REVENGE_SHIELD_ENABLE,			//复仇之盾
	SKILLSUIT_REVENGE_SHIELD_PERCENT,
	SKILLSUIT_REVENGE_SHIELD_MAX_TARGET_NUM,
	SKILLSUIT_REVENGE_SHIELD_STATUS_A,
	SKILLSUIT_REVENGE_SHIELD_STATUS_A_DATA1,
	SKILLSUIT_REVENGE_SHIELD_STATUS_A_DATA2,

	SKILLSUIT_GROUP_CURE_ENABLE,				//人类游侠群体治疗
	SKILLSUIT_GROUP_CURE_STEP_SECS,
	SKILLSUIT_GROUP_CURE_ACTIVE_TIMES,
	SKILLSUIT_GROUP_CURE_POWER,

	SKILLSUIT_SINGLE_CURE_ENABLE,				//人类游侠单体治疗
	SKILLSUIT_SINGLE_CURE_STEP_SECS,
	SKILLSUIT_SINGLE_CURE_ACTIVE_TIMES,
	SKILLSUIT_SINGLE_CURE_POWER,

//end ypn add
	
	// end flag //////////////////////
//	SKILLSUIT_ALL,		// no use
};

enum SPIRIT_POS_ENUM
{
	POS_MAINSPIRIT,
	POS_FLOATCANNON1,
	POS_FLOATCANNON2,
	POS_GENAKOO,
	POS_AUTO_FIND_FIT_SPIRIT,
	POS_NONE
};

enum
{
	IDENT_OK = true, 
	NO_COMBINE = false
};

enum MONSTERDATA
{
    MONSTERDATA_ID=0,					//怪物id
	MONSTERDATA_NAME,					//怪物名字
	MONSTERDATA_BASE_ATTACK,			//基本攻击
	MONSTERDATA_BASE_DEFENCE,			//基本防御
	MONSTERDATA_BASE_DEXTERITY,			//基本敏捷
	MONSTERDATA_BASE_LIFE,				//基本生命值(1级时的记录值)
	MONSTERDATA_GROW_POINT,				//成长率
	MONSTERDATA_LIFE_RISE,				//生命率
	MONSTERDATA_ATTACK_RATE,			//攻击率	
    MONSTERDATA_DEFENCE_RATE,			//防御率
    MONSTERDATA_DEXTERITY_RATE,			//敏捷率
    MONSTERDATA_LOOK,					//怪物
    MONSTERDATA_CLASS,					//怪物类别
    MONSTERDATA_INDEX_NUM,				//怪物类别
    MONSTERDATA_HUE0,					//
    MONSTERDATA_SATURATION0,			//
    MONSTERDATA_BRIGHT0,				//
    MONSTERDATA_HUE1,					//
    MONSTERDATA_SATURATION1,			//
    MONSTERDATA_BRIGHT1,				//
    MONSTERDATA_HUE2,					//
    MONSTERDATA_SATURATION2,			//
    MONSTERDATA_BRIGHT2,				//

    MONSTERDATA_END
};

enum INTERACT
{	
    INTERACT_NONE =0, 
	INTERACT_STEAL, 
	INTERACT_ATTACK, 
	INTERACT_HEAL, 
	INTERACT_POISON, 
	INTERACT_ASSASSINATE,
	INTERACT_FREEZE,
	INTERACT_UNFREEZE,
	INTERACT_COURT,
	INTERACT_MARRY,
	INTERACT_DIVORCE,
	INTERACT_PRESENTMONEY,
	INTERACT_PRESENTITEM,
	INTERACT_SENDFLOWERS,
	INTERACT_KILL,
	INTERACT_JOINSYN,
	INTERACT_ACCEPTSYNMEMBER,
	INTERACT_KICKOUTSYNMEMBER,
	INTERACT_PRESENTPOWER,
	INTERACT_QUERYINFO,
	INTERACT_RUSHATK,
	INTERACT_MAGICATTACK = 21, 
	INTERACT_ABORTMAGIC,
	INTERACT_REFLECTWEAPON,
	INTERACT_BUMP,
	INTERACT_SHOOT = 25,
	INTERACT_REFLECTMAGIC,
	INTERACT_STATISTIC,
	INTERACT_TEAMSTATISTIC,
	INTERACT_TEAMMEMBERSTC,
	INTERACT_GETSTATISTIC,
	INTERACT_COUNTEMONEYCARD,
	INTERACT_GETEMONEYCARD,
	INTERACT_REQUESTBUSINESS,
	INTERACT_REVOKEBUSINESS,
	INTERACT_FORMALDAYS,
	INTERACT_MUSKETSHOOT = 34,
	INTERACT_ATTACK_FAIL     =    40,   // 攻击失败
	INTERACT_MAGICATTACK_FAIL = 45, //魔法攻击失败
	INTERACT_ATTACK_LOCK = 400,
	INTERACT_ATTACK_ENDLOCK = 401,

};

enum USER_APPLY 
{ 
    APPLY_NONE=0,
    APPLY_FRIEND,
    APPLY_MARRY,
    APPLY_TRADE,
    APPLY_TEAMAPPLY,
    APPLY_TEAMINVIT,
    APPLY_JOIN_SYN,
    APPLY_INVITE_JOIN_SYN,
    APPLY_ALLY_SYN,
    APPLY_TRADE_BUDDY,
};

enum FRIEND_OP
{
    _FRIEND_INFO        = 0,
    _ENEMY_INFO         = 1,

    _FRIEND_APPLY		= 10,
    _FRIEND_ACCEPT		= 11,
    _FRIEND_ONLINE		= 12,
    _FRIEND_OFFLINE		= 13,
    _FRIEND_BREAK		= 14,
    _FRIEND_GETINFO		= 15,
    _ENEMY_ONLINE		= 16,			// to client // 更新到在线状态 
    _ENEMY_OFFLINE		= 17,			// to client // 更新到离线状态 
    _ENEMY_DEL			= 18,			// to server // to client // 删除一个仇人 
    _ENEMY_ADD			= 19,			// to client // 添加一个仇人 
};

enum { FLYMAP_ERROR=-1, FLYMAP_NORMAL, FLYMAP_MAPGROUP };

// 向客户端发送的在线练功信息
enum
{
	ONLINE_TRAINING_BEGIN,							// 开始在线练功
	ONLINE_TRAINING_PAUSE,							// 暂停在线练功
	ONLINE_TRAINING_RESUME,							// 恢复在线练功
	ONLINE_TRAINING_GAIN_POINT,						// 增加十个练功点, 每分钟同步客户端一次
	ONLINE_TRAINING_AWARDEXP,						// 领取在线练功经验
	ONLINE_TRAINING_END,							// 结束在线练功
};

// 天赐祝福Itemtype
enum
{
	GODBLESS_ITEMTYPE1 = 1200000,
	GODBLESS_ITEMTYPE2 = 1200001,
	GODBLESS_ITEMTYPE3 = 1200002,
};

// 向客户端发送的防沉迷状态信息
enum
{
	WALLOW_NONE = 0,									// 无收益
	WALLOW_HALF = 50,									// 半收益
	WALLOW_FULL = 100,									// 全收益
};

// 事件触发的 ACTION 定义
enum 
{
	ACTION_EVENT_USER_DIE				= 80000000,		// 玩家死亡时触发(pUser)
	ACTION_EVENT_USER_KILL				= 80000001,		// 玩家杀死对手时触发，带有（pUser, pRoleTarget）
	ACTION_EVENT_USER_PICKUP_MAPITEM	= 80000002,		// 玩家捡起地图物品时触发(pUser, pRole, pItem)
	ACTION_EVENT_USER_REBORN			= 80000003,		// 玩家重生时触发(pUser)
	ACTION_EVENT_USER_LEVUP				= 80000004,		// 玩家升级时触发(pUser)
};

// 龙珠转服类型
enum
{
	DRAGONBALLTYPE20 = 1,									// 转20个龙珠
	DRAGONBALLTYPE100 = 2,									// 转100个龙珠
};

// 龙珠转服标志
enum
{
	DRAGONBALL_NOGET,										// 未领取
	DRAGONBALL_GET,											// 已领取
	DRAGONBALL_WAIT,										// 等待转服
	DRAGONBALL_SUCCESS,										// 已经转服
};

enum ITEM_EVENT	
{
	ITEM_EVENT_GEM_PICKUP		= 1,
	ITEM_EVENT_GEM_AWARD		= 2,
	ITEM_EVENT_GEM_DROP			= 3,
	ITEM_EVENT_GEM_SELL			= 4,
	
	ITEM_EVENT_SCKEQP_PICKUP	= 11,
	ITEM_EVENT_SCKEQP_AWARD		= 12,
	ITEM_EVENT_SCKEQP_DROP		= 14,
	ITEM_EVENT_SCKEQP_SELL		= 15,
	
	ITEM_EVENT_DB_PICKUP		= 21,
	ITEM_EVENT_DB_AWARD			= 22,
	ITEM_EVENT_DB_DROP			= 23,
	ITEM_EVENT_DB_SELL			= 24,
};

enum TRUMP_TYPE
{
	TRUMP_TYPE_UPLEVEXP						= 2,	//法宝的升级经验值加成			
	TRUMP_TYPE_DROPSTONE					= 3,	//法宝星魂石掉落数值修正功能	 			
	TRUMP_TYPE_DROPMONEY					= 4,	//法宝金钱掉落数值修正功能						
	TRUMP_TYPE_REBORN_SKILL					= 5,	//法宝的复活技能
	TRUMP_TYPE_DAMAGE_BY_NEAR_FIGHTER		= 6,	//法宝的受近战伤害的修正法宝功能 					
	TRUMP_TYPE_DAMAGE_BY_FAR_FIGHTER		= 7,	//法宝的受远战伤害修正功能			
	TRUMP_TYPE_MAKE_DAMAG_TO_NEAR_FIGHTER	= 8,	//法宝的对近战伤害的修正法宝功能							
	TRUMP_TYPE_MAKE_DAMAG_TO_FAR_FIGHTER	= 9,	//法宝的对远战伤害修正功能		 		
	TRUMP_TYPE_INTERVAL_ADD_HP				= 10,	//法宝间隔时间增加HP
	TRUMP_TYPE_RADIATION					= 11,	//法宝辐射抵抗功能
	TRUMP_TYPE_MAXEN						= 12,	//法宝之影响EN上限						
	TRUMP_TYPE_POWER						= 13,	//法宝影响功率恢复速度			
	TRUMP_TYPE_EN_INC_POWER					= 14,	//法宝影响EN恢复速度					
	TRUMP_TYPE_DEF_INC_POWER				= 15,	//法宝之影响磁能
	TRUMP_TYPE_THRUSTER_INC_POWER			= 16,	//法宝之影响推进器回复速度			
	TRUMP_TYPE_ANTI_ICE						= 18,	//法宝之冰冻抗性				 
	TRUMP_TYPE_ANTI_HOT						= 19,	//法宝之高温抗性				 
	TRUMP_TYPE_ANTI_SHAKE		 			= 20,	//法宝之震荡抗性				
	TRUMP_TYPE_ICE_STRONG					= 21,	//法宝之冰冻强度				
	TRUMP_TYPE_HOT_STRONG					= 22,	//法宝之高温强度				
	TRUMP_TYPE_SHAKE_STRONG					= 23,	//法宝之震荡强度				
	TRUMP_TYPE_SKILLEXPEND					= 24,	//法宝技能消耗修正				
	TRUMP_TYPE_WEAPON_SKILL_EXP				= 25,	//法宝的武器熟练度经验值加成功能
	TRUMP_TYPE_SKILL_EXP					= 26,	//法宝的技能熟练度经验值加成功能
	TRUMP_TYPE_SPIRIT_SKILL_EXP				= 27,	//法宝的机体熟练度经验值加成功能
	TRUMP_TYPE_IDENT_EQUIP					= 29,	//法宝的装备鉴定功能

	TRUMP_TYPE_RED_ROSE_REC_SND_DETAL_NUM   = 32,	//法宝－影响红玫瑰送/收花数量		
	TRUMP_TYPE_WHITE_ROSE_REC_SND_DETAL_NUM = 33,	//法宝－影响白玫瑰送/收花数量

	TRUMP_TYPE_MSGTALK_EMOTION				= 34,	//法宝－影响聊天表情				
	TRUMP_TYPE_ICE_DAMAGE_TRANS_TO_HP		= 37,	//法宝之冰冻伤害转HP
	TRUMP_TYPE_HOT_DAMAGE_TRANS_TO_HP		= 38,	//法宝之高温伤害转HP
	TRUMP_TYPE_SHAKE_DAMAGE_TRANS_TO_HP		= 39,	//法宝之震荡伤害转HP
	
	TRUMP_TYPE_ICE_DAMAGE_BACK_TO_ATTACKER	= 40,	//法宝-冰冻伤害反弹
	TRUMP_TYPE_HOT_DAMAGE_BACK_TO_ATTACKER	= 41,	//法宝-高温伤害反弹
	TRUMP_TYPE_SHAKE_DAMAGE_BACK_TO_ATTACKER= 42,	//法宝-震荡伤害反弹

	TRUMP_TYPE_DIE_BLAST_ENEMY_HP			= 43,	//法宝-死亡爆敌人HP

	TRUMP_TYPE_CHANGE_BEKILER_GHOSTTYPE			= 45,	//法宝-改变对手灵魂状态
	TRUMP_TYPE_DELAY_BEKILLER_REBORN_TIMES		= 46,	//法宝-对手复活延时
	TRUMP_TYPE_BE_REBORN_BY_OTHER_TIMES			= 47,   //法宝-对手增加不可被复活时间
	TRUMP_TYPE_HIDE_SYDICATE_NAME				= 48,	//法宝的隐匿舰队名称
	TRUMP_TYPE_AUTO_FIGHT_BACK					= 49,	//法宝-反击
	TRUMP_TYPE_HP_CURSE							= 50,	//法宝的诅咒
	TRUMP_TYPE_DAMAGE_SUCK_HP					= 51,	//法宝 - 吸血功能
	TRUMP_TYPE_ADD_DAMAGE_INTERVAL				= 52,	//法宝-对怪间歇伤血
	TRUMP_TYPE_SELFBLAST_DEC_HP					= 53,	//法宝-自爆降敌人HP功能
	TRUMP_TYPE_SELFBLAST_DEC_BATTLEEFFECT		= 54,	//法宝-自爆降敌人战斗力

	TRUMP_TYPE_THE_SAME_TYPE_SPIRIT_BATTLEEFFECT = 55,	//法宝-同类机体战斗力提升

	TRUMP_TYPE_ADD_DAMAGE_TO_TRAIN_SPIRIT		= 56,	//法宝-教学机体伤害修正功能
	TRUMP_TYPE_ADD_DAMAGE_TO_MIDDLE_SPIRIT		= 57,	//法宝-中型机体伤害修正功能
	TRUMP_TYPE_ADD_DAMAGE_TO_LIFE_SPIRIT			= 59,	//法宝-生命机体伤害修正功能
	TRUMP_TYPE_ADD_DAMAGE_TO_MACHINE_SPIRIT		= 60,	//法宝-机械舱机体伤害修正功能
	TRUMP_TYPE_ADD_DAMAGE_TO_ANTI_HOT_SPIRIT		= 61,	//法宝-抗高温机体伤害修正功能
	TRUMP_TYPE_ADD_DAMAGE_TO_ANTI_ICE_SPIRIT		= 62,	//法宝-抗冰冻机体伤害修正功能
	TRUMP_TYPE_ADD_DAMAGE_TO_ANTI_SHAKE_SPIRIT	= 63,	//法宝-抗震荡机体伤害修正功能
	TRUMP_TYPE_ADD_DAMAGE_TO_MEDICAL_SPIRIT		= 64,	//法宝-医疗援助机体伤害修正功能
	TRUMP_TYPE_FLOATCANNON_SHARE_DAMAGE			= 65,	//法宝的浮游炮分摊伤害功能
	TRUMP_TYPE_FLOATCANNON_SUPPORT_HP			= 66,	//法宝的浮游炮生命转移功能
	TRUMP_TYPE_DYING_RAGE						= 67,   //法宝-濒死狂暴
	TRUMP_TYPE_DODGE_DEC_HP						= 68,	//法宝-闪避伤血
	TRUMP_TYPE_FORBID_FLY						= 69,   //法宝-禁飞
	TRUMP_TYPE_ANTI_FORBID_FLY					= 70,	//法宝-禁飞抵抗
	TRUMP_TYPE_REGION_DAMAGE					= 72,	//法宝的区域范围全员伤害结界
	TRUMP_TYPE_REGION_BATTLEEFFECT				= 73,	//法宝-战斗力区域结界
	TRUMP_TYPE_REGION_BE_DAMAGE					= 74,	//法宝的区域范围全员被伤害结界
	TRUMP_TYPE_REGION_ADD_HP					= 75,	//法宝的区域范围全员HP结界
	TRUMP_TYPE_REGION_ANTI_HOT					= 76,	//法宝的区域结界高温抗性
	TRUMP_TYPE_REGION_ANTI_ICE					= 77,	//法宝的区域结界冰冻抗性
	TRUMP_TYPE_REGION_ANTI_SHAKE				= 78,	//法宝的区域结界震荡抗性

	TRUMP_TYPE_REGION_FORBID_RESTORE_HP			= 79,	//全员禁止HP回复区域结界
	TRUMP_TYPE_REGION_FORBID_RESTORE_POWER		= 80,   //全员禁止功率恢复区域结界		
	TRUMP_TYPE_REGION_FORBID_RESTORE_EN			= 81,	//全员禁止恢复EN区域区域结界
	TRUMP_TYPE_REGION_FORBID_RESTORE_THRUSTER   = 82,   //全员禁止动力恢复域区结界		
	TRUMP_TYPE_REGION_FORBID_RESTORE_DEF		= 83,	//全员禁止磁能恢复区域结界

	TRUMP_TYPE_REGION_FORBID_TRANS_POS			= 84,   //法宝-区域禁止瞬移结界

	TRUMP_TYPE_REGION_SKILL						= 86,	//区域领域技能
	
	TRUMP_TYPE_REGION_FORBID_JUMP				= 87,	//法宝-区域全员禁止跳跃结界		
	TRUMP_TYPE_HOLE_PROGRESS					= 88,	//法宝-可开洞
	TRUMP_TYPE_REGION_ADD_DEAD_TIME				= 88,	//法宝-区域增加死亡时间		

	TRUMP_TYPE_REGION_RESTORE_XP_SPEED			= 92,   //法宝-区域范围全员XP恢复速度结界
	TRUMP_TYPE_WHOLEMAP_BATTLEEFFECT			= 96,	//法宝-全地图全员战斗力结界		
	TRUMP_TYPE_WHOLEMAP_SYNDIACTE_BATTLEEFFECT  = 97,	//法宝-全地图舰队战斗力结界		
	TRUMP_TYPE_WHOLEMAP_TEAM_BATTLEEFFECT       = 98,	//法宝-全地图队伍战斗力结界		
	TRUMP_TYPE_WHOLEMAP_FAMILY_BATTLEEFFECT     = 99,   //法宝-全地图家族战斗力结界		
	
	TRUMP_TYPE_WHOLEMAP_ADD_EXP					= 100,  //法宝-全地图全员经验值结界
	TRUMP_TYPE_WHOLEMAP_SYNDIACTE_ADD_EXP		= 101,  //法宝-全地图舰队经验值结界
	TRUMP_TYPE_WHOLEMAP_TEAM_ADD_EXP			= 102,  //法宝-全地图队伍经验值结界
	TRUMP_TYPE_WHOLEMAP_FAMILY_ADD_EXP			= 103,	//法宝-全地图家族经验值结界

	TRUMP_TYPE_SELFBLAST_DEC_HP_ANTI			= 107,	//法宝-抗敌人自爆降HP功能
	TRUMP_TYPE_ANTI_BATTLE_EFFECT				= 109,		//法宝-抗战斗力结界效果
	
	TRUMP_TYPE_ANTI_REGION_FORBID_JUMP				= 113,	//法宝-无视区域全员禁止跳跃结界	
	TRUMP_TYPE_ANTI_REGION_FORBID_RESTORE_HP		= 115,  //法宝的无视HP禁止回复

	TRUMP_TYPE_ANTI_REGION_FORBID_RESTORE_EN		= 116,	//法宝-无视禁止恢复EN区域结界
	TRUMP_TYPE_ANTI_REGION_FORBID_RESTORE_POWER	    = 117,	//法宝-无视禁止功率恢复区域结界
	TRUMP_TYPE_ANTI_REGION_FORBID_RESTORE_THRUSTER  = 118,  //法宝-无视禁止动力恢复区域结界		
	TRUMP_TYPE_ANTI_REGION_FORBID_RESTORE_DEF		= 119,	//法宝-无视禁止磁能恢复区域结界

	TRUMP_TYPE_ANTI_FORBID_TRANS_POS			= 120,	//法宝-无视瞬移的区域禁止结界
	TRUMP_TYPE_SELFBLAST_DEC_BATTLEEFFECT_ANTI	= 124,  //法宝-抗敌人自爆降战斗力功能

	TRUMP_TYPE_DEC_DAMAGE_FROM_TRAIN_SPIRIT		= 125,//法宝-受教学机体伤害修正功能
	TRUMP_TYPE_DEC_DAMAGE_FROM_MIDDLE_SPIRIT		= 126,//法宝-受中型机体伤害修正功能
	TRUMP_TYPE_DEC_DAMAGE_FROM_LIFE_SPIRIT		= 128,//法宝-受生命机体伤害修正功能
	TRUMP_TYPE_DEC_DAMAGE_FROM_MACHINE_SPIRIT	= 129,//法宝-受机械舱机体伤害修正功能
	TRUMP_TYPE_DEC_DAMAGE_FROM_ANTI_HOT_SPIRIT	= 130,//法宝-受抗高温机体伤害修正功能
	TRUMP_TYPE_DEC_DAMAGE_FROM_ANTI_ICE_SPIRIT	= 131,//法宝-受抗冰冻机体伤害修正功能
	TRUMP_TYPE_DEC_DAMAGE_FROM_ANTI_SHAKE_SPIRIT	= 132,//法宝-受抗震荡机体伤害修正功能
	TRUMP_TYPE_DEC_DAMAGE_FROM_MEDICAL_SPIRIT	= 133,//法宝-受医疗援助机体伤害修正功能
	TRUMP_TYPE_ANTI_HEAVY_FLY					= 138,//法宝-反重力悬浮
			
	TRUMP_TYPE_DEC_BLACK_NAME_DAMAGE			= 139,	//法宝之黑名伤害减少			
	TRUMP_TYPE_GREEN_NAME_MONSTER_EXP			= 140,	//法宝的杀绿名怪经验增加功能	
	TRUMP_TYPE_BATTLELEV_BY_CONDITION			= 141,	//法宝-按要求增加战斗力	
	TRUMP_TYPE_WEAPON_CONTROL_LEVEL				= 144,	//法宝的武器操控等级上升			
	TRUMP_TYPE_REQEQUIPLEV_BECOME_LOW			= 145,  //法宝的武器装备等级要求下降    
	TRUMP_TYPE_SHIPJOB_DOWN_REQMINLEV			= 146,	//法宝副本要求等级下限降低
	TRUMP_TYPE_SATELLITMSG_PAY_CUTOFF			= 147,	//法宝卫星广播发布费用降低
	TRUMP_TYPE_ADD_LOTTERY_TIMES				= 148,  //法宝-抽奖次数
	
	TRUMP_TYPE_REFULSE_TRADE					= 150,	//法宝的拒绝交易
	TRUMP_TYPE_REFULSE_MARRY					= 151,  //法宝的拒绝求婚
	TRUMP_TYPE_REFUSE_MAKE_FREIND				= 152,  //法宝的拒绝结交消息

	TRUMP_TYPE_RAND_TRANSPOS_IN_LITTE_RANGE		= 153,  //法宝-小瞬移

	TRUMP_TYPE_HIDE_BATTLEEFFECT				= 154,  //法宝-战斗力伪装
	TRUMP_TYPE_BE_WATCH_EQUIP_GAIN_MONEY		= 155,	//法宝-侦察己方装备收费

	TRUMP_TYPE_WHOLEMAP_SKILL					= 159,  //全地图领域技能开始
	TRUMP_TYPE_WHOLEMAP_HP						= 160,  //法宝-全地图全员HP结界
	TRUMP_TYPE_WHOLEMAP_SYNDIACTE_HP			= 161,  //法宝-全地图舰队HP结界
	TRUMP_TYPE_WHOLEMAP_FAMILY_HP				= 162,	//法宝-全地图家族HP结界
	TRUMP_TYPE_WHOLEMAP_TEAM_HP					= 163,  //法宝-全地图队伍HP结界		

	TRUMP_TYPE_WHOLEMAP_ADD_DAMAGE				= 164,	//法宝的全地图全员加伤害结界
	TRUMP_TYPE_WHOLEMAP_SYNDIACTE_ADD_DAMAGE	= 165,	//法宝的全地图舰队加伤害结界
	TRUMP_TYPE_WHOLEMAP_TEAM_ADD_DAMAGE			= 166,	//法宝的全地图队伍加伤害结界
	TRUMP_TYPE_WHOLEMAP_FAMILY_ADD_DAMAGE		= 167,	//法宝的全地图家族加伤害结界
	TRUMP_TYPE_WHOLEMAP_DEC_DAMAGE				= 168,	//法宝的全地图全员减伤害结界
	TRUMP_TYPE_WHOLEMAP_SYNDIACTE_DEC_DAMAGE	= 169,	//法宝的全地图舰队减伤害结界
	TRUMP_TYPE_WHOLEMAP_TEAM_DEC_DAMAGE			= 170,	//法宝的全地图队伍减伤害结界
	TRUMP_TYPE_WHOLEMAP_FAMILY_DEC_DAMAGE		= 171,	//法宝的全地图家族减伤害结界

	TRUMP_TYPE_WHOLEMAP_ANTI_HOT				= 172,	//法宝-全地图全员高温抗性结界		
	
	TRUMP_TYPE_WHOLEMAP_SYNDIACTE_ANTI_HOT		= 173,	//法宝-全地图帮派高温抗性结界				
	TRUMP_TYPE_WHOLEMAP_TEAM_ANTI_HOT			= 174,	//法宝-全地图队伍高温抗性结界		
	TRUMP_TYPE_WHOLEMAP_FAMILY_ANTI_HOT			= 175,	//法宝-全地图家族高温抗性结界		

	TRUMP_TYPE_WHOLEMAP_ANTI_ICE				= 176,	//法宝-全地图全员冰冻抗性结界		
	
	TRUMP_TYPE_WHOLEMAP_SYNDIACTE_ANTI_ICE		= 177,	//法宝-全地图帮派冰冻抗性结界				
	TRUMP_TYPE_WHOLEMAP_TEAM_ANTI_ICE			= 178,	//法宝-全地图队伍冰冻抗性结界		
	TRUMP_TYPE_WHOLEMAP_FAMILY_ANTI_ICE			= 179,	//法宝-全地图家族冰冻抗性结界		

	TRUMP_TYPE_WHOLEMAP_ANTI_SHAKE				= 180,	//法宝-全地图全员震荡抗性结界				
	
	TRUMP_TYPE_WHOLEMAP_SYNDIACTE_ANTI_SHAKE	= 181,	//法宝-全地图帮派震荡抗性结界		
	TRUMP_TYPE_WHOLEMAP_TEAM_ANTI_SHAKE			= 182,	//法宝-全地图队伍震荡抗性结界
	TRUMP_TYPE_WHOLEMAP_FAMILY_ANTI_SHAKE		= 183,	//法宝-全地图家族震荡抗性结界
	
	TRUMP_TYPE_SHIPJOB_UP_REQMAXLEV				= 184,	//法宝副本要求等级上限提高
	TRUMP_TYPE_SATELLITMSG_URGENCY_CUTOFF		= 185,	//法宝卫星广播加急费用降低
	//武器操控等级上升功能 mj 2007-08-03 add
	TRUMP_TYPE_SWORD_CONTROL_LEV_UP             = 188,  //法宝-单手剑操控等级上升			
	TRUMP_TYPE_GIANTSWORD_CONTROL_LEV_UP        = 189,  //法宝-重剑操控等级上升
	TRUMP_TYPE_HARMER_CONTROL_LEV_UP            = 190,  //法宝-战锤操控等级上升
	TRUMP_TYPE_KNIFE_CONTROL_LEV_UP             = 191,  //法宝-单手刀操控等级上升
	TRUMP_TYPE_SPEAR_CONTROL_LEV_UP         = 192,  //法宝-长矛操控等级上升
	TRUMP_TYPE_FREEZEGUN_CONTROL_LEV_UP          = 193,  //法宝-冷冻枪操控等级上升	
	TRUMP_TYPE_MUSKET_CONTROL_LEV_UP            = 194,  //法宝-步枪操控等级上升	
	TRUMP_TYPE_MACHINEGUN_CONTROL_LEV_UP        = 195,  //法宝-机枪操控等级上升	
	TRUMP_TYPE_SHOTGUN_CONTROL_LEV_UP           = 196,  //法宝-散弹枪操控等级上升		
	TRUMP_TYPE_FLAMETHROWERGUN_CONTROL_LEV_UP   = 197,  //法宝-火焰枪操控等级上升	
	
	//装备等级要求下降法宝 mj 2007-08-01 add
	
	TRUMP_TYPE_SWORD_REQ_LEV_DOWN               = 198,  //法宝-单手剑装备等级要求下降
	TRUMP_TYPE_GIANTSWORD_REQ_LEV_DOWN          = 199,  //法宝-重剑装备等级要求下降		
	TRUMP_TYPE_HARMER_REQ_LEV_DOWN              = 200,  //法宝-战锤装备等级要求下降	
	TRUMP_TYPE_KNIFE_REQ_LEV_DOWN               = 201,  //法宝-单刀装备等级要求下降
	TRUMP_TYPE_SPEAR_REQ_LEV_DOWN               = 202,  //法宝-长矛装备等级要求下降
	TRUMP_TYPE_SHIELD_REQ_LEV_DOWN              = 203,  //法宝-盾牌装备等级要求下降
	TRUMP_TYPE_FREEZEGUN_REQ_LEV_DOWN           = 204,  //法宝-冷冻枪装备等级要求下降		
	TRUMP_TYPE_MUSKET_REQ_LEV_DOWN              = 205,  //法宝-步枪装备等级要求下降
	TRUMP_TYPE_MACHINEGUN_REQ_LEV_DOWN          = 206,  //法宝-机枪装备等级要求下降
	TRUMP_TYPE_SHOTGUN_REQ_LEV_DOWN             = 207,   //法宝-散弹枪装备等级要求下降
	TRUMP_TYPE_FLAMETHROWERGUN_REQ_LEV_DOWN     = 208,   //法宝-火焰枪装备等级要求下降
	TRUMP_TYPE_DEFENSEIMPLEMENT_REQ_LEV_DOWN    = 209,   //法宝-肩甲装备等级要求下降
	TRUMP_TYPE_THRUSTER_REQ_LEV_DOWN		    = 210, //法宝-推进器装备等级要求下降
	TRUMP_TYPE_DODGEIMPLEMENT_REQ_LEV_DOWN	    = 211, //法宝-闪避器装备等级要求下降
	TRUMP_TYPE_ENGINE_REQ_LEV_DOWN				= 212, //法宝-发动机装备等级要求下降
	TRUMP_TYPE_SPIRITHPGENERATOR_REQ_LEV_DOWN    = 213,//法宝-HP组件装备等级要求下降功能
	TRUMP_TYPE_BACKPACK_REQ_LEV_DOWN			= 214,//法宝-货仓装备等级要求下降功能
	TRUMP_TYPE_ENERGYGENERATOR_REQ_LEV_DOWN     = 215,  //法宝-能量罩装备等级要求下降
	//mj 2007-08-17
	TRUMP_TYPE_DEFENSEIMPLEMENT_RESTORE_SPEED	= 219,	//核心-磁能恢复速度增加
	TRUMP_TYPE_DEFENSEIMPLEMENT_MAX_LIMITE		= 220,  //核心-磁能上限增加
	TRUMP_TYPE_FLOATCANNON_DEC_REBORN_TIME      = 221,  //法宝-减少浮游炮复活时间
	TRUMP_TYPE_ADD_DOUBLE_EXPERIENCE_MED        = 224,	//法宝-延长双倍药水持续时间
	TRUMP_TYPE_BOOTH_DISCOUNT                   = 225,  //法宝-摆摊费用降低
	TRUMP_TYPE_LEVLE_ADD_BATTLEEFFECT           = 226,  //法宝-等级增加战斗力
	TRUMP_TYPE_USER_LEVEL_ADD_BATTLEEFFECT      = 227,  //法宝-军衔增加战斗力
	TRUMP_TYPE_SYMBOL_ADD_BATTEEFFECT           = 229,  //法宝-军校徽章战斗力+1

	TRUMP_TYPE_ADD_TEAM_EXP_SHARE               = 236,  //法宝-组队经验分享增加
	TRUMP_TYPE_ADD_XP_RECOVER_SPEED				= 237,  //法宝-XP回复速度增加
 	TRUMP_TYPE_ADD_DAMAGE_TO_EMPLACEMENT        = 240,   //法宝-对炮台伤害增加
	TRUMP_TYPE_SUPPORT_STATION					= 241,	 //法宝-增加补给站
	TRUMP_TYPE_DEC_DURABILITY_BY_SWORD          = 243,   //法宝-单手剑攻击耐久度
	TRUMP_TYPE_DEC_DURABILITY_BY_GIANTSWORD     = 244,   //法宝-重剑攻击耐久度
	TRUMP_TYPE_DEC_DURABILITY_BY_HARMER         = 245,   //法宝-战锤攻击耐久度
	TRUMP_TYPE_DEC_DURABILITY_BY_KNIFE          = 246,   //法宝-单刀攻击耐久度
	TRUMP_TYPE_DEC_DURABILITY_BY_SPEAR          = 247,   //法宝-长矛攻击耐久度
	TRUMP_TYPE_DEC_DURABILITY_BY_FREEZEGUN      = 248,   //法宝-冷冻枪攻击耐久度
	TRUMP_TYPE_DEC_DURABILITY_BY_MUSKET         = 249,   //法宝-步枪攻击耐久度
	TRUMP_TYPE_DEC_DURABILITY_BY_SHOTGUN        = 250,   //法宝-散弹枪攻击耐久度
	TRUMP_TYPE_DEC_DURABILITY_BY_FLAMETHROWERGUN= 251,   //法宝-火焰枪攻击耐久度

	TRUMP_TYPE_EXTRA_DAMAGE_BY_SWORD            = 252,   //法宝-单手剑额外伤害
	TRUMP_TYPE_EXTRA_DAMAGE_BY_GIANTSWORD       = 253,   //法宝-重剑额外伤害
	TRUMP_TYPE_EXTRA_DAMAGE_BY_HARMER           = 254,   //法宝-战锤额外伤害
	TRUMP_TYPE_EXTRA_DAMAGE_BY_KNIFE            = 255,   //法宝-单刀额外伤害
	TRUMP_TYPE_EXTRA_DAMAGE_BY_SPEAR            = 256,   //法宝-长矛额外伤害
	TRUMP_TYPE_EXTRA_DAMAGE_BY_FREEZEGUN        = 257,   //法宝-冷冻枪额外伤害
    TRUMP_TYPE_EXTRA_DAMAGE_BY_MUSKET           = 258,   //法宝-步枪额外伤害
    TRUMP_TYPE_EXTRA_DAMAGE_BY_SHOTGUN          = 259,   //法宝-散弹枪额外伤害
	TRUMP_TYPE_EXTRA_DAMAGE_BY_FLAMETHROWERGUN  = 260,   //法宝-火焰强额外伤害


	TRUMP_TYPE_PK_REBORN_TO_50_PERCENT          = 232,  //法宝-PK赛复活几率提高至50%

	TRUMP_TYPE_REGION_DOMAIN_DAYTIME			= 233,	//区域白天领域
	
	TRUMP_TYPE_CHANG_LIMIT_SIZE					= 1000,	//非固定功能位法宝的最大数	
	///////////////////////////////////////////////////////////////////////////////
	TRUMP_TYPE_MAINFUNC_BEGIN				= 90010000,	//主功能的号上限
	TRUMP_TYPE_RADIO_SEARCH					= TRUMP_TYPE_MAINFUNC_BEGIN,//法宝-雷达系统
	TRUMP_TYPE_ADD_ATTACK					= 90010001,	//法宝-攻击修正主功能
	TRUMP_TYPE_ADD_DEFENCE					= 90010002, //法宝-防御修正主功能
	TRUMP_TYPE_ADD_ENGINEE_MAX_POWER		= 90010003, //法宝-功率修正主功能
	TRUMP_TYPE_THRUSTER_SPEND_POWER			= 90010004,	//法宝之影响推进器消耗速度			
	TRUMP_TYPE_ADD_DAMAGE					= 90010005,	//法宝-对正常机体伤害修正主功能		
	TRUMP_TYPE_DEC_DAMAGE					= 90010006,	//法宝-受正常机体伤害修正
	TRUMP_TYPE_ATTACK_TRANSFORM_DAMAGE_ADJ	= 90010007,	//法宝的对变形机体伤害修正功能
	TRUMP_TYPE_BEATTACK_BY_TRANSFORM_DAMAGE_ADJ	= 90010008,	//法宝的被变形机体伤害修正功能
	TRUMP_TYPE_BATTLELEV                    = 90010009, //法宝的战斗力功能
	TRUMP_TYPE_ZERO                         = 90010010, //法宝-零号核心（加战斗力、攻击、防御）
	TRUMP_TYPE_MAINFUNC_END					= 90089999,	//主功能的号下限					
};

enum
{
	MAKE_HOLE1_PROCESS = 1,
	MAKE_HOLE2_PROCESS,
	MAKE_HOLE1_MOONGEM,
	MAKE_HOLE2_MOONGEM,
	MAKE_HOLE1_RMB,
	MAKE_HOLE2_RMB,
	MAKE_HOLE3_PROCESS_WEAPON,
	MAKE_HOLE4_PROCESS_WEAPON,
	MAKE_HOLE3_RMB_WEAPON,
	MAKE_HOLE4_RMB_WEAPON,
};

#define TRUMP_STATUS_KEY(x, y) (x + y%100000)													
//////////////////////////////////////////////////////////////////////
// 内部状态，不需要通过MsgPlayer通知其它玩家的状态。服务器内部使用(magictype使用)
enum STATUS_TYPE
{
		STATUS_NORMAL			,

		// 以下是技能触发导致的状态，sort=107的技能中status字段的代码含义
		STATUS_STOPALL			= 1,			// 晕 由客户端(和NPC服务器)控制玩家自己不能移动
//		STATUS_POISON			= 2,			// 毒
//		STATUS_ATTACK			= 3,			// 弱   //只有判断 没有增加的
//		STATUS_DEFENCE			= 4,			// 虚
//		STATUS_MOVESLOWLY		= 5,			// 缓
//		STATUS_STOPFIGHT		= 6,			// 封   //只有判断 没有增加的
//		STATUS_STOPMOVE			= 7,			// 停 由客户端(和NPC服务器)控制玩家自己不能移动
//		STATUS_UNDERWRAPS		= 8,			// 隐身，隐形，友军可见  //战斗机取消隐形
//		STATUS_WOUND_REFLECT	= 9,			// 伤害反射（反击）
//		STATUS_SHIELD			= 10,			// 防御罩
//		STATUS_GUARDIANSHIP		= 11,			// 守护
//		STATUS_SLEEP			= 12,			// 睡
//		STATUS_DAMAGE_RED		= 12,			//领域伤害减少
//		STATUS_RECOVERHP		= 13,			// HP慢慢恢复
//		STATUS_RECOVEREN		= 14,			// En慢慢恢复
 		STATUS_FETCH_BURST		= 15,			// 魂爆 威力修正指数:power 防御修正指数param
//		STATUS_INVINCIBLE		= 16,			// 无敌
		STATUS_INTERATTACK		= 17,			// 进入战斗

		STATUS_RETALIATEUPON	,				// 还击状态
//		STATUS_SHIELDSKILL		,				// 装备了itemtype中sort=18，且type=0|1的盾牌的盾能量累加状态
//		STATUS_COUNTERSTRIKE	,				// 反击状态（反击被动） 合并 反射之光能量累加状态（反击主动）
//		STATUS_THROWENEMY		,				// 投技 走 的状态，只能走和投
		STATUS_MULTISELECTENEMY	,				// 多目标指定技能的吟唱状态下，可以选择新目标，并记录。
		STATUS_BEMULTISELECT	,				// 被多目标指定状态
//		STATUS_POISONRANGE		,				// 毒环状态
//		STATUS_ADJUSTTOGETHER	,				// 调和
//		STATUS_KILLLINEUP		,				// 杀阵
//		STATUS_BEKILLLINEUPED	,				// 被未发动杀阵，带有杀阵状态的玩家攻击过的标志
//		STATUS_KILLLINEUPSUC	,				// 杀阵布置成功，等待启动杀阵的延时状态
//		STATUS_CRAZYFIGHTER		,				// 狂战士状态
//		STATUS_CRAZYFIGHTERHP	,				// 狂战士状态 HP回复
//		STATUS_CRAZYPOWERFIGHTER,				// 真狂战士状态
//		STATUS_BASESUPPORTENABLE,				// 基地援助允许使用状态
//		STATUS_ENGINOVERRUN		,				// 发动机过热禁止回复状态
//		STATUS_WEAPONINFO		,				// 高温，穿刺，腐蚀，震荡，普通，攻击计算信息
//		STATUS_HEADLOOP			,				// 头部回路，状态，具备抵制比自己包含的等级参数低的不良状态影响(nPower七种不良状态之一, nParam等级, nWparam形状，品质)
//		STATUS_UPSPIRIT_INQUEUE	,				// 正在排队进化机体，掉线判断处理，排队管理
//		STATUS_MACHINECENTER	,				// 在机械维护中心的维护台上操作状态，不能移动
//		STATUS_RECOVERPOWER		,				// 发动机恢复
//		STATUS_HEADLOOPREBUILD	,				// 头部回路改造忙状态
//		STATUS_INSPACESHIPJOB	,				// 玩家在外星地图做飞船任务状态
//		STATUS_SHIPJOBSIGNUPOK	,				// 玩家报名飞船任务成功状态，防止多个任务报名。
		STATUS_DISABLELEAVEMAP	,				// 禁止回城状态(进化过程中禁止使用回城卷)
//		STATUS_LAUNCHREADY		,				// 飞船发射准备状态
//		STATUS_INSPACESHIP		,				// 即将登船
//		STATUS_RETURNMARKET		,				// 飞船返航
//		STATUS_CHANGINGSPIRIT	,				// 正在更换机体, 延时状态
		STATUS_XPFULLSTATUS		,				// xp full
		STATUS_XPWAITSTATUS		,				// xp wait
//		STATUS_XP_REGION_SPEED	,				// XP区域回复速度加成
		
//		STATUS_KILL_REFLECT		,
		STATUS_CURSE			,
		STATUS_RECOVERY         ,
// 		STATUS_FLOWER			,
// 		STATUS_WHITEFLOWER		,			// 2007.03.27 收到白玫瑰数据
		STATUS_BETRAY_BROTHER   ,
// 		STATUS_SELLOUT_TUTOR	,			// 背叛导师
// 		STATUS_SELLOUT_TUTOR_STEP2,         // 背叛导师状态第二阶段
//		STATUS_MAGIC_REBORN		,			// 复活技能

		// system status
		STATUS_DIE				,
		STATUS_CRIME			,
		STATUS_SELFDEFENCE  	,			// add huang 2004.1.11 闪蓝名状态
		STATUS_TEAMLEADER		,
//		STATUS_PKVALUE			,
 		STATUS_DISAPPEARING		,
		STATUS_SYNCRIME			,
		STATUS_WING				,

		STATUS_ANGEL			,//天使状态

//	    STATUS_KEEPBOW			,
//		STATUS_PKSWITCH			,
 		STATUS_BUSY_LevupInterface,
		
		// old status
		STATUS_DETACH_BADLY		,			// 复用，清除所有不良状态
		STATUS_DETACH_ALL		,			// 复用，清除所有魔法状态
		STATUS_VAMPIRE			,			// 复用，ATKSTATUS中吸血
		STATUS_ATKRANGE			,
		STATUS_REFLECT			,
//		STATUS_WEAPONDAMAGE		,
//		STATUS_MAGICDAMAGE		,
		STATUS_ATKSPEED			,
//		STATUS_LURKER			,			// user only
//		STATUS_TORNADO			,			// self only
//		STATUS_REFLECTMAGIC		,
		STATUS_DODGE			,
//		STATUS_SUPER_DEF		,
//		STATUS_SUPER_ATK		,			// self only	
//		STATUS_SUPER_MATK		,		 	// self only
		// tcp add
//		STATUS_UPSPIRIT_BEGAN	,			// 机体正在进化中
//		STATUS_SHOT_DELAY	    ,			// 机体子弹用光，延迟2秒才能射击
		STATUS_PRACTISE		    ,			// 在线练功状态
//		STATUS_STOP				,      
		STATUS_SUPPRESS			,			// 压制状态
//		STATUS_FREEZE			,			// 冷冻状态   //只有判断 没有增加的
//		STATUS_SELFPROTECT      ,			// 自我保护
//		STATUS_LOCKATTACK		,			// 锁定攻击状态	     CMachineGun  	
//		STATUS_SNIPE_AIM		,			// 瞄准状态		
	/*	STATUS_SYMBOL			,*/			// 共和国徽章状态
//		STATUS_XPTRANSLOOK		,			// XP变形技能状态
//		STATUS_BAITMONSTER		,			// 2007.02.02 引诱怪物状态
		/*STATUS_ACT_EMOTION		,*/			// 2007.03.05 动作表情保存
		
//		STATUS_FLYMAP			,			// 切屏状态
//		STATUS_NPC_STOP_TURN    ,			//炮台停止转动  狙击步枪弱点破坏功能实现 tcp 2007-1-25	
//		STATUS_NPC_STOP_WORK    ,			//炮台待机模式  狙击步枪弱点破坏功能实现 tcp 2007-1-25
//		STATUS_NPC_STOP_ATTACK	,			//近战连击机制  2007-4-10 tcp add 僵直状态
		
//		STATUS_RADAR			,			// 2007.03.07 增值物品雷达状态
//		STATUS_DEBUGMODE		,			// 2007.03.06 调试状态模式(HP增益模块90900000凋落支持)
//		STATUS_FRESHBATTLEEFFECT,			// 2007.03.29 战斗力分享更换装备刷新
		STATUS_BECALL_BY_TEAMLEADER,		// 被队长召唤 tcp 2007-2-27 add
//		STATUS_FIGHT_BACK,					// 反击状态 tcp 2007-3-29 add
//		STATUS_UPMODELLEV_USEITEM_INQUEUE,  // 正在使用物品星级升级的机体
//                STATUS_HIDE_SYDICATE_NAME,			// 法宝的隐匿舰队名称
/////////////////////////////////////////////结界begin////////////////////////////////////////////////
		STATUS_TRUMP_REGION_BATTLEEFFECT,			 //法宝-战斗力区域结界		
		STATUS_TRUMP_REGION_DAMAGE,					 //法宝的区域范围全员伤害结界		
		STATUS_TRUMP_REGION_BE_DAMAGE,				 //法宝的区域范围全员被伤害结界		
		STATUS_TRUMP_REGION_TYPE_REGION_ADD_HP,		 //法宝的区域范围全员HP结界    
		STATUS_TRUMP_REGION_FORBID_RESTORE_HP,		 //区域范围全员HP回复
// 		STATUS_TRUMP_REGION_ANTI_HOT,				 //法宝的区域结界高温抗性
// 		STATUS_TRUMP_REGION_ANTI_ICE,				 //法宝的区域结界冰冻抗性
// 		STATUS_TRUMP_REGION_ANTI_SHAKE,				 //法宝的区域结界震荡抗性
// 		
//		STATUS_TRUMP_WHOLEMAP_ANTI_HOT,				 //法宝-全地图高温抗性结界
// 		STATUS_TRUMP_WHOLEMAP_ANTI_ICE,				 //法宝-全地图冰冻抗性结界
//		STATUS_TRUMP_WHOLEMAP_ANTI_SHAKE,			 //法宝-全地图震荡抗性结界

		STATUS_TRUMP_WHOLEMAP_ADD_EXP,				 //法宝-全地图全员经验值结界
		STATUS_TRUMP_WHOLEMAP_SYNDIACTE_ADD_EXP,	 //法宝-全地图舰队经验值结界
		STATUS_TRUMP_WHOLEMAP_TEAM_ADD_EXP,			 //法宝-全地图队伍经验值结界
		STATUS_TRUMP_WHOLEMAP_FAMILY_ADD_EXP,		 //法宝-全地图家族经验值结界	

// 		STATUS_TRUMP_WHOLEMAP_TEAM_ANTI_HOT,		 //法宝-全地图队伍高温抗性结界		
// 		STATUS_TRUMP_WHOLEMAP_TEAM_ANTI_ICE,		 //法宝-全地图队伍冰冻抗性结界		
// 		STATUS_TRUMP_WHOLEMAP_TEAM_ANTI_SHAKE,		 //法宝-全地图队伍震荡抗性结界			
// 		STATUS_TRUMP_WHOLEMAP_SYNDIACTE_ANTI_HOT,	 //法宝-全地图帮派高温抗性结界		
// 		STATUS_TRUMP_WHOLEMAP_SYNDIACTE_ANTI_ICE,	 //法宝-全地图帮派冰冻抗性结界		
// 		STATUS_TRUMP_WHOLEMAP_SYNDIACTE_ANTI_SHAKE,	 //法宝-全地图帮派震荡抗性结界			
// 		STATUS_TRUMP_WHOLEMAP_FAMILY_ANTI_HOT,		 //法宝-全地图家族高温抗性结界		
// 		STATUS_TRUMP_WHOLEMAP_FAMILY_ANTI_ICE,		 //法宝-全地图家族冰冻抗性结界		
// 		STATUS_TRUMP_WHOLEMAP_FAMILY_ANTI_SHAKE,	 //法宝-全地图家族震荡抗性结界
		STATUS_TRUMP_WHOLEMAP_BATTLEEFFECT,			 //法宝-全地图全员战斗力结界
		STATUS_TRUMP_WHOLEMAP_SYNDIACTE_BATTLEEFFECT,//法宝-全地图舰队战斗力结界
		STATUS_TRUMP_WHOLEMAP_FAMILY_BATTLEEFFECT,	 //法宝-全地图家族战斗力结界
		STATUS_TRUMP_WHOLEMAP_TEAM_BATTLEEFFECT,	 //法宝-全地图队伍战斗力结界		
		STATUS_TRUMP_WHOLEMAP_HP,					 //法宝-全地图全员HP结界
		STATUS_TRUMP_WHOLEMAP_SYNDIACTE_HP,			 //法宝-全地图舰队HP结界
		STATUS_TRUMP_WHOLEMAP_FAMILY_HP,			 //法宝-全地图家族HP结界
		STATUS_TRUMP_WHOLEMAP_TEAM_HP,				 //法宝-全地图队伍HP结界
		STATUS_TRUMP_WHOLEMAP_ADD_DAMAGE,			 //法宝的全地图全员加伤害结界
		STATUS_TRUMP_WHOLEMAP_SYNDIACTE_ADD_DAMAGE,	 //法宝的全地图舰队加伤害结界
		STATUS_TRUMP_WHOLEMAP_TEAM_ADD_DAMAGE,		 //法宝的全地图队伍加伤害结界
		STATUS_TRUMP_WHOLEMAP_FAMILY_ADD_DAMAGE,	 //法宝的全地图家族加伤害结界
		STATUS_TRUMP_WHOLEMAP_DEC_DAMAGE,			 //法宝的全地图全员减伤害结界
		STATUS_TRUMP_WHOLEMAP_SYNDIACTE_DEC_DAMAGE,	 //法宝的全地图舰队减伤害结界
		STATUS_TRUMP_WHOLEMAP_TEAM_DEC_DAMAGE,		 //法宝的全地图队伍减伤害结界
		STATUS_TRUMP_WHOLEMAP_FAMILY_DEC_DAMAGE,	 //法宝的全地图家族减伤害结界
		
		STATUS_TRUMP_REGION_FORBID_RESTORE_EN,		 //全员禁止恢复EN区域区域结界（体力）
		STATUS_TRUMP_REGION_FORBID_RESTORE_POWER,    //全员禁止功率恢复区域结界						//140
		STATUS_TRUMP_REGION_FORBID_RESTORE_THRUSTER, //全员禁止动力恢复域区结界		
		STATUS_TRUMP_REGION_FORBID_RESTORE_DEF,		 //全员禁止磁能恢复区域结界	
		
//		STATUS_TRUMP_REGION_RESTORE_XP_SPEED,		 //法宝-区域范围全员XP恢复速度结界
		STATUS_TRUMP_REGION_FORBID_JUMP,			 //法宝-区域全员禁止跳跃结界	
		
		STATUS_TRUMP_REGION_ADD_DEAD_TIME,           //法宝-区域增加死亡时间 
		////////////////////////////////////////////结界end///////////////////////////////////////////		
		////////////////////////////////////////////////////////////家族//////////////////////////////////		
	    STATUS_GEM_CAN_EXCHANGE_EXP,				 //流星换经验
		STATUS_PKBEATBACK,							 //玩家被击退,客户端必须反馈才能消除状态
//		STATUS_FIRST_NIMBUS,						 //第一灵气排行榜
//		STATUS_STARWAR_LEADER,						 //星际战指挥官
//		STATUS_WATCH_STARWAR,						 //星际战观战状态

//		STATUS_TRUMP_WORKING_THE_SAME_TYPE_SPIRIT_BATTLEEFFECT_BEGIN	= 500,//法宝-同类机体战斗力提升		
//		STATUS_TRUMP_WORKING_THE_SAME_TYPE_SPIRIT_BATTLEEFFECT_END	= 699,//法宝-同类机体战斗力提升
		STATUS_WAYLAY                             = 800, // 埋伏技能状态
		STATUS_USER_HP_AUTO_RESUME,  		
		STATUS_USER_MP_AUTO_RESUME,  		
		STATUS_USER_EN_AUTO_RESUME,  		
		STATUS_USER_CAN_CONJURE_DEVIL,
		STATUS_USER_CANNOT_CONJURE_DEVIL,
////////////////////////////自定义的状态，在数据库中配置//////////////////////////////////////////////
		STATUS_CUSTOM_BEGIN=1000,
		STATUS_TEAMSTATUS_EXP_MEDICINE=STATUS_CUSTOM_BEGIN,	// 队伍经验值药水
		STATUS_STAR_MONSTER		,			// 对怪物星级状态
		STATUS_ADD_BATTLEEFFECT	,			// 增加战斗力状态
//		STATUS_INCEXP_DECDEF	,			// 经验值增加、防御下降状态
//		STATUS_INCEXP_DECATK	,			// 经验值增加、攻击下降状态
//		STATUS_CANNON_DIE,					// 浮游炮死亡
		STATUS_MODLE_LEV_COLD   ,			// 战斗星级的冷却状态
//		STATUS_TRUMP_USE_TIME_LIMIT,		// 法宝复活技能时间限制状态
		STATUS_PK_CHAMPION1			= 1008,		// pk赛 超级冠军状态 
		STATUS_PK_CANDICATE1		= 1009,		// pk赛 超级入围状态    // PK赛   加一个枚举量  showstateto时 下发
		STATUS_PK_CHAMPION2			= 1010,		// pk赛 高级冠军状态 
		STATUS_PK_CANDICATE2		= 1011,		// pk赛 高级入围状态
		STATUS_PK_CHAMPION3			= 1012,		// pk赛 中级冠军状态 
		STATUS_PK_CANDICATE3		= 1013,		// pk赛 中级入围状态
		STATUS_TRUMP_SELFBLAST_DECBATTLEEFFECT= 1014,//法宝-自爆降敌人战斗力功能
		STATUS_ATTACK_LOCK			= 1020,		// 近战普通攻击改跳斩+连击 状态
//		STATUS_ANTI_HEAVY_FLY		= 1021,     // 法宝-反重力悬浮
		STATUS_COACH_USER			= 1022,		// 玩家拥有的指导量,param=1为LOGIN
		STATUS_COACH_SYN			= 1023,		// 帮主拥有的指导次数,param=1为LOGIN
		STATUS_COACH_UNDERSTAND		= 1024,		// 指导领会状态,power=Uplevtime,param=时长(分钟),wparam=剩下可充uplevtime
		STATUS_ACTION_ADD_BATTLEEFFECT=1025,			// 增加战斗力状态
		STATUS_TRANS_DEC_BATTLEEFFECT=1026,			// 战斗力下降状态
//		STATUS_TRANS_RAGE			= 1027,		// 进入狂暴状态
//		STATUS_GENERATOR_WEAK		= 1028,		// 能量场不足
		STATUS_TRUMP_DYING_RAGE     = 1035,             //濒死狂暴
		STATUS_BROTHER_BE_APPLIED_TRANSFER = 1039,//被申请兄弟瞬移
		STATUS_BROTHER_TRANSFER		= 1040,		// 兄弟瞬移
		STATUS_CARRY_WOOD			= 1041,		// 跑商状态
		STATUS_GODTRANSPORT			= 1042,		//神仙传送状态
		STATUS_USER_DIE				= 1043,		//玩家死亡15s倒计时
		STATUS_GUARD_CALLOUT_DISABLE = 1050, // 待卫禁止出征状态
//		STATUS_GUARD_SPIRITSKILL0_COLD = 1051,//侍卫技能冷却时间，目前只有一个
//		STATUS_GUARD_BETHREATEN     = 1055,  //被太监震慑状态

//		STATUS_GUARD_DECMAXHP		= 1060,	//令攻击对象的生命上限下降一定百分比   算命先生可以令攻击对象的生命上限下降一定百分比
//		STATUS_GUARD_DECHP			= 1061,	//令攻击对象的HP当前值下降一定百分比   //算命先生可以令攻击对象的HP当前值下降一定百分比
//		STATUS_GUARD_STOPHEAL		= 1062,	//一定时间内无法回复生命
//		STATUS_GUARD_STOPSKILL		= 1063,	//令攻击对象在一定时间内禁止使用部份技能
#ifdef _ACCELERATE_MOVE
//		STATUS_PM_ACCE_MOVE			= 1064,	//加速移动
//		STATUS_PM_FLY_MOVE			= 1065,	//飘浮状态
#endif // _ACCELERATE_MOVE

		STATUS_BROTHER_SWEAR        = 1070, //兄弟结拜状态()
//		STATUS_DIGING		        = 1071, //挖掘状态

//		STATUS_COLLECT				= 1075, //收集状态
		STATUS_FIRST_WOLF,
		STATUS_SECOND_WOLF,

		STATUS_DOMAIN_ENTER			= 1080, //进入领域
		STATUS_DOMAIN_LEAVE			= 1081, //离开领域
        
		STATUS_USER_WORSHIP			= 1090, //献祭状态
		STATUS_SUCKBLOOD_EXPIATE,			//吸血或清洗救赎	09-09-17

		STATUS_CALL_EVENT_STOPALL	= 2000, //CALLEVENT晕状态
		//////////////////////////////////////////////////////////////////////////
		// STATUS_VARIATION_WERWOLF                    =  10000, // 狼人状态  有以下变异状态之一必要有有这个状态 方便检查和删除时的操作
														
		STATUS_WERWOLF_LEV1							=  10000,  // 无变异属性的狼人状态编号为10000（一级）和10001（二级）。
		STATUS_WERWOLF_LEV2            				=  10001, 

		STATUS_RAPTOR_VARIATION_LEV1            	=  10100, //猛禽变异，外形为猛禽变异的狼人外形，对应狼人状态编号为10100（一级）和10101（二级）。
		STATUS_RAPTOR_VARIATION_LEV2            	=  10101, 		
		
		STATUS_BAT_VARIATION_LEV1					=  10110, //蝙蝠变异，外形为蝙蝠变异的狼人外形，对应狼人状态编号为10110（一级）和10111（二级）。
		STATUS_BAT_VARIATION_LEV2					=  10111,

		STATUS_SHARK_VARIATION_LEV1					=  10200, //鲨鱼变异，外形为鲨鱼变异的狼人外形，对应狼人状态编号为10200（一级）和10201（二级）。
		STATUS_SHARK_VARIATION_LEV2            		=  10201,

		STATUS_DOLPHIN_VARIATION_LEV1            	=  10210, //海豚变异，外形为海豚变异的狼人外形，对应狼人状态编号为10210（一级）和10211（二级）。
		STATUS_DOLPHIN_VARIATION_LEV2            	=  10211,

		STATUS_BEAR_VARIATION_LEV1					=  10300, //熊基因变异，外形为熊基因变异的狼人外形，对应狼人状态编号为10300（一级）和10301（二级）。
		STATUS_BEAR_VARIATION_LEV2            		=  10301,

		STATUS_LEOPARD_VARIATION_LEV1            	=  10310, //豹基因变异，外形为豹基因变异的狼人外形，对应狼人状态编号为10310（一级）和10311（二级）。
		STATUS_LEOPARD_VARIATION_LEV2            	=  10311,

		STATUS_CATTLE_VARIATION_LEV1            	=  10320, //牛基因变异，外形为牛基因变异的狼人外形，对应狼人状态编号为10320（一级）和10321（二级）。
		STATUS_CATTLE_VARIATION_LEV2            	=  10321,
	
		STATUS_VAMPIRE_UNDER_SUNSHINE            	=  10333, // 吸血鬼被日晒状态
		STATUS_VAMPIRE_UNDER_SAINT_LIGHT            =  10334, // 吸血鬼被圣光照射状态
		STATUS_VAMPIRE_UNDER_DOMAIN_LIGHT			=  10335, // 吸血鬼被白天领域照射状态

		STATUS_DIVE                                 =  10336, //潜水状态  
        STATUS_CONK                                 =  10337, //昏迷状态 

		STATUS_NOMAL_DOMAIN_MAP						=  10338,
		STATUS_NOMAL_DOMAIN_REGION					=  10339,

		STATUS_SAN_SHIELD							=  10342,	//神圣护盾状态
		STATUS_JUSTICE								=  10343,	//审判状态
		STATUS_LIGHTNING_SHAKE						=  10344,	//电击状态

		STATUS_BLEEDING								=  10345, // 流血
		STATUS_FREEZING								=  10346, // 冰冻状态
		STATUS_BURNING								=  10347, // 灼烧状态

		STATUS_WITHBOMB								=  10348, // 炸弹附身

		STATUS_HEMO_SHADOW							=  10349, // 血影步
							
		STATUS_QUICK_EQUIPAMMO						=  10350, // 
		STATUS_ADD_LIFE								=  10351, //补血状态
		STATUS_MOVE_VEL_SLOWLY						=  10352, //降低速度状态
		STATUS_DIZZY								=  10353, //眩晕状态

		STATUS_CAP									=  20200,										      //被抓住2秒前
		STATUS_CAPOVER								=  20201,										  //被抓住2秒后
		STATUS_CAPPOWER								=	20202,									  //被抓住强化状态

// ongoing

//////////////////////////////////////////法宝-冷却时间////麻烦把冷却状态加一份到IsInColdTime(OBJID idItem, int nFunctionCode)函数中//////////////////////		
//  		STATUS_TRUMP_COLD_TIME_MASK = 2000,
// 		STATUS_TRUMP_COLD_TIME_FORBID_FLY					= TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_FORBID_FLY),				    //法宝-禁飞						
// 		STATUS_TRUMP_SELFBLAST_DECBATTLEEFFECT_PROTECTTIME	= TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_SELFBLAST_DEC_BATTLEEFFECT), //法宝-自爆降敌人战斗力功能保护时间
// 		STATUS_TRUMP_DODGEDECHP_PROTECTTIME					= TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_DODGE_DEC_HP),				//法宝-MISS伤血				
// 		STATUS_TRUMP_DAMAGE_SUCK_HP_PROTECTTIME				= TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_DAMAGE_SUCK_HP),				//法宝吸血功能保护时间			
// 		STATUS_TRUMP_COLD_TIME_HP_CURSE						= TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_HP_CURSE),				    //法宝的诅咒					
// 		STATUS_TRUMP_FLOATCANNON_SUPPORT_HP_PROTECTTIME		= TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_FLOATCANNON_SUPPORT_HP),		//法宝的浮游炮生命转移功能保护时间
// 		STATUS_TRUMP_IDENT_EQUIP_PROTECTTIME				= TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_IDENT_EQUIP),				//法宝的装备鉴定功能
// 		STATUS_TRUMP_COLD_THE_SAME_TYPE_SPIRIT_BATTLEEFFECT  = TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_THE_SAME_TYPE_SPIRIT_BATTLEEFFECT),		//法宝-同类机体战斗力提升冷切时间						
// 		STATUS_TRUMP_COLD_RAND_TRANSPOS_IN_LITTE_RANGE		= TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_RAND_TRANSPOS_IN_LITTE_RANGE),           //法宝-小瞬移冷切时间
// 		STATUS_TRUMP_COLD_REGION_FORBID_TRANS_POS			= TRUMP_STATUS_KEY(STATUS_TRUMP_COLD_TIME_MASK, TRUMP_TYPE_REGION_FORBID_TRANS_POS),		        //法宝-瞬移的区域禁止结界				
//////////////////////////////////////////法宝-有效时间时间///////////////////////////////////////////////				
// 		STATUS_TRUMP_WORKING_TIME_MASK= 3000,
// 		STATUS_TRUMP_WORKING_TIME_RADIO_SEARCH			    = TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_RADIO_SEARCH),			 //法宝-雷达系统
// 		STATUS_TRUMP_WORKING_TIME_FORBID_FLY				= TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_FORBID_FLY),			     //法宝-禁飞								
// 		STATUS_TRUMP_WORKING_TIME_BE_WATCH_EQUIP_GAIN_MONEY	= TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_BE_WATCH_EQUIP_GAIN_MONEY),//法宝-侦察己方装备收费		
// 		STATUS_TRUMP_WORKING_TIME_BE_DELAY_REBORN_TIMES		= TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_DELAY_BEKILLER_REBORN_TIMES),  // 法宝-对手复活延时
// 		STATUS_TRUMP_WORKING_TIME_BE_DELAY_REBORN_BY_OTHER_TIMES = TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_BE_REBORN_BY_OTHER_TIMES),// 法宝-对手增加不可被复活				
// 		STATUS_TRUMP_WORKING_TIME_HIDE_BATTLEEFFECT			= TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_HIDE_BATTLEEFFECT),		     // 法宝-战斗力伪装		
// 		STATUS_TRUMP_CHANGE_BEKILER_GHOSTTYPE				= TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_CHANGE_BEKILER_GHOSTTYPE),    //法宝-改变对手灵魂状态
// 		STATUS_TRUMP_REFULSE_MARRY							= TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_REFULSE_MARRY),			    //法宝的拒绝求婚
// 		STATUS_TRUMP_REFULSE_TRADE							= TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_REFULSE_TRADE),				//法宝的拒绝交易
//  		STATUS_TRUMP_REGION_FORBID_TRANS_POS				= TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_REGION_FORBID_TRANS_POS),		//法宝-瞬移的区域禁止结界		
// 		STATUS_TRUMP_REFUSE_MAKE_FREIND						= TRUMP_STATUS_KEY(STATUS_TRUMP_WORKING_TIME_MASK, TRUMP_TYPE_REFUSE_MAKE_FREIND),			//法宝-拒绝结交消息
};

enum { STATUS_OTHER, STATUS_GOOD, STATUS_BAD };			// STATUS_OTHER 没有最多同时3个的限制


enum STATUS_VARIATION_LEV
{
	STATUS_VARIATION_LEV_NONE = 0, // 没有狼人状态;
	STATUS_VARIATION_LEV_1    = 1, // 一级狼人状态
	STATUS_VARIATION_LEV_2    = 2, // 二级狼人状态	
};
// const int VARIATION_AFFECT[4][4] = 
// { 
// 	 5, 15, 10,  5;
// 	10, 10, 10, 15;
// 		
// }

enum GENIC_VARIATION_AFFECT     //这个暂时没有入库  只能先常量在这里了
{	
	//飞行类基因变异的狼人状态
	
	// 猛禽变异状态, 影响玩家属性如下 
	//主要 生命降低5%，攻击提高15%，防御下降10%，闪避提高5%
	RAPTOR_VARIATION_LIFE_REDUCE				=  5,  
	RAPTOR_VARIATION_ATTACK_ENHANCE				= 15,
	RAPTOR_VARIATION_DEFENCE_REDUCE				= 10,  
	RAPTOR_VARIATION_JOOK_ENHANCE				=  5,
	
	
	// 	蝙蝠变异状态，主要影响玩家属性如下：	
	// 	2  生命降低10%，攻击提高10%，防御下降10%，闪避提高15%。（以上比例均为暂定值，具体由数值策划确定）	
	BAT_VARIATION_LIFE_REDUCE					= 10,
	BAT_VARIATION_ATTACK_ENHANCE				= 10,
	BAT_VARIATION_DEFENCE_REDUCE				= 10,
	BAT_VARIATION_JOOK_ENHANCE					= 15,
	
	// 	
	//水栖类基因变异的狼人状态
	
	// 	鲨鱼变异状态，主要影响玩家属性如下： 	
	// 	2  生命降低10%，攻击提高10%，闪避提高5%，水下移动速度提升10%（以上比例均为暂定值，具体由数值策划确定）	
	SHARK_VARIATION_LIFE_REDUCE					= 10,
	SHARK_VARIATION_ATTACK_ENHANCE				= 10,
	SHARK_VARIATION_JOOK_ENHANCE				=  5,
	SHARK_VARIATION_SPEED_ENHANCE				= 10,
	
	// 	海豚变异状态，主要影响玩家属性如下：// 	
	// 	2  魔法提高10%，攻击降低5%，闪避提高10%，水下移动速度提升5%。（以上比例均为暂定值，具体由数值策划确定）	
	DOLPHIN_VARIATION_MAGIC_ENHANCE				= 10,
	DOLPHIN_VARIATION_ATTACK_REDUCE				=  5,
	DOLPHIN_VARIATION_JOOK_ENHANCE				= 10,
	DOLPHIN_VARIATION_SPEED_ENHANCE				=  5,
	
	
	// 	陆生类基因变异的狼人状态
	
	// 	熊类变异状态，主要影响玩家属性如下： 	
	// 	2  攻击提高5%，防御提高10%，闪避降低10%，移动降低5%（以上比例均为暂定值，具体由数值策划确定）	
	BEAR_VARIATION_ATTACK_ENHANCE				=  5,
	BEAR_VARIATION_DEFENCE_REDUCE				= 10,
	BEAR_VARIATION_JOOK_ENHANCE					= 10,
	BEAR_VARIATION_SPEED_REDUCE					=  5,
	
	
	// 	豹类变异状态，主要影响玩家属性如下： 	
	// 	2  生命降低5%，攻击降低3%，闪避提高5%，移动速度提升15%。（以上比例均为暂定值，具体由数值策划确定）
	LEOPARD_VARIATION_LIFE_REDUCE				=  5,
	LEOPARD_VARIATION_ATTACK_REDUCE				=  3,
	LEOPARD_VARIATION_JOOK_ENHANCE				=  5,
	LEOPARD_VARIATION_SPEED_ENHANCE				= 15,
	
	
	// 	牛类变异状态，主要影响玩家属性如下： 	
	// 	2  生命提高10%，体力提高10%，闪避降低5%，移动速度降低5%。（以上比例均为暂定值，具体由数值策划确定）。
	CATTLE_VARIATION_LIFE_ENHANCE				= 10,
	CATTLE_VARIATION_ENERGY_ENHANCE				= 10,
	CATTLE_VARIATION_JOOK_REDUCEE				=  5,
	CATTLE_VARIATION_SPEED_REDUCE				=  5,	
};


enum STATUSTYPE{ 
	STATUSTYPE_LEAVETIMES	=1,	//剩余次数
	STATUSTYPE_REMAINTIME	=2, //剩余时间
	STATUSTYPE_ENDTIME		=4,	//结束时间
	STATUSTYPE_ALL          = STATUSTYPE_REMAINTIME|STATUSTYPE_LEAVETIMES|STATUSTYPE_ENDTIME,
	STATUSTYPE_MEMORY		=8, //内存中
	STATUSTYPE_SYS			=16,	//相隔一定时间使用次数	
};
								
enum ROLE_STATUS
{
//		ROLE_STATUS_NORMAL			= 0,
//		ROLE_STATUS_POISON			= 200000000+STATUS_POISON,
		ROLE_STATUS_DIE				= 300000000+STATUS_DIE,
//		ROLE_STATUS_PKVALUE			= 300000000+STATUS_PKVALUE,
		ROLE_STATUS_TEAMLEADER		= 300000000+STATUS_TEAMLEADER,
		ROLE_STATUS_WING			= 300000000+STATUS_WING,
//		ROLE_STATUS_DISAPPEARING	= 300000000+STATUS_DISAPPEARING,
//		ROLE_STATUS_PKSWITCH		= 300000000+STATUS_PKSWITCH,
//		ROLE_STATUS_UNDERWRAPS		= 300000000+STATUS_UNDERWRAPS,
//		ROLE_STATUS_FIRST_WOLF      = 300000000+STATUS_FIRST_WOLF,
//		ROLE_STATUS_SECOND_WOLF     = 300000000+STATUS_SECOND_WOLF,
};

enum STATUSSITID
{
	STATUS_SIT_GOOD=0,	// 状态好坏	enum { STATUS_OTHER, STATUS_GOOD, STATUS_BAD };	
	STATUS_SIT_LEVEL,	// 状态级别
	STATUS_SIT_ID,		// 状态的ID
	STATUSSITID_END
};

//机体或侍卫的枚举信息
enum SPIRITDATA
{
	SPIRITDATA_ID = 0,
	SPIRITDATA_NAME,
	SPIRITDATA_OWNERTYPE,	
	SPIRITDATA_OWNERID,
	SPIRITDATA_PLAYERID,
	SPIRITDATA_TYPE,
	SPIRITDATA_EXP,
	SPIRITDATA_LEVEL,
	SPIRITDATA_LIFE,		
	SPIRITDATA_POSITION,
	SPIRITDATA_COLOR,			// 记录该侍卫的涂色
	SPIRITDATA_REBORN_CNT,		// 转世次数
	SPIRITDATA_NUMBER,
	SPIRITDATA_GUARDSKILL1,		// 侍卫辅助功能1（类似核心）
	SPIRITDATA_GUARDSKILL2,		// 侍卫辅助功能2（类似核心）
	SPIRITDATA_GUARDSKILL3,		// 侍卫辅助功能3（类似核心）
	SPIRITDATA_GUARDSKILL4,		// 侍卫辅助功能4（类似核心）
	SPIRITDATA_EVENT_REC_BIN,	// 事件次数(二进制)
	SPIRITDATA_EN_STATE,
	SPIRITDATA_NATIVEPLACE = SPIRITDATA_EN_STATE,
	SPIRITDATA_WEAPON_SELECT,	// 记录多武器的使用位置
								// 投名状：新建女侍卫时，随机1-28取值，代表该女侍卫月经的日期
								// 十亿位到百位表示经期道具的到期时间，格式为：YYYYMMDD
	SPIRITDATA_EATHERUPLEV_DATE,	// 流星换经验的记录时间
	SPIRITDATA_MAINSKILL_DATA,	// 侍卫主功能的效果
	SPIRITDATA_GUARDSKILL5,		// 侍卫辅助功能5（类似核心）
	SPIRITDATA_GUARDSKILL6,		// 侍卫辅助功能6（类似核心）
	SPIRITDATA_GUARDSKILL7,		// 侍卫辅助功能7（类似核心）
	SPIRITDATA_GUARDSKILL8,		// 侍卫辅助功能8（类似核心）
	SPIRITDATA_FACTION,			// 侍卫世家
	SPIRITDATA_MODEL_LEV,		// 当前机体型级
	SPIRITDATA_METE_LEV,			// 用来记录该机体转世前的等级和经验值
	SPIRITDATA_METE_SPIRITTYPE,	// 用来记录该机体转世前机体类型
	SPIRITDATA_VALUE_WEAPON,		// 记录该侍卫的武器合成指数
	SPIRITDATA_VALUE_ARMET,		// 记录该侍卫的头盔装备合成指数		
	SPIRITDATA_VALUE_ARMOR,		// 记录该侍卫的盔甲装备合成指数			
	SPIRITDATA_VALUE_BRACELET,	// 记录该侍卫的手镯装备合成指数				
	SPIRITDATA_VALUE_NECKLACE,	// 记录该侍卫的项链装备合成指数				
	SPIRITDATA_VALUE_SHOES,		// 记录该侍卫的鞋子装备合成指数
	SPIRITDATA_ACTIVITY_DATE,	//侍卫事件时间		
	SPIRITDATA_EVENT_REC_MET,	//事件次数
	SPIRITDATA_SPECIAL_FLAG,     //绑定

	SPIRITDATA_CHK_SUM,		
	SPIRITDATA_NIMBUS,
	SPIRITDATA_NIMBUSUSAGE,	
	SPIRITDATA_HAIR,
	SPIRITDATA_DELETE_STATE,
	SPIRITDATA_ABILITY_LIMIT1,
	SPIRITDATA_ABILITY_LIMIT2,
	SPIRITDATA_UPGRADETIME,
	SPIRITDATA_UPGRADE_TIMES,
	SPIRITDATA_CONTRACT_TIME,    //解绑定时间
   	SPIRITDATA_DIALECT,          //Guard speak language
	SPIRITDATA_LOOKFACE,
	SPIRITDATA_SYNDICATE,
	SPIRITDATA_RELATIONSHIP,

	//unused
	SPIRITDATA_HOTDEF		= SPIRITDATA_GUARDSKILL1,
	SPIRITDATA_ShAKEDEF		= SPIRITDATA_GUARDSKILL2,
	SPIRITDATA_COLDDEF		= SPIRITDATA_GUARDSKILL3,
	SPIRITDATA_DECAYDEF		= SPIRITDATA_GUARDSKILL4,
	SPIRITDATA_TECHNOPOINT,		
	SPIRITDATA_TECHNOUSAGE0,		
	SPIRITDATA_TECHNOUSAGE1,		
	SPIRITDATA_TECHNOUSAGE2,		
	SPIRITDATA_TECHNOUSAGE3,		
	SPIRITDATA_TECHNOUSAGE4,		
	SPIRITDATA_RESEARCH1,		// 记录该机体第一项科技项的完成情况。0表示该科技项未开启；1～100表示该科技项的完成度
	SPIRITDATA_RESEARCH2,		
	SPIRITDATA_RESEARCH3,		
	SPIRITDATA_RESEARCH4,		
	SPIRITDATA_RESEARCH5,		
	SPIRITDATA_RESEARCH6,
	

	// 战马 复用侍卫的辅助功能
	SPIRITDATA_STEED_START	 = SPIRITDATA_VALUE_WEAPON,
	SPIRITDATA_STEED_SMOCK	 = SPIRITDATA_VALUE_ARMET,			// 战马的罩衫
	SPIRITDATA_STEED_SHIELD	 = SPIRITDATA_VALUE_ARMOR,			// 战马的护甲
	SPIRITDATA_STEED_SADDLE	 = SPIRITDATA_VALUE_BRACELET,		// 战马的马鞍 
	SPIRITDATA_STEED_PENDANT = SPIRITDATA_VALUE_NECKLACE,		// 战马的挂件
};

enum RBN_TYPE_DATA
{
	RBN_TYPE_DATA_Id,
	RBN_TYPE_DATA_Spirit_type,
	RBN_TYPE_DATA_Rbn_times,
	RBN_TYPE_DATA_Armet_min,
	RBN_TYPE_DATA_Armet_max,
	RBN_TYPE_DATA_armor_min,
	RBN_TYPE_DATA_armor_max,
	RBN_TYPE_DATA_bracelet_min,
	RBN_TYPE_DATA_bracelet_max,
	RBN_TYPE_DATA_necklace_min,
	RBN_TYPE_DATA_necklace_max,
	RBN_TYPE_DATA_shoes_min,
	RBN_TYPE_DATA_shoes_max
};

enum OWNERTYPE
{
	OWNER_NONE			= 0,
	OWNER_USER			= 1,
	OWNER_SYN			= 2,
	OWNER_NPC			= 3,
	OWNERTYPE_BLUEPRINT	= 4,	// 设计蓝图
	OWNER_ITEM			= 4,
	OWNER_SPIRIT		= 5,
	OWNER_FAMILY		= 6,
	OWNER_TEAM			= 7,
	OWNER_DUN			= 8,
	OWNERTYPE_DEPOT		= 20,  //未用
	
	OWNERTYPE_COMMON	= 40,  //仓库机体
	OWNERTYPE_SPIRIT1	= 50,  //第一个浮游炮
	OWNERTYPE_SPIRIT2	= 51,  //第二个浮游炮
	
	OWNERTYPE_SPIRIT_STANDBY	= 53,  //stand by  已出征的侍卫
	OWNERTYPE_SPIRIT_REST		= 63,  //rest 后备营的
	OWNERTYPE_SPIRIT_CAGE		= 64,  //cage  在牢笼的侍卫
	OWNERTYPE_SPIRIT_DUN	= 65,  //地下城生物，带在玩家身上
	OWNERTYPE_SPIRIT_DUN_FREE	= 66,  //出征状态，但不跟随玩家
};

enum SPIRIT_RELATIONSHIP
{
	 //add by ccw_xxx 侍卫的特殊交易属性
	_SPIRIT_SPECIAL_MONOPOLY1 =     0x1000000,   //16777216
	_SPIRIT_SPECIAL_MONOPOLY2 =     0x2000000,   //33554432
};

// 待从职业分类
enum Guard_TYPE
{
	GUARD_TYPE_BEGIN = 1,
	GUARD_TYPE_Eunuch = 1,  // 太监
	GUARD_TYPE_WU	=2,//武职外官
	GUARD_TYPE_FORTUNETELLER	= 3,	//算命先生
	GUARD_TYPE_Smith  = 4,  // 铁匠
	GUARD_TYPE_JapanVagabond=5, // 日本浪人
	GUARD_TYPE_NOBLE = 6,     //王公爵位
	GUARD_TYPE_Mister = 7,  // 先生
	GUARD_TYPE_CAPTOR = 8,  //捕快
	GUARD_TYPE_DOCTOR = 9,  //医生
	GUARD_TYPE_Callet = 13, // 青楼女子
	GUARD_TYPE_KidShow  = 17, // 杂耍
	GUARD_TYPE_XiaKe  = 18, // 侠客
	GUARD_TYPE_DRILLMASTER = 19,//教头
	GUARD_TYPE_THIEF	= 23,	//小偷
	GUARD_TYPE_KILLER = 24,    //杀手
	GUARD_TYPE_BANDIT = 25,    //强盗
	GUARD_TYPE_LADY   = 27, // 官家小姐

	GUARD_TYPE_END = 32,
};
// 0.
// 1  | 5010000 | 宫廷后宫
// 2  | 5020000 | 武职外官
// 3  | 5030000 | 算命
// 4  | 5040000 | 铁匠
// 5  | 5050020 | 东瀛浪人
// 6  | 5060000 | 王公爵位
// 7  | 5070000 | 先生
// 8  | 5080000 | 名捕
// 9  | 5090000 | 医生
// 10 | 5100000 | 隐士
// 11 | 5110000 | 乞丐
// 12 | 5120000 | 戏子
// 16 | 5160000 | 卖唱
// 17 | 5170000 | 杂耍
// 18 | 5180010 | 侠客
// 19 | 5190000 | 教头
// 20 | 5200000 | 镖师
// 21 | 5210010 | 猎人
// 22 | 5220010 | 屠夫
// 23 | 5230000 | 贼
// 24 | 5240010 | 杀手
// 25 | 5250000 | 强盗
// 27 | 627XXXX | 官家小姐
// 28 | 5280000 | 师爷
// 29 | 5290000 | 仆人
// 30 | 5300000 | 商贩
// 31 | 5310010 | 店小二
// 32 | 5320000 | 农民

enum
{
	SPIRIT_EN_STATE_LIMIT=0,		//限制状态
	SPIRIT_EN_STATE_NORMAL,		//正常状态
	SPIRIT_EN_STATE_OVERRUN,		//超荷状态
};

enum
{
	FLOATCANNON_NOATTACK,		//不攻击状态
	FLOATCANNON_ATTACK,			//攻击状态
};

enum IDENT_BY_WHAT
{ 
	IDENT_BYREEL, 
	IDENT_BYNPC, 
	IDENT_BYTRUMP, 
};

enum 
{//侍卫绑定和解绑定状态
	SPIRIT_BLOOD_BOND_STATE = 0x01,
	SPIRIT_BLOOD_BOND_WAITFOR_CLEAR_STATE = 0x02,
};

//装甲核心的定义
enum{
	SPIRIT_CORE_FOOT_BEGIN	= 0,								//脚
	SPIRIT_CORE_FOOT_SPECIAL	= SPIRIT_CORE_FOOT_BEGIN + 3,
	SPIRIT_CORE_HEAD_BEGIN	= 4,								//头部
	SPIRIT_CORE_HEAD_SPECIAL	= SPIRIT_CORE_HEAD_BEGIN + 8,
	SPIRIT_CORE_RHAND_BEGIN	= 13,								//右手
	SPIRIT_CORE_RHAND_SPECIAL	= SPIRIT_CORE_RHAND_BEGIN + 4,
	SPIRIT_CORE_LHAND_BEGIN	= 18,								//左手
	SPIRIT_CORE_LHAND_SPECIAL	= SPIRIT_CORE_LHAND_BEGIN + 4,
	SPIRIT_CORE_CHEST_BEGIN	= 23,								//胸
	SPIRIT_CORE_CHEST_SPECIAL	= SPIRIT_CORE_CHEST_BEGIN + 6,
	SPIRIT_CORE_HEART_BEGIN	= 30,								//心
	SPIRIT_CORE_HEART_SPECIAL	= SPIRIT_CORE_HEART_BEGIN + 7,
	SPIRIT_CORE_SPECIAL	= 38,									//总增幅器
};


//////////////////////////////////////////////////////////////////////
enum SPIRITVAR{
	SPIRITDATA_SHIELD_ENERGY=0,
	SPIRITDATA_DATA_END,
};

//////////////////////////////////////////////////////////////////////
enum SPIRIT_SORT
{//法宝-对各种机体伤害修正功能
	SPIRIT_SORT_UNKOWN	  = 0, // 未知
	SPIRIT_SORT_NEAR_FIGHT = 1, // 近战
	SPIRIT_SORT_FAR_FIGHT  = 2, // 远战
	SPIRIT_SORT_TRANSFORM  = 3, // 变形		
};

enum SPIRIT_SUB_TYPE
{//法宝-对各种机体伤害修正功能
	SPIRIT_SUB_TYPE_NORMAL			=  0,
	SPIRIT_SUB_TYPE_TRAIN_0			= 10,  SPIRIT_SUB_TYPE_TRAIN_1		= SPIRIT_SUB_TYPE_TRAIN_0		+ 10,
	SPIRIT_SUB_TYPE_MIDDLE_0			= 12,  SPIRIT_SUB_TYPE_MIDDLE_1		= SPIRIT_SUB_TYPE_MIDDLE_0		+ 10,
	SPIRIT_SUB_TYPE_LIFE_0			= 14,  SPIRIT_SUB_TYPE_LIFE_1		= SPIRIT_SUB_TYPE_LIFE_0			+ 10,
	SPIRIT_SUB_TYPE_MACHINE_0		= 15,  SPIRIT_SUB_TYPE_MACHINE_1		= SPIRIT_SUB_TYPE_MACHINE_0		+ 10,
	SPIRIT_SUB_TYPE_ANTI_HOT_0		= 16,  SPIRIT_SUB_TYPE_ANTI_HOT_1	= SPIRIT_SUB_TYPE_ANTI_HOT_0		+ 10,
	SPIRIT_SUB_TYPE_ANTI_ICE_0		= 17,  SPIRIT_SUB_TYPE_ANTI_ICE_1	= SPIRIT_SUB_TYPE_ANTI_ICE_0		+ 10,
	SPIRIT_SUB_TYPE_ANTI_SHAKE_0		= 18,  SPIRIT_SUB_TYPE_ANTI_SHAKE_1	= SPIRIT_SUB_TYPE_ANTI_SHAKE_0	+ 10,
	SPIRIT_SUB_TYPE_ANTI_MEDICAL_0	= 19,  SPIRIT_SUB_TYPE_ANTI_MEDICAL_1= SPIRIT_SUB_TYPE_ANTI_MEDICAL_0 + 10,
};

//这个枚举为了把玩家相关的机体统一管理
enum SPIRIT_POSITION
{
	SPIRIT_POSITION_VAN,      //属于玩家先锋营位置的机体
	SPIRIT_POSITION_REST,     //属于玩家后备营位置的机体
	SPIRIT_POSITION_LIMIT,     //属于玩家后备营位置的机体
};

enum SPIRITUPLEVELDATA{
	SPIRITLEVELDATA_ORIGIN_TYPE=1,
	SPIRITLEVELDATA_REQ1, SPIRITLEVELDATA_REQBEGIN = SPIRITLEVELDATA_REQ1,
	SPIRITLEVELDATA_REQ2,
	SPIRITLEVELDATA_REQ3,
	SPIRITLEVELDATA_REQ4,
	SPIRITLEVELDATA_REQ5,
	SPIRITLEVELDATA_REQ6,
	SPIRITLEVELDATA_ADD1, SPIRITLEVELDATA_ADDBEGIN = SPIRITLEVELDATA_ADD1,
	SPIRITLEVELDATA_ADD2,
	SPIRITLEVELDATA_ADD3,
	SPIRITLEVELDATA_ADD4,
	SPIRITLEVELDATA_ADD5,
	SPIRITLEVELDATA_ADD6,
	SPIRITLEVELDATA_POS,
	SPIRITLEVELDATA_ITEMTYPE,
	SPIRITLEVELDATA_REGISTER,
	SPIRITLEVELDATA_REQUIRE_LEVEL,
};

enum GUARD_EQUIPVALUE_DATA
{
	GUARD_EQUIPVALUE_DATA_ID,
	GUARD_EQUIPVALUE_DATA_EQUIP_TYPE,
	GUARD_EQUIPVALUE_DATA_STAR_LEV,
	GUARD_EQUIPVALUE_DATA_EQUIP_VALUE,
	GUARD_EQUIPVALUE_DATA_UPLEVTIME,
};

enum GUARD_EQUIP_VALUE
{
	GUARD_EQUIP_VALUE_WEAPON = 0,
	GUARD_EQUIP_VALUE_ARMET,
	GUARD_EQUIP_VALUE_ARMOR,
	GUARD_EQUIP_VALUE_BRACELET,
	GUARD_EQUIP_VALUE_NECKLACE,
	GUARD_EQUIP_VALUE_SHOES,
	GUARD_EQUIP_VALUE_MAX_NUM,
};

enum TRANSTYPEDATA{
	TRANSTYPEDATA_ID,
	TRANSTYPEDATA_SORT,
	TRANSTYPEDATA_NAME,
	TRANSTYPEDATA_DATA0,
	TRANSTYPEDATA_DATA1,
	TRANSTYPEDATA_DATA2,
	TRANSTYPEDATA_DATA3,
	TRANSTYPEDATA_DATA4,
	TRANSTYPEDATA_DATA5,
	TRANSTYPEDATA_DATA6,
	TRANSTYPEDATA_DATA7,
	TRANSTYPEDATA_DATA8,
	TRANSTYPEDATA_DATA9,
	TRANSTYPEDATA_DATA10,
	TRANSTYPEDATA_DATA11,
	TRANSTYPEDATA_DATA12,
	TRANSTYPEDATA_DATA13,
	TRANSTYPEDATA_DATA14,
	TRANSTYPEDATA_DATA15,
	TRANSTYPEDATA_DATA16,
	TRANSTYPEDATA_DATA17,
	TRANSTYPEDATA_DATA18,
	TRANSTYPEDATA_DATA19,
	TRANSTYPEDATA_SIZE,
	TRANSTYPEDATA_ATK_SPEED,
	TRANSTYPEDATA_ATK_DELAY,
};	

//////////////////////////////////////////////////////////////////////
// req的定义：
enum { SPIRITNEED_SWORD=1, SPIRITNEED_GUN, SPIRITNEED_LASER, SPIRITNEED_EN, SPIRITNEED_AMMO, 
		SPIRITNEED_ARMOR, SPIRITNEED_FIST, SPIRITNEED_SHIELD, SPIRITNEED_MISSILE, SPIRITNEED_MORPH_ATTACK, 
		SPIRITNEED_MORPH_ENERGY, SPIRITNEED_CANNON, SPIRITNEED_MINE, SPIRITNEED_GEN, SPIRITNEED_EMPLACEMENT, 
		SPIRITNEED_EMPLACEMENT_HP, SPIRITNEED_ELECTRO, SPIRITNEED_PARTICLE, SPIRITNEED_FIELD, SPIRITNEED_SPIRIT_ATTACK, 
		SPIRITNEED_SPIRIT_HP, SPIRITNEED_REPAIR, SPIRITNEED_TRUNK, SPIRITNEED_GRENADE, SPIRITNEED_ASSISTANT, 
		SPIRITNEED_MAINTENANCE, SPIRITNEED_MORPH_POWER, SPIRITNEED_PHOTON_SHIELD, 
};
/*
	实体剑、枪、激光炮、EN、弹药
	装甲、拳(斧)、盾、导弹、变形攻击力(卫星战力)
	变形能量(卫星能量)、炮、地雷、附件、炮台
	炮台HP、电磁、粒子剑、场、机械人战力
	机械人HP、修理、仓库、手雷、援助、
	维护、变形力、装甲
*/


//////////////////////////////////////////////////////////////////////
/*
	装备的职业需求共6位整数：

	种  系  型  等  类型
	族	        级  
	 |   |   |   |   |
	 X   X   X   X   XX

  种族(十万位)		0：不限制，1：人类，2：自由
  系(万位)			0：不限制，1：近战，2：远战，3：能量，4：辅助
  型(千位)			0：不限制，1：A型，2：B型
  等级(百位)		0：不限制，1：初级可用，2：一级进化以下可用，3二级进化以下可用，4：只有三级进化可用
  类型(十位和个位)	0：不限制，其它：指定类型可使用，不分种族。
*/
// 类型：
enum { SPIRITTYPE_FIGHT=1, SPIRITTYPE_FIGHT1, SPIRITTYPE_FIGHT2A, SPIRITTYPE_FIGHT2B, SPIRITTYPE_FIGHT3A, SPIRITTYPE_FIGHT3B, 
		SPIRITTYPE_GUN, SPIRITTYPE_GUN1, SPIRITTYPE_GUN2A, SPIRITTYPE_GUN2B, SPIRITTYPE_GUN3A, SPIRITTYPE_GUN3B, 
		SPIRITTYPE_ENERGY, SPIRITTYPE_ENERGY1, SPIRITTYPE_ENERGY2A, SPIRITTYPE_ENERGY2B, SPIRITTYPE_ENERGY3A, SPIRITTYPE_ENERGY3B, 
		SPIRITTYPE_REPAIR, SPIRITTYPE_REPAIR1, SPIRITTYPE_REPAIR2, SPIRITTYPE_REPAIR3, 
};

enum 
{	//百万位、十万位、万位、千位、百位
	//DSTYPE_GUARD,1xxx00
	//百万位、十万位、万位分别表示侍卫类型id的万位、十万位、百万位，同时千位，百位为0
	//DSTYPE_USER,300000,300001
	DSTYPE_USER_RED_FLOWER	= 00000,
	DSTYPE_USER_WHITE_FLOWER= 00001,
	DSTYPE_USER_OTHER		= 00000,	//such as:donate
	//十位、个位
	//DSTYPE_GUARD,1xxx00XX
	DSTYPE_Guard_Star		= 00,
	DSTYPE_value_armet		= 01,
	DSTYPE_value_armor		= 02,
	DSTYPE_value_bracelet	= 03,
	DSTYPE_value_necklace	= 04,
	DSTYPE_value_shoes		= 05,

	//DSTYPE_USER,300000XX,300001XX
	DSTYPE_DAY_FLOWER		= 00,		//每日鲜花数量排行榜
	DSTYPE_ALL_FLOWER		= 01,		//总数排行榜
	DSTYPE_ALL_DONATE		= 03,	//爵位捐献排行榜

	DSTYPE_ALL_SUPERIOR     = 00,   //高手排行
	
	//用户相关排行榜3xxxxxxx
	DSTYPE_DAY_RED_FLOWER		= 00,		//每日红玫瑰数量排行榜
	DSTYPE_ALL_RED_FLOWER		= 01,		//红玫瑰总数排行榜
	DSTYPE_DAY_WHITE_FLOWER		= 100,		//每日白玫瑰数量排行榜
	DSTYPE_ALL_WHITE_FLOWER		= 101,		//白玫瑰总数排行榜
	DSTYPE_DONATE				= 03,		//爵位捐献排行榜
    
	DSTYPE_SUPERIOR             = 03,       //高手排行

};



enum ITEM_POSITION{
		ITEMPOS_EQUIPBEGIN	= 1,

		ITEMPOS_SPIRITBEGIN = ITEMPOS_EQUIPBEGIN,
		ITEMPOS_THRUSTER	= ITEMPOS_EQUIPBEGIN,	// 披风
		ITEMPOS_R_HAND		= 2,					// 武器
		ITEMPOS_L_HAND		= 3,					// 副手
		ITEMPOS_SHIELD		= ITEMPOS_L_HAND,		// 盾牌（双手武器没有盾牌，02XXXXX）				
		ITEMPOS_SPIRIT_SHOES = 4,					// (鞋子)
		ITEMPOS_SPIRIT_COAT	= 5,					// (上衣)
		ITEMPOS_SPIRIT_HELMET= 6,			    	// 头盔（新增，0711XXX,0721XXX）
		ITEMPOS_SPIRIT_RING	= 7,					// 裤子（新增，0712XXX,0722XXX）
		ITEMPOS_SPIRIT_NECKLACE=8,					// 项链（新增，0713XXX,0723XXX）
		ITEMPOS_SPIRIT_JACKET= 9,					// 外套（新增，188XXXX）
		ITEMPOS_SPIRIT_MOUNT = 10,					// 坐骑（新增，36XXXXX）
		ITEMPOS_ROBOT_WAISTBAND,                     // 腰带 (新增)
		ITEMPOS_ROBOT_ARMGUARD,                      // 护手
		ITEMPOS_ROBOT_R_FINGER_RING,                 // 右戒指
		ITEMPOS_ROBOT_L_FINGER_RING,	             // 左戒指（新增）
		ITEMPOS_PALA_SPEAR = 15,								 // 长枪（新增）
		ITEMPOS_TRUMP_EQUIP1,					    // 法宝，9001XXXX  		
		ITEMPOS_TRUMP_EQUIP2,						// 法宝，9001XXXX  
		ITEMPOS_TRUMP_EQUIP3,						// 法宝，9001XXXX  
		ITEMPOS_TRUMP_EQUIP4,							// 法宝，9001XXXX  
		ITEMPOS_TRUMP_EQUIP5,						// 法宝，9001XXXX  

//------------------------------------
		ITEMPOS_SHOWEND		,
//------------------------------------
		ITEMPOS_EQUIPEND = ITEMPOS_SHOWEND	,

		ITEMPOS_BULLET_PROOF_VEST = 21,               // 防弹衣(末日危机新增装备位)// TODO::MILO 11/17/2015

//------------------------------------
// 仅用于程序内部使用方便，不存数据库
//------------------------------------
		ITEMPOS_ENGINEROOMBEGIN  = 20,
//------------------------------------
		ITEMPOS_ENGINE		=ITEMPOS_ENGINEROOMBEGIN,		// 发动机 901
		ITEMPOS_AMPLIFIER	,						// 增幅器 902
		ITEMPOS_PACKITEM	,						// 货仓物品 903
		ITEMPOS_ENPACK		,						// EN仓 904
		ITEMPOS_HEADLOOP	,						// 头部回路 905
		ITEMPOS_ENERGYGENERATOR,					// 能量场发生器 906
		ITEMPOS_CHIP		,						// 其它控制芯片 907
		ITEMPOS_SPIRITHPGENERATOR,					// 机体HP增加模块 908
		ITEMPOS_BUILDINMODULE,						// 机体内置模块 909
		ITEMPOS_ENPACK_RESTORE_ACCELERATE,					  // En舱回复加速器 910		
		ITEMPOS_ENERGYGENERATOR_ACCELERATE,					  // 能量场发生器回复加速器 911			
		ITEMPOS_THRUSTER_RESTORE_ACCELERATE,				  // 推进器回复加速器912			
		ITEMPOS_TRUMP,										  // 法宝90000000~90099999
//------------------------------------
		ITEMPOS_ENGINEROOMEND,

//------------------------------------
		ITEMPOS_EXPBALL		= 40,					//经验值球
//------------------------------------
//------------------------------------
//------------------------------------
////////////////////////////////////////////////////////////////////////////////////////////////////////////
//仓库
		ITEMPOS_ENGINEROOM  = 51,					// 机仓
		ITEMPOS_BACKPACK	= 52,					// 货仓
		ITEMPOS_QUANTAPACK	= 53,					// 量子脉动舱
		ITEMPOS_TRUCKPACK	= 54,					// 货车物品


		ITEMPOS_BULLETPACK	= 55,					// 子弹仓---用于标示目前使用的子弹
		
		ITEMPOS_WEAPON_R_01	= 60,					// 多武器位第一套
		ITEMPOS_SHIELD_01	= 61,					// 多武器位第一套
		ITEMPOS_WEAPON_R_02	= 62,					// 多武器位第二套
		ITEMPOS_SHIELD_02	= 63,					// 多武器位第二套
		ITEMPOS_WEAPON_R_03	= 64,
		ITEMPOS_SHIELD_03	= 65,
		ITEMPOS_WEAPON_R_04	= 66,
		ITEMPOS_SHIELD_04	= 67,
		ITEMPOS_WEAPON_R_05	= 68,
		ITEMPOS_SHIELD_05	= 69,
		ITEMPOS_WEAPON_R_06	= 70,
		ITEMPOS_SHIELD_06	= 71,
		ITEMPOS_SPIRITEND,


		ITEMPOS_BOOTH		= 80,					// 摆摊的物品
		// 机师装备
		ITEMPOS_USERBEGIN		= 81,
		//------------------------------------
		ITEMPOS_USERHEAD		= 81,			// 01 头位置，  机师装备，帽子
		ITEMPOS_USERBODY		= 82,			// 02 身体位置，机师装备，衣服
		ITEMPOS_USERLEFTHAND	= 83,			// 03 左手
		ITEMPOS_USERRIGHTHAND	= 84,			// 04 右手	// 07 双手
		ITEMPOS_USERSHOES		= 85,			// 05 鞋子
		ITEMPOS_USERTREASURE	= 86,			// 06 饰品
		ITEMPOS_TRUCK_BEGIN		= 87,
		ITEMPOS_TRUCK_POS1 = ITEMPOS_TRUCK_BEGIN,
		ITEMPOS_TRUCK_POS2,
		ITEMPOS_TRUCK_POS3,
		ITEMPOS_TRUCK_POS4,
		ITEMPOS_TRUCK_END = ITEMPOS_TRUCK_POS4,
		//------------------------------------
		ITEMPOS_USEREND	,
		//------------------------------------
		ITEMPOS_MOUNT_SKIRT    =  ITEMPOS_EQUIPBEGIN ,       // 马匹罩衫
		ITEMPOS_MOUNT_ARMOR    =  ITEMPOS_R_HAND,			 // 马匹护甲
		ITEMPOS_MOUNT_SADDLE   =  ITEMPOS_SHIELD,			 // 马鞍
		ITEMPOS_MOUNT_ADORNING =  ITEMPOS_SPIRIT_SHOES,		 // 马匹饰物

		ITEMPOS_AUTOPACK	= ITEMPOS_BACKPACK,					// 存放在自动反击仓中的物品
		ITEMPOS_PROPPACK	= ITEMPOS_BACKPACK,					// 存放在道具仓物品
		ITEMPOS_AMMOPACK	= ITEMPOS_BACKPACK,					// 存放在弹药仓中的物品
		ITEMPOS_USER_LIMIT	= 199,
////////////////////////////////////////////////////////////////////////////////////////////////////////////
		ITEMPOS_NONE			= 255,				// 非法位置
//////////////////////////////////////////////////////////////////////////


////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 已经不用的
		ITEMPOS_INVALID		=ITEMPOS_CHIP,		//临时放这里
		ITEMPOS_HAND		=ITEMPOS_R_HAND,						// 手上的武器包括单手和双手武器
		ITEMPOS_BODY		=ITEMPOS_ENGINE,						// 主体盔甲
		ITEMPOS_AMMOITEM	=ITEMPOS_ENPACK,						// ITEMPOS_ENITEM	, 远战是弹药，近战是En仓
		ITEMPOS_HANDVAR		=ITEMPOS_INVALID,						// 变形后的武器
		ITEMPOS_SUBFLY		=ITEMPOS_INVALID,			// 子机
		ITEMPOS_GROW		=ITEMPOS_INVALID,						// 成长位置
		ITEMPOS_TEMPPACK	=ITEMPOS_INVALID,						// 临时仓里的物品的位置， 切屏就会删除在这个位置里的所有物品
		ITEMPOS_ARMORVAR	=ITEMPOS_INVALID,						// 变形隔板
		ITEMPOS_ENERGY		=ITEMPOS_INVALID,						// 反应炉(变形后使用)
		ITEMPOS_TEMPITEM	=ITEMPOS_INVALID,						// 临时仓的位置（背包） = 14
//------------------------------------
//		ITEMPOS_ENGINEROOMITEM,						// 机仓物品
		ITEMPOS_SUBITEM		,						// 付仓物品
		ITEMPOS_AUTOITEM	,						// 自动反击仓物品
		ITEMPOS_PROPITEM	,						// 道具仓物品
		ITEMPOS_ASSISTANT	,						// 辅助位置(包括修理器和布雷器)		
		
};

const int ITEMPOSITION_WEAPONHAND = ITEMPOS_R_HAND; // 手上的武器包括单手和双手武器
const int ITEMPOSITION_SHIELD = ITEMPOS_SHOWEND; // 盾牌
const int ITEMPOSITION_THRUSTER = ITEMPOS_THRUSTER; // 推进器(原批风位置)
const int ITEMPOSITION_BODY = ITEMPOS_BODY; // 主体盔甲
const int ITEMPOSITION_HEAD = ITEMPOS_HEADLOOP; // 头部
		

enum ITEM_FRAY_MODE		
{ 
	ITEM_FRAY_NORMAL = 0,		// 打怪损耗方式；道具损耗方式的默认值；
	ITEM_FRAY_TIME,				// 装备按固定时间间隔来损耗
	ITEM_FRAY_USE,				// 道具按使用次数来损耗
};

enum ITEM_REPAIR_MODE	
{
	ITEM_REPAIR_NORMAL	= 0,	// 普通的装备允许修复方式，允许通过商店NPC和action方式修理；道具允许修复方式的默认值；
	ITEM_REPAIR_NO_NPC	= 1,	// 不允许通过商店NPC的功能进行修理
	ITEM_REPAIR_NO_ACTION = 2,	// 不允许通过action方式进行修理；
};

enum 
{	
	ITEMINFOEX_NONE=0, 
	ITEMINFOEX_BOOTH,					// for booth
	ITEMINFOEX_EQUIPMENT,				// equipment update
	ITEMINFOEX_BOOTH_EMONEY,			// for booth with emoney
};

enum 
{ 
	STC_NORMAL_MONSTER_KILL = 1,
	STC_KO_MONSTER_KILL,
	STC_MAP_MONSTER_KILL,
	STC_PK_KILL,
};

// 虚拟货币操作/变化类型
enum 
{	
	EMNY_OPT_ACTION_CHG		= 1,	// action 改变
	EMNY_OPT_TRADE			= 2,	// 公平交易系统
	EMNY_OPT_BOOTH			= 3,	// 摆摊
	EMNY_OPT_AUCTION		= 4,	// 拍卖
	EMNY_OPT_TRADE_RCV_MONEY_FAILED		= 5,	// 收钱失败
	EMNY_OPT_CASHIN_CARD	= 6,	// 从card表的记录兑换成虚拟货币
	EMNY_OPT_CASHOUT_CARD	= 7,	// 从虚拟货币兑换成card表的记录
	EMNY_OPT_CASHIN_CARD2	= 8,	// 从card2表的记录兑换成虚拟货币
	EMNY_OPT_CASHOUT_CARD2	= 9,	// 从虚拟货币兑换成card2表的记录
	EMNY_OPT_BUY_ITEM		= 10,	// 从vip商店购买物品
	EMNY_OPT_PK_BONUS		= 11,	// pk惩罚出狱
	EMNY_OPT_ARTIFACT_MAKEHOLE = 12,// 宝物开洞
	EMNY_OPT_REDEEM_EQUIP = 13,		// 赎回装备
	EMNY_OPT_FETCH_BONUS = 14,		// 领取赎金
};

enum 
{ 
	UNLEARN_HIDE, 
	UNLEARN_RESET, 
	UNLEARN_DROP 
};


enum
{
	 _ACTION_DANCE1		=1,
	 _ACTION_DANCE2		=2,
	 _ACTION_DANCE3		=3,
	 _ACTION_DANCE4		=4,
	 _ACTION_DANCE5		=5,
	 _ACTION_DANCE6		=6,
	 _ACTION_DANCE7		=7,
	 _ACTION_DANCE8		=8,
	
	 _ACTION_STANDBY		=100,
	 _ACTION_LAUGH			=150,
	 _ACTION_GUFFAW		=151,
	 _ACTION_FURY          =160,
	 _ACTION_SAD	        =170,
	 _ACTION_EXCITEMENT	=180,
	 _ACTION_SAYHELLO		=190,
	 _ACTION_SALUTE		=200,
	 _ACTION_GENUFLECT     =210,
	 _ACTION_KNEEL			=220,
	 _ACTION_COOL			=230,
	 _ACTION_SWIM			=240,
	 _ACTION_SITDOWN       =250,
	 _ACTION_ZAZEN			=260,
	 _ACTION_FAINT	        =270,
	 _ACTION_LIE	        =271,
};

enum RANDOMMAGICCONFIGDATA
{
	RANDOMMAGICCONFIGDATA_LEV = 0,
	RANDOMMAGICCONFIGDATA_TYPE,
	RANDOMMAGICCONFIGDATA_DATA1,
	RANDOMMAGICCONFIGDATA_DATA2,
	RANDOMMAGICCONFIGDATA_DATA3,
	RANDOMMAGICCONFIGDATA_DATA4,
	RANDOMMAGICCONFIGDATA_DATA5,
	RANDOMMAGICCONFIGDATA_DATA6,
	RANDOMMAGICCONFIGDATA_DATA7,
	RANDOMMAGICCONFIGDATA_DATA8,
	RANDOMMAGICCONFIGDATA_DATA9,
};

enum RANDOMMAGICTYPEDATA
{
	RANDOMMAGICTYPEDATA_ID = 0,
	RANDOMMAGICTYPEDATA_MAGIC,
	RANDOMMAGICTYPEDATA_NAME,
	RANDOMMAGICTYPEDATA_POOL,			//属于那个池
	RANDOMMAGICTYPEDATA_FORBID_LOOK,	// 禁选英雄
};

enum MAGICTYPEDATA
{
	MAGICTYPEDATA_ID = 0,
	MAGICTYPEDATA_SORT,
	MAGICTYPEDATA_NAME,

	MAGICTYPEDATA_CRIME,				// 良性技能或者是不良技能的标志
	MAGICTYPEDATA_GROUND,
	MAGICTYPEDATA_MULTIMODE,
	MAGICTYPEDATA_TARGET,
	MAGICTYPEDATA_IMMUNITY_MODE,
	MAGICTYPEDATA_PASSIVE,
	MAGICTYPEDATA_LOOP,

	MAGICTYPEDATA_INTONE,				// 吟唱时间
	MAGICTYPEDATA_DELAY,				// 相同主技能ID招式之间的时间间隔（毫秒单位）milli-secs
	MAGICTYPEDATA_SECS,					// step_secs
	MAGICTYPEDATA_TIMES,				// active_times	, =0 : once status

	MAGICTYPEDATA_POWER,
	MAGICTYPEDATA_DATA,
	MAGICTYPEDATA_PERCENT,

	MAGICTYPEDATA_DISTANCE,
	MAGICTYPEDATA_RANGE,
	MAGICTYPEDATA_WIDTH,				// width of magic. 0-180 for degree of fan (sort 4), 0 for default.

	MAGICTYPEDATA_NEED_WEAPON,
	MAGICTYPEDATA_NEED_AMMO,
	MAGICTYPEDATA_EXPEND_LIFE,
	MAGICTYPEDATA_EXPEND_MANA,
	MAGICTYPEDATA_EXPEND_FUEL,
	MAGICTYPEDATA_XP_MODE,	//MAGICTYPEDATA_EXPAND_XP,			// 0=非XP技能  1=XP魔法类技能  2=XP状态类技能（暂时不做）

	MAGICTYPEDATA_EXPEND_AMMO,

	MAGICTYPEDATA_STATUS,
	MAGICTYPEDATA_STATUS_CHANCE,
	MAGICTYPEDATA_STATUS_TIME,
	MAGICTYPEDATA_STATUS_POWER,
	MAGICTYPEDATA_STATUS_DATA,
	MAGICTYPEDATA_ATTACK,
	MAGICTYPEDATA_ATKFIGHTER,			// 对近战攻击		
	MAGICTYPEDATA_ATKGUNNER,			// 对远战攻击
	MAGICTYPEDATA_ATKENERGY,			// 对能量攻击
	MAGICTYPEDATA_ATKHOT,				// 高温攻击
	MAGICTYPEDATA_PART_PERCENT1,		
	MAGICTYPEDATA_PART_PERCENT2,		
	MAGICTYPEDATA_HEAD_PERCENT,			
	MAGICTYPEDATA_STAND_TIME,			
	MAGICTYPEDATA_REQ_CAMP,				
	MAGICTYPEDATA_REQ_LEV,				
	MAGICTYPEDATA_TRANSLOOK,			//变形技能的外形look
	MAGICTYPEDATA_ANIMOSITY,
	MAGICTYPEDATA_NEED_EXP,
	MAGICTYPEDATA_UPLEVETIME,
	MAGICTYPEDATA_ACTION,				// 当action值非0时，表示为具体的action值，指向action中的具体ID
	MAGICTYPEDATA_STATUSA,				// 使用技能时，判断目标对象是否有制定类型状态A
	MAGICTYPEDATA_STATUSA_DATA1,		
	MAGICTYPEDATA_STATUSA_DATA2,
	MAGICTYPEDATA_STATUSB,				// 使用技能时，判断目标对象是否有制定类型状态B
	MAGICTYPEDATA_STATUSB_DATA1,
	MAGICTYPEDATA_STATUSB_DATA2,
	MAGICTYPEDATA_MAX_TARGET_NUM,		// 记录群体技能使用时，允许最多对多少个目标对象(0表示无数量上限，单体技能该字段不起作用)
	MAGICTYPEDATA_SELF_STATUS,			// 技能使用后，对技能使用者自身所附加的状态
	MAGICTYPEDATA_SELF_STATUS_CHANCE,
	MAGICTYPEDATA_SELF_STATUS_TIME,
	MAGICTYPEDATA_SELF_STATUS_POWER,
	MAGICTYPEDATA_SELF_STATUS_DATA,
	MAGICTYPEDATA_LHANDEQUIP,			// 副手装备要求
	MAGICTYPEDATA_CONDITION,			// 环境要求，二进制标识，0表示无需求，1表示非骑乘状态，10表示骑乘状态
	MAGICTYPEDATA_TARGET_DISTINCT,
	MAGICTYPEDATA_SELF_DISTINCT,
	MAGICTYPEDATA_CONSUME_ITEM_ID,      //增加技能消耗的物品ID
	MAGICTYPEDATA_FIRE_TYPE,			//引火属性 TQD16910【末日危机】关于燃烧爆炸的设计总案
//	MAGICTYPEDATA_REQ_TEAM_ROLE,		// 队伍角色需求
	MAGICTYPEDATA_REQ_ROLE_TYPE
};

enum MAGICTYPEOPDATA{
	MAGICTYPEOPDATA_ID = 0,
	MAGICTYPEOPDATA_REBIRTHTIME = 1,
	MAGICTYPEOPDATA_PROFAGO,
	MAGICTYPEOPDATA_PROFNOW,
	MAGICTYPEOPDATA_OP,
	MAGICTYPEOPDATA_SKILL1,
	MAGICTYPEOPDATA_SKILL2,
	MAGICTYPEOPDATA_SKILL3,
	MAGICTYPEOPDATA_SKILL4,
	MAGICTYPEOPDATA_SKILL5,
	MAGICTYPEOPDATA_SKILL6,
	MAGICTYPEOPDATA_SKILL7,
	MAGICTYPEOPDATA_SKILL8,
	MAGICTYPEOPDATA_SKILL9,
	MAGICTYPEOPDATA_SKILL10,
	MAGICTYPEOPDATA_SKILL11,
	MAGICTYPEOPDATA_SKILL12,
	MAGICTYPEOPDATA_SKILL13,
	MAGICTYPEOPDATA_SKILL14,
	MAGICTYPEOPDATA_SKILL15,
	MAGICTYPEOPDATA_SKILL16,
	MAGICTYPEOPDATA_SKILL17,
	MAGICTYPEOPDATA_SKILL18,
	MAGICTYPEOPDATA_SKILL19,
	MAGICTYPEOPDATA_SKILL20,
	MAGICTYPEOPDATA_SKILL21,
	MAGICTYPEOPDATA_SKILL22,
	MAGICTYPEOPDATA_SKILL23,
	MAGICTYPEOPDATA_SKILL24,
	MAGICTYPEOPDATA_SKILL25,
	MAGICTYPEOPDATA_SKILL26,
	MAGICTYPEOPDATA_SKILL27,
	MAGICTYPEOPDATA_SKILL28,
	MAGICTYPEOPDATA_SKILL29,
	MAGICTYPEOPDATA_SKILL30,
	MAGICTYPEOPDATA_SKILL31,
	MAGICTYPEOPDATA_SKILL32,
	MAGICTYPEOPDATA_SKILL33,
	MAGICTYPEOPDATA_SKILL34,
	MAGICTYPEOPDATA_SKILL35,
	MAGICTYPEOPDATA_SKILL36,
	MAGICTYPEOPDATA_SKILL37,
	MAGICTYPEOPDATA_SKILL38,
	MAGICTYPEOPDATA_SKILL39,
	MAGICTYPEOPDATA_SKILL40,
	MAGICTYPEOPDATA_SKILL41,
	MAGICTYPEOPDATA_SKILL42,
	MAGICTYPEOPDATA_SKILL43,
	MAGICTYPEOPDATA_SKILL44,
	MAGICTYPEOPDATA_SKILL45,
	MAGICTYPEOPDATA_SKILL46,
	MAGICTYPEOPDATA_SKILL47,
	MAGICTYPEOPDATA_SKILL48,
	MAGICTYPEOPDATA_SKILL49,
	MAGICTYPEOPDATA_SKILL50,
	MAGICTYPEOPDATA_SKILL51,
	MAGICTYPEOPDATA_SKILL52,
	MAGICTYPEOPDATA_SKILL53,
	MAGICTYPEOPDATA_SKILL54,
	MAGICTYPEOPDATA_SKILL55,
	MAGICTYPEOPDATA_SKILL56,
	MAGICTYPEOPDATA_SKILL57,
	MAGICTYPEOPDATA_SKILL58,
	MAGICTYPEOPDATA_SKILL59,
	MAGICTYPEOPDATA_SKILL60,
};

enum MAGICDATA
{
	MAGICDATA_ID = 0,			// use for insert
	MAGICDATA_OWNERID,			//拥有该技能的玩家id，对应于user里的id
	MAGICDATA_TYPE,				//技能的类型type，对应magictype表里的type
	MAGICDATA_LEVEL,			//技能的等级
	MAGICDATA_EXP,				//技能暂时没有经验值，预留
	MAGICDATA_UNLEARN,			//
	MAGICDATA_OLD_LEVEL,		//
	MAGICDATA_OWNERTYPE,
};

//怪物相关的枚举定义,注意这个枚举类型定义可能根据不同的系统有
//不同的含义,若需要改变含义,请主动更新注释文本
enum MONSTERTYPEDATA
{
	MONSTERTYPEDATA_ID	= 0,
	MONSTERTYPEDATA_NAME,
	MONSTERTYPEDATA_SORT,
	MONSTERTYPEDATA_LOOKFACE,
	MONSTERTYPEDATA_LIFE,
	MONSTERTYPEDATA_MANA,
	MONSTERTYPEDATA_DEXTERITY,

	MONSTERTYPEDATA_DODGE,
	MONSTERTYPEDATA_HELMET_TYPE,  MONSTERTYPEDATA_EQUIP_BEGIN = MONSTERTYPEDATA_HELMET_TYPE,
	MONSTERTYPEDATA_ARMOR_TYPE,
	MONSTERTYPEDATA_WEAPONR_TYPE,
	MONSTERTYPEDATA_WEAPONL_TYPE,

	MONSTERTYPEDATA_ATKRANGE,
	MONSTERTYPEDATA_VIEWRANGE,
	MONSTERTYPEDATA_VIEWANGLE,
	MONSTERTYPEDATA_ESCAPELIFE,
	MONSTERTYPEDATA_ATKSPEED,			// 毫秒
	MONSTERTYPEDATA_MOVESPEED,			// 毫秒

	MONSTERTYPEDATA_LEVEL,
	MONSTERTYPEDATA_ATKUSER,

    MONSTERTYPEDATA_DROPMONEY_MIN,     //掉金钱的下限值
    MONSTERTYPEDATA_DROPMONEY_MAX,     //掉金钱的上限值
	MONSTERTYPEDATA_IS_SHARE_MONEY,    //掉的金钱是否分享
	MONSTERTYPEDATA_IS_MAP_AWARDMONEY, //金钱是否全图的人都能获得
    MONSTERTYPEDATA_EXTRA_DROPMONEY,   //额外金钱

	MONSTERTYPEDATA_SIZEADD,			// 1: 增加一个CELL的攻击距离
	MONSTERTYPEDATA_ACTION,				// action for kill award
	MONSTERTYPEDATA_RUNSPEED,			// 毫秒

	MONSTERTYPEDATA_HOT_POWER,		   // 灼烧强度（不与cold_power同时存在）
	MONSTERTYPEDATA_COLD_POWER,		   // 冷冻强度（不与hot_power同时存在）
	MONSTERTYPEDATA_SHAKE_POWER,	   // 震荡强度
	MONSTERTYPEDATA_DROP_RING,			// 
	MONSTERTYPEDATA_DROP_WEAPON,		// 
	MONSTERTYPEDATA_DROP_SHIELD,		// 
	MONSTERTYPEDATA_DROP_SHOES,			// 

	MONSTERTYPEDATA_DROP_MONEY_PERCENT,	   //掉钱的几率
	MONSTERTYPEDATA_DROP_ITEM_CHANCE,	   //掉物品的几率

	MONSTERTYPEDATA_MAGIC_TYPE,	
	MONSTERTYPEDATA_MAGIC_DEF,
	MONSTERTYPEDATA_MAGIC_HITRATE,

	MONSTERTYPEDATA_AITYPE,					// for client
	MONSTERTYPEDATA_EXPLODE_ITEM_CHANCE1,	//小爆的几率
	MONSTERTYPEDATA_EXPLODE_ITEM_CHANCE2,	//中爆的几率
	MONSTERTYPEDATA_EXPLODE_ITEM_CHANCE3,	//大爆的几率
	MONSTERTYPEDATA_DROP_ITEM_RULE,			//掉物品的规则组ID

	MONSTERTYPEDATA_ATKMAX,
	MONSTERTYPEDATA_ATKMIN,
	MONSTERTYPEDATA_ATKHOT,
	MONSTERTYPEDATA_ATKSHAKE,
	MONSTERTYPEDATA_ATKCOLD,
	MONSTERTYPEDATA_ATKLIGHT,
	MONSTERTYPEDATA_DEFADJ,
	MONSTERTYPEDATA_DEFSUB,
	MONSTERTYPEDATA_DEFHOT,			
	MONSTERTYPEDATA_DEFSHAKE,
	MONSTERTYPEDATA_DEFCOLD,
	MONSTERTYPEDATA_DEFLIGHT,
	MONSTERTYPEDATA_WEAPON_AMOUNT,
	MONSTERTYPEDATA_ARMOR_AMOUNT,
	MONSTERTYPEDATA_THRUSTER_AMOUNT,
	MONSTERTYPEDATA_STEALITEM,
	MONSTERTYPEDATA_AWARD_EXP,				// 奖励战斗经验
	MONSTERTYPEDATA_IS_SHARE,               // 经验是否分享
	MONSTERTYPEDATA_IS_MAP_AWARD_EXP,       // 是否全图获得经验
	MONSTERTYPEDATA_DROP_STONE_PERCENT,		// 获得原石的几率
	MONSTERTYPEDATA_DROPSTONE_MIN,			// 或得最小原石数
	MONSTERTYPEDATA_DROPSTONE_MAX,			// 获得最大原石数

    MONSTERTYPEDATA_MAGIC_1,
	MONSTERTYPEDATA_MAGIC_2,
	MONSTERTYPEDATA_MAGIC_3,
	MONSTERTYPEDATA_MAGIC_ASSISTANT_1,			//辅助魔法1
	MONSTERTYPEDATA_MAGIC_ASSISTANT_2,			//辅助魔法2
	MONSTERTYPEDATA_MAGIC_DESTROY,				//损伤或主动自爆或变身触发魔法
	MONSTERTYPEDATA_MAGIC_PASSIVE,				//被动触发
	MONSTERTYPEDATA_STATUS_IMMUNITY,			//状态防御类型
	MONSTERTYPEDATA_STATUS_IMMUNITY_LV,			//状态防御等级
	MONSTERTYPEDATA_SOMATOTYPE,					//
	MONSTERTYPEDATA_CAMP,						//怪物的阵营
	MONSTERTYPEDATA_SPIRIT_TYPE,					//可捕捉标志=0不能捕捉 !=0表示可捕捉，并且该值为SPIRIT类型

	MONSTERTYPEDATA_DROP_EQUIP_COE,				//装备掉落几率修正参数
	MONSTERTYPEDATA_DROP_AMMO_COE,				//弹药掉落几率修正参数
	MONSTERTYPEDATA_DROP_PART_COE,				//标准配件掉落几率修正参数
	MONSTERTYPEDATA_DROP_AMPLIFIER_COE,			//增幅器掉落几率修正参数
	MONSTERTYPEDATA_DROP_GUARD_COE,				//侍卫物品掉落几率修正参数
	MONSTERTYPEDATA_DROP_EXPENDABLE_COE,		//消耗品掉落几率修正参数
	MONSTERTYPEDATA_DROP_INSIDEITEM_COE,		//内部装置掉落几率修正参数
	MONSTERTYPEDATA_DROP_EXPLODE_COE,			//爆物品的几率修正参数
	MONSTERTYPEDATA_DROP_SPECIAL_COE,			//特殊物品掉落几率修正参数
	MONSTERTYPEDATA_SPECIAL_TYPE,				//填写特殊物品的类型
	MONSTERTYPEDATA_DROP_DELTALEV_COE,			//是否受绿名掉落几率修正影响的参数
	MONSTERTYPEDATA_ATTRIBUTETYPE,				//对应monster_attribute_type表
	MONSTERTYPEDATA_EXTRA_BATTLELEV,			//这类怪物的额外战斗力等级
	MONSTERTYPEDATA_EXTRA_EXP,					//这类怪物在被玩家攻击时，玩家的额外战斗力等级每高出怪物的星级1点所增加的经验值比值。10000表示10000/10000。
	MONSTERTYPEDATA_EXTRA_DAMAGE,				//这类星级怪物在攻击玩家时，玩家所受到的伤害占其总生命值的比值。10000表示10000/10000。
	MONSTERTYPEDATA_DROP_STONE_TYPE,			//升型专用资源的掉落规则，对应drop_stone_rule表中的。ID默认为0，表示不掉落升型专用资源。tcp 2007-1-9 add
	MONSTERTYPEDATA_USER_ATK_ADJUST,			//用于BOSS类、副本怪物在被杀次数上再做一个调整。调整系数 = 字段数值 / 100
	//怪物针对性伤害技能、武器系统 
	MONSTERTYPEDATA_EXEMPT_DAMAGE,				//使用非针对性武器/技能攻击怪物时，被豁免的伤害百分比
	MONSTERTYPEDATA_PERTINENCE_MAGIC,			//针对性技能的id
	MONSTERTYPEDATA_PERTINENCE_MAGIC_DAMAGE,	//使用针对性技能进行攻击时，怪物所受到的最终伤害百分比
	MONSTERTYPEDATA_PERTINENCE_WEAPON,			//针对性武器的类型id
	MONSTERTYPEDATA_PERTINENCE_WEAPON_DAMAGE,	//使用针对性武器进行攻击时，怪物所受到的最终伤害百分比
	//怪物针对性伤害技能、武器系统	
	MONSTERTYPEDATA_DROP_RMB_COE,				//掉落太阳石几率修正参数
	MONSTERTYPEDATA_DROP_OTHER_COE,				//掉落其它物品几率修正参数		
	MONSTERTYPEDATA_PRICE,						//帮派战可破坏物件维修费用
	MONSTERTYPEDATA_USER_ATK_MODE,				//=0 表示有杀怪机制修正     =1 表示无杀怪机制修正
	MONSTERTYPEDATA_ATTACK_TYPE,				//=0 近程     =1 为远程
	MONSTERTYPEDATA_CALC_DMG_TYPE,				//=0 使用当前baselife的伤害计算流程。=1则表示使用伤害 = 攻 - 防的计算流程
	MONSTERTYPEDATA_WEAKNESS_TIPS,              //怪物弱点提示对应的tips编号
	MONSTERTYPEDATA_COMA_LIFE_RATE,				//触发怪物昏迷的血量比例
	MONSTERTYPEDATA_COMA_PROBABILITY,			//怪物昏迷的几率
	MONSTERTYPEDATA_ADD_PROFESSION_EXP,			//对怪物吸血可提升的职业经验值
	MONSTERDATA_LIVE_SECS,						//怪物尸体保留时间（僵尸2010-01-08，0表示10秒后尸体消失。1表示尸体不消失。其他值表示怪物死亡多少秒后尸体消失。）
	MONSTERDATA_CORRECLATION_MONSTER,		    //怪物相关字段
	MONSTERTYPEDATA_CHANGE_ID,					//怪物变身后对应的怪物id
//	MONSTERTYPEDATA_REBORN_COUNT,					//
	MONSTERTYPEDATA_BLOOD_ACTION_LOWER_LIMIT,   //怪物血量呼救下限值
	MONSTERTYPEDATA_BLOOD_ACTION,               //怪物血量呼救Action
	MONSTERTYPEDATA_RATECAP,					//怪物捕获玩家几率
	MONSTERTYPEDATA_FABACKDISTANCE,             //怪物脱离战斗距离
	MONSTERTYPEDATA_PARRY,
    MONSTERTYPEDATA_DEF_NEAR,
	MONSTERTYPEDATA_RIGHT_HAND_WEAPON,
	MONSTERTYPEDATA_LEFT_HAND_WEAPON,
	MONSTERTYPEDATA_MOVE_SPEED_ATTACK,
	MONSTERTYPEDATA_ATTACK_USER_TYPE,
	MONSTERTYPEDATA_SIZE,
	MONSTERTYPEDATA_MAGIC_HITRATE1,
	MONSTERTYPEDATA_MAGIC_HITRATE2,
	MONSTERTYPEDATA_MAGIC_HITRATE3,
	MONSTERTYPEDATA_RESISTANCE_TYPE,
	MONSTERTYPEDATA_BROKEN_BODY_SPEED,           // 怪物身体残缺时的移动速度 | monster's move speed when its body is broken
    MONSTERTYPEDATA_BROKEN_BODY_ATTACK_DURATION, // 怪物身体残缺时的攻击速度 ms | monster's attack duration(in ms) when its body is broken
    MONSTERTYPEDATA_GREENNAME_DISDAIN,
    MONSTERTYPEDATA_DROP_RULE,
    MONSTERTYPEDATA_SUPERARMOR_BREAK,           // 解除霸体阀值
    MONSTERTYPEDATA_SUPERARMOR_RESUME,          // 恢复霸体阀值
    MONSTERTYPEDATA_DEF_FAR,                    //远程防御
    MONSTERTYPEDATA_STATUS_MACHINE_TYE,         // 状态机类型
	MONSTERTYPEDATA_BURN,						//燃烧属性 TQD16910【末日危机】关于燃烧爆炸的设计总案
	MONSTERTYPEDATA_BURN_RANGE,					//火焰范围 TQD16910【末日危机】关于燃烧爆炸的设计总案
	MONSTERTYPEDATA_PVE_ENERGY,					//PVE能量值

	//Dota用字段
	MONSTERTYPEDATA_ADDITIVE_ATTR,				//对应CREATURE_ADDITIVE_ATTR_TYPE
	MONSTERTYPEDATA_UP_OWNER_ID,				//死亡时开启的兵营id
	MONSTERTYPEDATA_END_OWNER_ID,				//死亡时关闭的兵营id
	MONSTERTYPEDATA_PVE_POINT,					//PVE点数
    MONSTERTYPEDATA_DAMAGE_MONEY_RATE,          //炮塔伤害金币系数
};

enum MONSTER_SORT_TYPE
{
	MONSTER_SORT_NULL,
	MONSTER_SORT_LAMPS_ON = 1,		//灯具（默认开）
	MONSTER_SORT_LAMPS_OFF = 2,		//灯具（默认关）
};

enum MONSTERRESISTANCETYPEDATA
{
	MONSTERRESISTANCEDATA_ID,
	MONSTERRESISTANCEDATA_HEADSHOT_RATE,	//爆头抵抗几率
	MONSTERRESISTANCEDATA_MUTILATION_RATE,  //断肢抵抗几率
	MONSTERRESISTANCEDATA_BEATBACK_RATE,    //击退抵抗几率
	MONSTERRESISTANCEDATA_KNOCKDOWN_RATE,   //击倒抵抗几率
	MONSTERRESISTANCEDATA_KNOCKBACK_RATE,   //击飞抵抗几率
	MONSTERRESISTANCEDATA_SPASTICITY_TIME,  //僵直抵抗时间
};

enum MONSTERSKILLDATA
{
	//MONSTER_SKILL_ID,
	MONSTER_SKILL_MONSTERTYPE,
	MONSTER_SKILL_SKILL1,
	MONSTER_SKILL_CONDITION1,
	MONSTER_SKILL_DATA1,
	MONSTER_SKILL_DELAY_MS1,
	MONSTER_SKILL_INTONE_MS1,
	MONSTER_SKILL_SKILL2,
	MONSTER_SKILL_CONDITION2,
	MONSTER_SKILL_DATA2,
	MONSTER_SKILL_DELAY_MS2,
	MONSTER_SKILL_INTONE_MS2,
	MONSTER_SKILL_SKILL3,
	MONSTER_SKILL_CONDITION3,
	MONSTER_SKILL_DATA3,
	MONSTER_SKILL_DELAY_MS3,
	MONSTER_SKILL_INTONE_MS3,
	MONSTER_SKILL_SKILL4,
	MONSTER_SKILL_CONDITION4,
	MONSTER_SKILL_DATA4,
	MONSTER_SKILL_DELAY_MS4,
	MONSTER_SKILL_INTONE_MS4,
	MONSTER_SKILL_SKILL5,
	MONSTER_SKILL_CONDITION5,
	MONSTER_SKILL_DATA5,
	MONSTER_SKILL_DELAY_MS5,
	MONSTER_SKILL_INTONE_MS5,
	MONSTER_SKILL_SKILL6,
	MONSTER_SKILL_CONDITION6,
	MONSTER_SKILL_DATA6,
	MONSTER_SKILL_DELAY_MS6,
	MONSTER_SKILL_INTONE_MS6,
	MONSTER_SKILL_SKILL7,
	MONSTER_SKILL_CONDITION7,
	MONSTER_SKILL_DATA7,
	MONSTER_SKILL_DELAY_MS7,
	MONSTER_SKILL_INTONE_MS7,
	MONSTER_SKILL_SKILL8,
	MONSTER_SKILL_CONDITION8,
	MONSTER_SKILL_DATA8,
	MONSTER_SKILL_DELAY_MS8,
	MONSTER_SKILL_INTONE_MS8,
	MONSTER_SKILL_SKILL9,
	MONSTER_SKILL_CONDITION9,
	MONSTER_SKILL_DATA9,
	MONSTER_SKILL_DELAY_MS9,
	MONSTER_SKILL_INTONE_MS9,
	MONSTER_SKILL_SKILL10,
	MONSTER_SKILL_CONDITION10,
	MONSTER_SKILL_DATA10,
	MONSTER_SKILL_DELAY_MS10,
	MONSTER_SKILL_INTONE_MS10,
};

//这个枚举根据具体业务有调整，请更新相关的注释
enum MONSTERATTRTYPEDATA
{
	MONSTERATTRTYPE_ID,
	MONSTERATTRTYPE_DEF_STRAFE,		//机枪防御（0~10000）
	MONSTERATTRTYPE_DEF_FIREGUN,	//火焰枪防御（0~10000）
	MONSTERATTRTYPE_DEF_SHAKE,		//震荡枪防御（0~10000）
	MONSTERATTRTYPE_DEF_ICEGUN,		//冰冻枪防御（0~10000）
	MONSTERATTRTYPE_DEF_SNIPE,		//狙击枪防御（0~10000）
	MONSTERATTRTYPE_WEAKNESS,		//弱点 弱点数量，被弱点攻击时，损失 HP上限/弱点数量HP，=0时,与def_snipe=9999时相对应
	MONSTERATTRTYPE_DEF_COLD,		//冰冻防御（0~10000） 比热，影响升温速度和降温速度。字段数值XX表示XX%，范围为0~100
	MONSTERATTRTYPE_DEF_HOT,		//高温防御（0~10000） 灼烧抵抗，影响实际的高温伤害。字段数值XX表示XX%
	MONSTERATTRTYPE_DEF_MGUN,		//机枪的压制防御（0~10000）
	MONSTERATTRTYPE_DEF_SHAKEGUN,	//震荡防御（0~10000）
	MONSTERATTRTYPE_MAX_WRATH,		//近战连击机制tcp 2007-3-29 add
	MONSTERATTRTYPE_DEF_BEAT,		//近战连击机制tcp 2007-3-29 add
	MONSTERATTRTYPE_DEF_MUSKET,		//步枪防御（0~10000）步枪
};

enum DROPITEMTYPE
{
	DROPITEMTYPE_NONE = 0,
	DROPITEMTYPE_EQUIP = 10,
	DROPITEMTYPE_AMMO  = 20,
	DROPITEMTYPE_PART  = 30,
	DROPITEMTYPE_AMPLIFIER =  40,
	DROPITEMTYPE_GUARDEQUIPITEM =  50,
	DROPITEMTYPE_EXPENDABLE = 60,
	DROPITEMTYPE_INSIDEITEM = 70,
	DROPITEMTYPE_OTHERITEM	= 80,
	DROPITEMTYPE_SPECIALITEM = 90,
	DROPITEMTYPE_RMB   = 100
};

typedef enum
{
	EMPLACEMENT_NONE = 0,
	EMPLACEMENT_TYPE_PROGCOMMON = 1,
	EMPLACEMENT_TYPE_PROGTRACE,
	EMPLACEMENT_TYPE_TRACE,
	EMPLACEMENT_TYPE_TRACE_MAGIC=5,

	EMPLACEMENT_TYPE_SYN_ATTACK_SIDE = 40,//是前面炮台的前缀

	ELECTROMOTOR_TYPE=50,
}EmplacementType;

//////////////////////////////////////////////////////////////////////
enum 
{	
	ATKUSER_LEAVEONLY				= 0,				// 只会逃跑
	ATKUSER_PASSIVE					= 0x01,				// 被动攻击
	ATKUSER_ACTIVE					= 0x02,				// 主动攻击
	ATKUSER_RIGHTEOUS				= 0x04,				// 正义的(卫兵或玩家召唤和控制的怪物)
	ATKUSER_GUARD					= 0x08,				// 卫兵(无事回原位置)
	ATKUSER_PPKER					= 0x10,				// 追杀黑名
	ATKUSER_JUMP					= 0x20,				// 会跳
	ATKUSER_FIXED					= 0x40,				// 不会动的
	ATKUSER_FASTBACK				= 0x0080,				// 速归
	ATKUSER_LOCKUSER				= 0x0100,				// 锁定攻击指定玩家，玩家离开自动消失
	ATKUSER_LOCKONE					= 0x0200,				// 锁定攻击首先攻击自己的玩家
	ATKUSER_ADDLIFE					= 0x0400,				// 自动加血
	ATKUSER_EVIL_KILLER				= 0x0800,				// 白名杀手
	ATKUSER_WING					= 0x1000,				// 飞行状态
	ATKUSER_DESTROYOBJ				= 0x2000,				// 可破坏物件
	ATKUSER_ROAR					= 0x4000,				// 出生时全地图怒吼
	ATKUSER_NOESCAPE				= 0x8000,				// 不会逃跑
	ATKUSER_EQUALITY				= 0x00010000,			// 不藐视
	ATKUSER_DEFSUPPRESS				= 0x00020000,			// 不可被压制的
	ATKUSER_BLAST					= 0x00100000,			// 地图爆炸物
	ATKUSER_EMPLACEMENT				= 0x00200000,			// 炮台，新增	
	ATKUSER_ELECTROMOTOR			= 0x00400000,			// 发电机，新增
	ATKUSER_PROTECTNPC				= 0x00800000,			// 护送NPC
	ATKUSER_NON_DORMANCY			= 0x01000000,			// 不休眠怪物类型
	ATKUSER_ATTACK_DEFENCE_SIDE		= 0x02000000,			// 只攻击防守方舰队及其联盟};
	ATKUSER_PHYSICAL_IMMUNITY		= 0x04000000,			// 不能被物理攻击
	ATKUSER_CHANGE_BODY				= 0x08000000,			//可变身怪物 [新增2009.8.17]
	ATKUSER_SHIFTABLE				= 0x10002040,           //可被玩家举起和抛掷的可破坏物件
	ATKUSER_ATTACK_IMMUNITY			= 0x20000000,			//不能被攻击
};

////////////////////////////////////////////////////////////////
enum
{
		TYPE_MAGIC		= 0, // 魔法
		TYPE_XPSKILL	= 1, // xp技
		TYPE_KONGFU		= 2, // 武功招式
};


enum ATK_MODE
{
	ATKMODE_USER			= 0x1,
	ATKMODE_MONSTER			= 0x2,
	ATKMODE_ACTION			= 0x4,				// 只触发ACTION
	ATKMODE_TRIGGER			= 0x8,				//7、	把同屏内所有地雷引发
	ATKMODE_AIR_UNIT		= 0x10,				//8、	一定范围内自动攻击空中目标
	ATKMODE_FRIENDS_ENEMY	= 0x20,			//9、	特殊的触发方式，会在一定范围内自动攻击同组队员攻击的目标）
	ATKMODE_LATENCY			= 0x40,				// 机雷，会潜伏在触发者身上，由主人遥控引爆，!!!! traptype里要用atk_mode来区分机雷和地雷，机雷的atk_mode必需要包含0x40才能遥控引爆，否则安上去就会马上爆炸，
	ATKMODE_NOATTACK		= 0x80,				// 不攻击对象
	ATKMODE_ONCE_EFFECT		= 0x100,			// 进入陷阱只能触发一次数
};

// 
// // 外部状态，需要通过MsgPlayer通知其它玩家的状态。与客户端同步
// enum KEEPEFFECT
// {
// 	// effect0
// 		KEEPEFFECT_NORMAL			=0x0000,
// 		KEEPEFFECT_CRIME			=0x0001, 
// 		KEEPEFFECT_POISON			=0x0002, 
// 		KEEPEFFECT_INVISIBLE		=0x0004,
// 		KEEPEFFECT_FREEZE			=0x0008,
// 		KEEPEFFECT_XPFULL			=0x0010,
// 		KEEPEFFECT_DIE				=0x0020,
// 		KEEPEFFECT_TEAMLEADER		=0x0040,
// 		KEEPEFFECT_HITRATE			=0x0080,
// 		KEEPEFFECT_DEFENCE			=0x0100,
// 		KEEPEFFECT_ATTACK			=0x0200,
// 		KEEPEFFECT_GHOST			=0x0400,
// 		KEEPEFFECT_DISAPPEARING		=0x0800,
// 		KEEPEFFECT_MAGICDEFENCE		=0x1000,
// 		KEEPEFFECT_BOWDEFENCE		=0x2000,
// 		KEEPEFFECT_RED				=0x4000,
// 		KEEPEFFECT_DEEPRED			=0x8000,
// 		KEEPEFFECT_ATKRANGE			=0x00010000,
// 		KEEPEFFECT_REFLECT			=0x00020000,
// 		KEEPEFFECT_SUPERMAN			=0x00040000,
// 		KEEPEFFECT_WEAPONDAMAGE		=0x00080000,
// 		KEEPEFFECT_MAGICDAMAGE		=0x00100000,
// 		KEEPEFFECT_ATKSPEED			=0x00200000,
// 		KEEPEFFECT_LURKER			=0x00400000,
// 		KEEPEFFECT_TORNADO			=0x00800000,
// 		KEEPEFFECT_SYNCRIME			=0x01000000, 
// 		KEEPEFFECT_REFLECTMAGIC		=0x02000000,
// 		KEEPEFFECT_DODGE			=0x04000000,
// 		KEEPEFFECT_WING				=0x08000000,
// 		KEEPEFFECT_KEEPBOW			=0x10000000,
// 		KEEPEFFECT_INSTEAD			=0x20000000,
// 		KEEPEFFECT_LUCK_SPREAD		=0x40000000,		// 祈福
// 		KEEPEFFECT_LUCK_ABSORB		=0x80000000,		// 吸福
// 		
// 		// effect1
// 		KEEPEFFECT_CURSE			=0x00000001,		// 诅咒状态
// 		KEEPEFFECT_GODBLESS			=0x00000002,		// 祝福状态
// 		
// 		KEEPEFFECT_INVALID			=0xFFFFFFFF,
// 		
// };
// 
// //////////////////////////////////////////////////////////////////////
// // 综合状态
// enum 
// {
// 		KEEPEFFECT_NOT_ACTIVE		=KEEPEFFECT_DIE|KEEPEFFECT_FREEZE,
// 		KEEPEFFECT_NOT_CLEAR		=KEEPEFFECT_TEAMLEADER|KEEPEFFECT_RED|KEEPEFFECT_DEEPRED,		// 玩家死亡不清此状态
// };

enum 
{
	STATUSSORT_LEAVETIMES		= 1 << 0,
	STATUSSORT_REMAINTIME		= 1 << 1,
	STATUSSORT_ENDTIME			= 1 << 2
};

//REGION_TYPE 1000-1999客户端专用，没有服务端
//REGION_TYPE 2000-2999服务端专用，客户端没用
//REGION_TYPE	其他双方都有
enum REGION_TYPE 
{
	REGION_NONE					= 0,
	REGION_CITY							= 1,			//城市区域，组队经验不分享区域
	REGION_WEATHER				= 2,
	REGION_STATUARY				= 3,
	REGION_DESC					= 4,
	REGION_GOBALDESC			= 5,
	REGION_DANCE				= 6,			// data0: idLeaderRegion, data1: idMusic, 
	REGION_PK_PROTECTED					= 7,
	REGION_BOOTH						= 8,			// data0: level of booth
	REGION_SHIP							= 9,			//飞船所在市场区域
	REGION_UNIVERSE						= 11,           //宇宙场景
	REGION_OFFSET						= 12,			//移屏区域(下传给客户端)
	REGION_BOUNCE_START					= 13,			//弹射区域
	REGION_MARKET						= 14,			//市场区域，组队经验不分享区域
	REGION_TRAININGFIELD				= 16,			// 练功场区域
	REGION_FULLSCREEN_ATK_DISABLE		= 17,		    //限制使用全屏轰炸技能
	REGION_RECORDPOS_DISABLE			= 18,           //不存记录点
	REGION_SUPPORT_STATION				= 20,           //补给站	
	REGION_JUMP_DISABLE					= 21,			//不允许跳区域
	REGION_LIMITTIME_SHIP				= 22,			//高级限定次数飞船出发等待区域
	REGION_SPECIAL_JUMP_EN 				= 25,           //不同区域跳跃消耗不一样 2007-3-14 tcp add		
	REGION_RADIATION					= 30,           //辐射影响区的地图区域	2007-2-25 tcp add
	REGION_DISABLE_TRANSPOS 			= 31,           //不可召唤 2007-2-27 tcp add
	REGION_FREE_JUMP 					= 34,           //自由跳跃不判断距离 2007-2-28 tcp add	
	REGION_DISABLE_TRUMP_REBORN			= 37,           //禁止使用法宝复活技能		
	REGION_DISABLE_TRUMP_REGION			= 38,           //禁止使用法宝结界技能		
	REGION_INFINITE_XP_REGION			= 39,			//无限XP区域类型配置 
	REGION_DISABLE_TRUMP_RAND_TRANS_POS = 40,			 //禁止使用法宝-小瞬移
	REGION_DISABLE_TRANSFORM			= 41,			//禁止变形
	REGION_XP_REVERT_SPEED_ADJ			= 43,			//XP回复速度控制区域, data0表示增加　data1表示减少，不同时起作用
	REGION_DISABLE_MOUNT				= 44,			//骑宠限制
	REGION_SWEAR						= 45,			//结拜区域	
	REGION_JUMP_ATKPOWER				= 46,			//弹射区域，战斗力限制
	REGION_JUMP_SPIRITLEV				= 47,			//弹射区域，主机体等级限制
	REGION_JUMP_MODELLEV				= 48,			//弹射区域，主机体星级限制
	REGION_DISBLE_JOIN_PRIVATE_SHIPJOB	= 51,			//禁止参加私人副本任务的区域
	REGION_DISABLE_GODTRANSPORT			= 54,			//禁止神仙传送
	REGION_NOT_INVITE					= 55,			//不可以被邀请
	REGION_CHECK_JUMP_OVER_HEIGHT		= 2000,			//增加跳跃检查高度的区域

	REGION_ABATTOIR						= 56,			//角斗场区域，怪物可互相作战
	REGION_NOT_CREATEDOMAIN				= 57,			//无法创建领域

	REGION_DISABLE_CALLALTAR			= 58,			//禁止召唤祭坛区域
	REGION_COM_ALTAR					= 59,			//公共祭坛区域
	REGION_PRIVATE_ALTAR				= 60,			//玩家召唤祭坛区域

	REGION_DISABLE_FLY					= 70,			//禁止飞行区域
	REGION_BATTLE						= 71,			//战斗区域 玩家进入后进入备战状态

	REGION_SAINT_LIGHT                  = 80,           // 处于教堂内时，使吸血鬼进入“吸血鬼被圣光照射状态”。
	REGION_ANGEL_DRAW					= 90,			//天使领取区
	REGION_PEACE                        = 95,           //和平区域 新增2009 10 12 
	REGION_MONSTER                      = 96,           //和平区域 新增2009 10 12
	REGION_TRAP                         = 97,           //和平区域 新增2009 10 12
	REGION_SUN_SHINE                    = 65536,        //  Type = 65536，有阳光的区域

};

enum AUTO_ACTIVE
{
		AUTOACTIVE_KILL		= 0x01,
		AUTOACTIVE_FOREVER	= 0x02,
		AUTOACTIVE_RANDOM	= 0x04,
};

enum USER_LOOK_FACE
{
	LOOK_MALEGHOST = 98,
	LOOK_FEMALEGHOST,
};  

enum USER_LOOK_SEX
{ 
	SEX_ALL = 0, 
	SEX_MAN, 
	SEX_WOMAN,
	SEX_ASEXUAL
};

enum 
{
	LOCK_STATUS				= 1 << 0,
	WAITINGUNLOCK_STATUS	= 1 << 1,
};

enum
{
	BUDDY_APPLY,		// 申请
	BUDDY_REFUSE,		// 拒绝
	BUDDY_ONLINE,		// 上线
	BUDDY_OFFLINE,		// 下线
	BUDDY_BREAK,		// 断交
	BUDDY_BASE_INFO,	// 基本信息
	BUDDY_DEL,			// 删除角色
	BUDDY_SYNC,			// 同步时间
	BUDDY_APPLYPROMPT,	// 考验中商业伙伴提示
};	

enum MOVE_MODE
{
	MOVEMODE_WALK=0,					// PathMove()的模式
	MOVEMODE_RUN,
	MOVEMODE_SHIFT,						// to server only
	MOVEMODE_JUMP,
	MOVEMODE_TRANS,
	MOVEMODE_CHGMAP,
	MOVEMODE_JUMPMAGICATTCK,
	MOVEMODE_COLLIDE,
	MOVEMODE_SYNCHRO,					// to server only
	MOVEMODE_FLYNORMAL = 10,            // 飞行
	MOVEMODE_FLYMIDDLE,
	MOVEMODE_FLYFAST,                   // 快速飞行
	MOVEMODE_FLOAT,                     // 浮游
	MOVEMODE_FLYSLOW,                   // 慢飞
	MOVEMODE_MACHINEGUN_ATK=15,         // 机枪移动射击
	//宇宙中的移动方式
	MOVEMODE_UNIVERSE_FLY	= 20,		// 宇宙飞
	MOVEMODE_UNIVERSE_FLYFAST,			// 宇宙快飞
	MOVEMODE_WHIRLWIND,                 // 旋风斩
	/////////////////////////////
	MOVEMODE_NONE = 255,
};

enum ITEM_VALUE
{
	ITEM_VALUE_ID,
	ITEM_VALUE_TYPE,
	ITEM_VALUE_DATA1,
	ITEM_VALUE_VALUE,
};

enum 
{
	VALUE_RATIO = 1,
	VALUE_GEM1,
	VALUE_GEM2,
	VALUE_ADD,
	VALUE_ITEM,
	VALUE_DMG_REDUCE,
};


//////////////////////////////////////////////////////////////////////
//下面枚举定义用于PET
enum PETDATA
{
	PETDATA_ID	   =0,
	PETDATA_OWNERID ,
	PETDATA_OWNERTYPE,
	PETDATA_GENID,
	PETDATA_TYPE,
	PETDATA_NAME,
	PETDATA_LIFE,
	PETDATA_MANA,
	PETDATA_MAPID,
	PETDATA_RECORD_X,
	PETDATA_RECORD_Y,
	PETDATA_DATA,						// 可用于神兽记录NPCID
	PETDATA_DATA1,						// 可用于武器itemtype.id
	PETDATA_DATA2,						// 可用于机体robottype
	PETDATA_NUMBER,	
};

enum
{ 
	POSE_STAND	= 0 
};

enum STORAGE_TYPE 
{
	STORAGE_NONE			= 0,
	STORAGE_STORE			= 10,
	STORAGE_TRUNK			= 20,
	STORAGE_CHEST			= 30,
};
enum WEATHER_TYPE
{ 
	WEATHER_NONE        =   0, 
    WEATHER_FINE,           //天晴(无天气)
    WEATHER_RAINY,          //下雨
    WEATHER_SNOWY,          //下雪
	WEATHER_SANDS,          //风沙
	WEATHER_LEAF,           //落叶
	WEATHER_BAMBOO,         //飘叶
    WEATHER_FLOWER,         //落花
    WEATHER_FLYING,         //飞花
    WEATHER_DANDELION,      //蒲公英
    WEATHER_WORM,           //萤火虫
    WEATHER_CLOUDY,         //飘云
    WEATHER_ALL
};


enum TRAININGSTATE
{
	TRAINING_NORMAL = 10,
	TRAINING_PAUSE  = 11,
	TRAINING_STOP   = 12,
};

enum  HOTAGEDATA
{
	HOSTAGE_ID,
	HOSTAGE_TYPE,
	HOSTAGE_SEX,
	CHARACTER_TYPE,
	CHARACTER,
};

enum PEERAGE_RANK
{
	PEERAGERANK_NONE,
	PEERAGERANK_BARON = 1,		//男爵
	PEERAGERANK_VISCOUNT = 3,	//子爵
	PEERAGERANK_EARL = 5,		//伯爵
	PEERAGERANK_MARQUIS = 7,	//侯爵
	PEERAGERANK_DUKE = 9,		//公爵
	PEERAGERANK_KING = 12,		//国王/女王
};

// 装备品质itemtype的最后一位
enum
{
	NORMAL = 5,			// 白品 Normal
	REFINED,			// 良品 Refined
	UNIQUE,				// 上品 Unique
	ELITE,				// 精品 Elite
	SUPER,				// 极品 Super
};
enum
{
	PK_ITEM_ID,
	PK_ITEM_ITEM,
	PK_ITEM_TARGET,
	PK_ITEM_TARGET_NAME,
	PK_ITEM_HUNTER,
	PK_ITEM_HUNTER_NAME,
	PK_ITEM_MANHUNT_TIME,
	PK_ITEM_BONUS
};

enum 
{ 
	QUERY_DETAIN_ITEM_REDEEM, 
	QUERY_DETAIN_ITEM_BONUS 
};

enum DYNA_RANK_REC_DATA
{
	RANK_REC_ID,
	RANK_REC_TYPE,
	RANK_REC_VALUE,
	RANK_REC_OBJID,
	RANK_REC_OBJNAME,
	RANK_REC_USERID,
	RANK_REC_USERNAME,
};

enum DYNA_RANK_TYPE_DATA
{
	RANK_TYPE_ID,
	RANK_TYPE_TYPE,
	RANK_TYPE_NUM,
	RANK_TYPE_DATAMIN,
	RANK_TYPE_TIMETYPE,
	RANK_TYPE_COMMENT,
};

enum RANKTYPE_DATA
{
	RANKTYPE_ID,
	RANKTYPE_TYPE,
	RANKTYPE_NUM,
	RANKTYPE_DATA_MIN,
};

enum RANKSORT_DATA
{
	RANKSORT_ID,
	RANKSORT_TYPE,
	RANKSORT_VALUE,
	RANKSORT_OBJID,
	RANKSORT_OBJNAME,
	RANKSORT_USERID,
	RANKSORT_USERNAME,
};

enum ACT_TYPE
{
	ACT_QUERY_SORT	= 1,
	ACT_QUERY_MINE	= 2,
	ACT_QUERY_VALUE_BY_POS	= 3,
	ACT_QUERY_EFFECT,
	ACT_QUERY_END,
};

enum SYSBUYERDATA
{
	SYSBUYERDATA_ITEM = 1,
	SYSBUYERDATA_INTERVAL,
	SYSBUYERDATA_MIN_PRICE,
	SYSBUYERDATA_MAX_PRICE,
};


enum 
{
	DETECTOR_NONE = 0, 
	DETECTOR_VERIFYDATA
};

enum FLOWER_TYPE
{
	FLOWER_R,
	FLOWER_W,
	FLOWER_LILY,
	FLOWER_TULIP
};

enum INSTANTMAPITEMDATA{
		INSTANTMAPITEMDATA_ID	= 0,
		INSTANTMAPITEMDATA_MAPID,
		INSTANTMAPITEMDATA_X,
		INSTANTMAPITEMDATA_Y,
		INSTANTMAPITEMDATA_RANGE,
		INSTANTMAPITEMDATA_SEC,
		INSTANTMAPITEMDATA_ITEMTYPE,
};


//////////////////////////////////////////////////////////////////////
enum SPIRITTYPEDATA{
	SPIRITTYPEDATA_ID = 0,
	SPIRITTYPEDATA_PRICE,			// 国民贡献度
	SPIRITTYPEDATA_HP,
	SPIRITTYPEDATA_INCREASE,
	SPIRITTYPEDATA_TOTALINSIDESIZE,
	SPIRITTYPEDATA_SIZEX,
	SPIRITTYPEDATA_WEIGHTLIMIT,
	
	SPIRITTYPEDATA_DMG_SHARE,	
	SPIRITTYPEDATA_DATA0,	
	SPIRITTYPEDATA_DATA1,
	SPIRITTYPEDATA_DATA2,
	SPIRITTYPEDATA_DATA3,
	SPIRITTYPEDATA_DATA4,

	SPIRITTYPEDATA_DATA5,
	SPIRITTYPEDATA_DATA6,
	SPIRITTYPEDATA_DATA7,
	SPIRITTYPEDATA_REQLEV,
	SPIRITTYPEDATA_WEAPONSKILL,
	SPIRITTYPEDATA_SEX,
	SPIRITTYPEDATA_HOTDEF,SPIRITTYPEDATA_LIFE_RE = SPIRITTYPEDATA_HOTDEF,
	SPIRITTYPEDATA_ShAKEDEF,
	SPIRITTYPEDATA_COLDDEF,SPIRITTYPEDATA_WEAPON_TYPE = SPIRITTYPEDATA_COLDDEF,
	SPIRITTYPEDATA_LIGHTDEF,

	SPIRITTYPEDATA_LOOK,
	SPIRITTYPEDATA_TYPENAME,		// 2006.01.16 不知道谁加的数据库字段，但是这里却没有增加？？严重的问题。
	SPIRITTYPEDATA_AMOUNTADD,	// 2006.01.16 振幅器装备数量限制(1-255)，最少为1
	SPIRITTYPEDATA_SPIRITNAME,
	SPIRITTYPEDATA_DODGE,
	SPIRITTYPEDATA_EXPTYPE,		// 2006.06.04 对应levexp.type 机体经验(type=1、type=2…)（注：将来会推出升级经验不同的多种机体）
	SPIRITTYPEDATA_DMGTYPE,
	
	
	/////已删除
//	SPIRITTYPEDATA_RACE,				// enum { RACE_EARTH=1, RACE_SPACE=2, RACE_DUAL=3 };
//	SPIRITTYPEDATA_SORT,				// enum { SPIRITSORT_NONE=0, SPIRITSORT_FIGHTER, SPIRITSORT_GUNNER, SPIRITSORT_ENERGY, SPIRIT_ASSISTANT };
};


	enum { ATTACK_TIME=false, BEATTACK_TIME=true, BY_WEAPON=false, BY_MAGIC=true };


	// requre sex define
	const unsigned char SEX_REQ_MAN			=	0x01;// 男的可用
	const unsigned char SEX_REQ_WOMAN		=	0x02;// 女的可用
	const unsigned char SEX_REQ_EUNUCH		=	0x04;// 太监可用

	enum ENGINESPEND
	{// 2006.11.01
		ENGINESPEND_SKILL,					// 使用技能，不改动
		ENGINESPEND_EQUIPT_DIRECTOUTPUT,	// 消耗发动机输出能量的装备。武器、推进器、防御装置、闪避装置
		ENGINESPEND_EQUIPT_USEEN,			// 消耗发动机能量槽的装备。能量场发生器、盾牌
	};

	// GetRevertType返回类型
	enum REVERT_TYPE{
			REVERT_HP				= 0,
			REVERT_EN				= 1,
			REVERT_FUEL				= 2,
			REVERT_STATUS			= 3,
			REVERT_EQUIP			= 4,
			REVERT_ENGIN			= 5,
	};

	enum EEliteJudgeType
	{
		ELITEJUDGE_TRADE,
			ELITEJUDGE_BOOTH,
			ELITEJUDGE_SELL,
			ELITEJUDGE_DROP,
	};

	enum {	PROFSORT_ROBBER		=0, 
		PROFSORT_OFFICER 	=1, 

		// no use
		PROFSORT_ARCHER		=3, 
		PROFSORT_WIZARD		=4, 
		PROFSORT_DAOIST		=10, 
		PROFSORT_DAOISTGOLD	=11, 
		PROFSORT_DAOISTWOOD	=12, 
		PROFSORT_DAOISTWATER=13, 
		PROFSORT_DAOISTFIRE	=14, 
		PROFSORT_DAOISTEARTH=15, 
	};

	//////////////////////////////////////////////////////////////////////
	enum INFO_ID{
			INFO_NONE=0,
			INFO_ITEM,
			INFO_FRIEND,
			INFO_ENEMY,
			INFO_WEAPONSKILL,
			INFO_MAGIC,
			INFO_SYNATTR,
			INFO_STATUS,
			INFO_TEAM,
			INFO_VIPLEVEL,
	};

	////////////////////////////////////////////////////////////////
	enum REMOTE_CALL{
			REMOTE_CALL_DROP_LEADER,
			REMOTE_CALL_LEAVE_SYN,
			REMOTE_CALL_TEAM_CLOSE_MONEY,
			REMOTE_CALL_TEAM_CLOSE_ITEM,
			REMOTE_CALL_TEAM_CLOSE_GEM_ACCESS,
			REMOTE_CALL_TEAM_ADD_VIRTUE,
			REMOTE_CALL_TEAM_HUNTKILL,
			REMOTE_CALL_SYSMSG_SEND,
			REMOTE_CALL_LEAVE_FAMILY,
	};

enum	//此定义已不使用，请使用随后的定义
{
	RANK_COMMANDER							= 1000,					// 舰队司令
	RANK_LEADER								= RANK_COMMANDER,
	
	RANK_VICE_COMMANDER						= 990,					// 副舰队司令
	RANK_VICE_COMMANDER_DESIGNATED			= 980,					// 钦命副舰队司令
	RANK_COMMANDER_MATE						= 920,					// 舰队司令伴侣
	
	RANK_CORP_COMMANDER						= 890,					// 军长、长老
	RANK_CORP_COMMANDER_DESIGNATED			= 880,					// 钦命军长、长老		
	RANK_DIVISION_COMMANDER					= 850,					// 师长、护法
	RANK_DIVISION_COMMANDER_DESIGNATED		= 840,					// 钦命师长、护法
	
	RANK_REGIMENTAL_COMMANDER				= 690,					// 团长、堂主
	RANK_REGIMENTAL_COMMANDER_DESIGNATED	= 680,					// 钦命团长、堂主

	RANK_VICE_COMMANDER_MATE				= 620,					// 副舰队司令伴侣
	RANK_VICE_COMMANDER_ASSITANT			= 611,					// 副舰队司令的助理
	RANK_COMMANDER_MATE_ASSITANT			= 610,					// 舰队司令伴侣助理
	
	RANK_COMPANY_COMMANDER					= 590,					// 连长、香主
	RANK_CORP_COMMANDER_MATE				= 520,					// 军长伴侣、长老伴侣
	RANK_DIVISION_COMMANDER_MATE			= 521,					// 师长伴侣、护法伴侣
	RANK_DIVISION_COMMANDER_ASSISTANT		= 511,					// 师长助理、护法助理		
	RANK_CORP_COMMANDER_ASSISTANT			= 510,					// 军长助理、长老助理
	
	RANK_PLATOON_LEADER  					= 490,					// 排长、头目
	RANK_REGIMENTAL_COMMANDER_MATE			= 420,					// 堂主伴侣
	
	RANK_SENIOR_MONITOR						= 210,					// 资深班长、团员
	RANK_MONITOR							= 200,					// 班长、团员
	
	RANK_SOLIDER							= 100,					// 战士、预备团员
	RANK_NONE								= 0,
};

enum SYN_MEMBER_RANK
{
	RANK_Leader								= RANK_COMMANDER,						// 军团团长         100%
		
	RANK_SecondLeader						= RANK_VICE_COMMANDER,					// 副团长            90%
	RANK_SecondLeader_Designated			= RANK_VICE_COMMANDER_DESIGNATED,		// 钦命的副团长		 90%
	RANK_LeaderMate							= RANK_COMMANDER_MATE,					// 军团长伴侣        90%
		
	RANK_Elder		 						= RANK_CORP_COMMANDER,					// 长老              80%
	RANK_Elder_Designated					= RANK_CORP_COMMANDER_DESIGNATED,		// 钦命的长老        80%
		
	RANK_Brainman_Leader                    = 870,                                  //资深参谋长         80%
	RANK_Brainman                           = 860,                                  //资深参谋           70%
		
	RANK_Guard								= RANK_DIVISION_COMMANDER,				// 护法				 70%
	RANK_Guard_Designated					= RANK_DIVISION_COMMANDER_DESIGNATED,	// 钦命的护法        70%
		
	RANK_GroupLeader						= RANK_REGIMENTAL_COMMANDER,			// 堂主              50%
	RANK_GroupLeader_Designated				= RANK_REGIMENTAL_COMMANDER_DESIGNATED,	// 钦命的堂主        50%
		
	RANK_SecondGroupLeader					= 650,									//副指挥官/资深副官  50%
		
	RANK_SecondLeaderMate					= RANK_VICE_COMMANDER_MATE,				// 副团长伴侣        50%
	RANK_SecondLeaderAssistant				= RANK_VICE_COMMANDER_ASSITANT,			// 副团长的助理      50%		
	RANK_LeaderMateAssistant				= RANK_COMMANDER_MATE_ASSITANT,			// 军团长伴侣助理    50%
		
	RANK_HenchMan_Leader		= 602,			// 军团长亲信		 50%
	//-----------------------------------------------------------------------------
	RANK_GroupLeader_Standard	= 600,			// 堂主标准(不是职位，只是一个界碑)
	//-----------------------------------------------------------------------------
	RANK_DonateRMB_TeamLeader				= 597,									// 元宝执行官		 30%
	RANK_DonateRobot_TeamLeader				= 596,									// 机体执行官		 30%
	RANK_DonateMoney_TeamLeader				= 595,									// 财务执行官		 30%
	RANK_DonateExploit_TeamLeader			= 593,									// 功勋执行官		 30%
	RANK_Rose_TeamLeader					= 591,									// 玫瑰执行官		 30%
		
	RANK_TeamLeader							= RANK_COMPANY_COMMANDER,				// 香主，执行官      30%
	RANK_ElderMate							= RANK_CORP_COMMANDER_MATE,				// 长老伴侣          30%
	RANK_GuardMate							= RANK_DIVISION_COMMANDER_MATE,			// 护法伴侣          30%
	RANK_GuardAssistant						= RANK_DIVISION_COMMANDER_ASSISTANT,	// 护法助理          30%		
	RANK_ElderAssistant						= RANK_CORP_COMMANDER_ASSISTANT,		// 长老助理          30%
	//-----------------------------------------------------------------------------
	RANK_TeamLeader_Standard	= 500,			// 香主标准(不是职位，只是一个界碑)
	//-----------------------------------------------------------------------------
	RANK_DonateRMB_SmallLeader				= 497,									// 元宝精英团员		 20%
	RANK_DonateRobot_SmallLeader			= 496,									// 机体精英团员		 20%
	RANK_DonateMoney_SmallLeader			= 495,									// 财务精英团员		 20%
	RANK_DonateExploit_SmallLeader			= 493,									// 功勋精英团员		 20%
	RANK_Rose_SmallLeader					= 491,									// 玫瑰精英团员		 20%
	
	RANK_SmallLeader						= RANK_PLATOON_LEADER,					// 头目，精英团员    20%
	RANK_GroupLeaderMate					= RANK_REGIMENTAL_COMMANDER_MATE,		// 堂主伴侣          20%
	
	RANK_HenchMan_SecondLeader				= 405,									// 副团长亲信		 20%
	RANK_HenchMan_SecondLeaderD				= 404,									// 钦命副团长亲信	 20%
	RANK_HenchMan_LeaderMate				= 403,									// 团长伴侣亲信		 20%
	RANK_HenchMan_Elder						= 402,									// 长老亲信			 20%
	RANK_HenchMan_ElderD					= 401,									// 钦命长老亲信		 20%
	
	RANK_SeniorNewbie						= RANK_SENIOR_MONITOR,					// 资深团员			 15%
	RANK_Newbie								= RANK_MONITOR,							// 普通团员          10%
	RANK_Solider							= RANK_SOLIDER,							// 预备团员           0%
	RANK_None								= 0,
};

//////////////////////////////////////////////////////////////////////
enum 
{
		DIE_NORMAL			= 1,
		DIE_CRITICALHIT		= 2,
		DIE_MAGIC			= 3,
		DIE_FLOAT			= 4,		// only for client
		DIE_ARROWSHOOT		= 5,
		DIE_DELAY			= 6,		// 延迟向客户端发死亡消息，用于大招
		DIE_SUICIDE         = 7,		// 浪人自杀(侍卫)
		DIE_SUCKBLOOD_EXPIATE	= 8,	// 被吸血或清洗救赎
};

	//////////////////////////////////////////////////////////////////////
	enum CONDITION_USER_TYPE
	{
		CONDITION_USER_ALL,
		CONDITION_USER_LIVE,	
	};

	//是否自动分配点数
	enum {_NOT_AUTOALLOT = 0, _AUTOALLOT = 1};
	enum {LOCK_NOT_OPEN = 0, LOCK_OPENED = 1};

	////////////////////////////////////////////////////////////////
	enum FLOATELECTROM_STATUS
	{
		FLOATELECTROM_STATUS_NONE,
		FLOATELECTROM_STATUS_ATTACK,
		FLOATELECTROM_STATUS_REINFORCE,
		FLOATELECTROM_STATUS_COUNTERSTROKE,
	};
	////////////////////////////////////////////////////////////////
	//玩家部件位置的掩码
	enum USER_WEAKNESS
	{
		USER_WEAKNESS_OUTER_THRUSTOR = 0x00000001,
		USER_WEAKNESS_OUTER_DODGING  = 0x00000002,
		USER_WEAKNESS_OUTER_DEFENDER = 0x00000004,
		USER_WEAKNESS_INNER_ENGINE   = 0x00000008,
		USER_WEAKNESS_INNER_ENPACK   = 0x00000010,
		USER_WEAKNESS_INNER_ENERGYGENERATOR = 0x00000020,	
	};
//////////////////////////////////////////////////////////////////////
// 怪物弱点的掩码 tcp 2006.11.
enum MONSTER_WEAKNESS
{
	MONSTER_WEAKNESS_MOVE  = 0x00000001,
	MONSTER_WEAKNESS_TURN  = 0x00000002,
	MONSTER_WEAKNESS_POWER = 0x00000004,
	MONSTER_WEAKNESS_ALL   = MONSTER_WEAKNESS_MOVE|MONSTER_WEAKNESS_TURN|MONSTER_WEAKNESS_POWER,
};


enum BATTLESIDE_TYPE
{
	BATTLESIDE_NONE,
	BATTLESIDE_MONSTER = 1,
	BATTLESIDE_USER,         //包含玩家和主侍卫
	//BATTLESIDE_MAGIC,
};

	enum EXCHANG_TYPE{EXCHANG_TYPE_STONE2_TO_STONE1=0,EXCHANG_TYPE_STONE2_TO_STONE0,EXCHANG_TYPE_STONE1_TO_STONE0};//星魂石交换 tcp 2007-4-17 

	enum EXP_ADJ_TYPE
	{
		TEAMXP_EXP_ADJ,
		TEAMXP_EXP_MEDICINE,
		TEAMXP_EXP_GEM,
	};


enum
{
	TEAMEXP_ORDER_BASE,				//基础经验
	TEAMEXP_ORDER_VIP,				//军校联盟徽章
	TEAMEXP_ORDER_STAR,				//战斗力星级怪
	TEAMEXP_ORDER_SUPPORT,			//状态树奖励
	TEAMEXP_ORDER_MEDICINE,			//经验药水	
	TEAMEXP_ORDER_CRYSTAL,			//经验水晶
	TEAMEXP_ORDER_NUM,
};

enum{
	TEAM_ROLEPLAYING_NONE = -1,
	TEAM_ROLEPLAYING_ATTACKER = 0,	//攻击者
	TEAM_ROLEPLAYING_TANK,			//肉盾
	TEAM_ROLEPLAYING_HEALER,		//治疗者
	TEAM_ROLEPLAYING_INSPIRER,		//鼓舞者
};

	enum 
	{
		TEAM_DEF_SHARE,
		TEAM_HIGHLEV_SHARE,
		TEAM_BATTLE_SHARE,
	};
	enum
	{
		TEAM_EVENT_SHARE,
		TEAM_EVENT_REBORN,
		TEAM_EVENT_DIE,
	};
	enum
	{
		FAMILY_BATTLESHARE_LIMIT,
		BROTHER_BATTLESHARE_LIMIT,	
	};
	enum
	{
		MAIN_SPIRIT,
		LEFT_SPIRIT,
		RIGHT_SPIRIT,
	};
	enum 
	{
		PACKET_BAG,
		PACKET_GENAKOO_COMMON,
		PACKET_GENAKOO_CAGE,
		PACKET_GENAKOO_REST,
	};

enum TUTOR_AWARD_TYPE
{
	TUTOR_AWARD_TYPE_GOD_TIME,
	TUTOR_AWARD_TYPE_UPLEVTIME,
	TUTOR_AWARD_TYPE_SPIRIT,
	TUTOR_AWARD_TYPE_EXP,
	TUTOR_AWARD_TYPE_MAX,
};

enum TUTOR_MEMBER_TYPE
{
	MEMBER_TUTOR_TYPE,
	MEMBER_STUDENT_TYPE,
	MEMBER_SUBSTUDENT_TYPE, 
};


enum {
	FAMILY_RANK_SHAIKH	= 100,		// 族长
	FAMILY_RANK_MATE	= 50,		// 配偶
	FAMILY_RANK_MEMBER	= 10,		// 成员
	FAMILY_RANK_NONE	= 0,
};

enum TEAMATTR
{
	TEAM_LEADER_ID,
	TEAM_MEMBER_COUNT,
	TEAM_SHARE_MONEY,
	TEAM_SHARE_ITEM,
	
};

enum SPIRITATTR
{
	_SPIRITATTRIB_POWER						= 1,		// 发动机当前功率值
	_SPIRITATTRIB_EN							= 2,	// 当前En值(En仓当前的En值)
	_SPIRITATTRIB_KEEPEFFECT					= 26,
	_SPIRITATTRIB_EXP						= 35,	// 机体经验
	_SPIRITATTRIB_LEV						= 36,	// 机体等级
	_SPIRITATTRIB_FUEL						= 56,		// 燃料
	_SPIRITATTRIB_GENERATOR					= 63,	// 能量场发生器能量
	
	_SPIRITATTRIB_MODEL_LEV					= 69,
	_SPIRITATTRIB_NIMBUS						= 70,   // 灵气
	_SPIRITATTRIB_NIMBUSUSAGE				= 71,	// 灵气增加次数	
	_SPIRITATTRIB_SYNDICATEID				= 76,   // 机体舰队ID

	_SPIRITATTRIB_HAIR                       = 80,   //侍卫发型
	
	_SPIRITATTRIB_LIFE						= 107,
	
	_SPIRITATTRIB_MAXLIFE					= 300,
	_SPIRITATTRIB_MAXMANA					= 301,
	_SPIRITATTRIB_MAXFUEL					= 302,
	
	_SPIRITATTRIB_GUARDSKILL_BEGIN			= 351,
	_SPIRITATTRIB_GUARDSKILL1				= 351,
	_SPIRITATTRIB_GUARDSKILL2				= 352,
	_SPIRITATTRIB_GUARDSKILL3				= 353,
	_SPIRITATTRIB_GUARDSKILL4				= 354,
	_SPIRITATTRIB_GUARDSKILL5				= 355,
	_SPIRITATTRIB_GUARDSKILL6				= 356,
	_SPIRITATTRIB_GUARDSKILL7				= 357,
	_SPIRITATTRIB_GUARDSKILL8				= 358,
	_SPIRITATTRIB_GUARDSKILL_END			= 400,

	_SPIRITATTRIB_PROFESSION_LEV            = 500,   //职业等级
	_SPIRITATTRIB_PROFESSION_EXP            = 501,   //职业经验值

	_SPIRITATTRIB_MAX_SPEED                 = 601,   //移动速度

	_SPIRITATTRIB_MAX_UNDERWATER_SPEED      = 602,   //水下移动速度


	_SPIRITATTRIB_LOAD						= 401,	//挖掘负重
	
	_SPIRITATTRIB_NONE	= 65535,			// 非法值
};

enum MONSTEREXPDATA
{
	MONSTEREXPDATA_ID_,
	MONSTEREXPDATA_MONSTERSORT,				//怪物sort类型，对应cq_monster表的sort字段
	MONSTEREXPDATA_LEVEL,					//怪物图鉴等级
	MONSTEREXPDATA_MONSTEREXP,				//达到该图鉴等级需要的图鉴经验值
};

//技能类型定义（末日危机游戏。在服务端用于标示一个具体的技能类型，
//如MAGICKIND_ICE_BALL=xxx，表示寒冰球这种技能，xxx请根据与magictype表中数据对应的关系赋值）
enum MAGICKIND
{
	MAGICKIND_NONE						= 0,

	//连招技能
	MAGICKIND_HAMMER_LIGHT1 = 30500100,
	MAGICKIND_HAMMER_LIGHT2 = 30500301,
	MAGICKIND_HAMMER_LIGHT3 = 30500302,
	MAGICKIND_HAMMER_LIGHT4 = 30500303,

	MAGICKIND_HAMMER_HEAVY1 = 30500000,
	MAGICKIND_HAMMER_HEAVY2 = 30500201,
	MAGICKIND_HAMMER_HEAVY3 = 30500202,
	MAGICKIND_HAMMER_HEAVY4 = 30500203,
	MAGICKIND_HAMMER_HEAVY5 = 30500204,

	MAGICKIND_AX_LIGHT1 = 30300100,
	MAGICKIND_AX_LIGHT2 = 30300301,
	MAGICKIND_AX_LIGHT3 = 30300302,
	MAGICKIND_AX_LIGHT4 = 30300303,

	MAGICKIND_AX_HEAVY1 = 30300000,
	MAGICKIND_AX_HEAVY2 = 30300201,
	MAGICKIND_AX_HEAVY3 = 30300202,
	MAGICKIND_AX_HEAVY4 = 30300203,
	MAGICKIND_AX_HEAVY5 = 30300204,

	MAGICKIND_BARE_HANDER_LIGHT1 = 30000100,
	MAGICKIND_BARE_HANDER_LIGHT2 = 30000301,
	MAGICKIND_BARE_HANDER_LIGHT3 = 30000302,
	MAGICKIND_BARE_HANDER_LIGHT4 = 30000303,

	MAGICKIND_BARE_HANDER_HEAVY1 = 30000000,
	MAGICKIND_BARE_HANDER_HEAVY2 = 30000201,
	MAGICKIND_BARE_HANDER_HEAVY3 = 30000202,
	MAGICKIND_BARE_HANDER_HEAVY4 = 30000203,
	MAGICKIND_BARE_HANDER_HEAVY5 = 30000204,

	MAGICKIND_FISTS_LIGHT1 = 30700100,
	MAGICKIND_FISTS_LIGHT2 = 30700301,
	MAGICKIND_FISTS_LIGHT3 = 30700302,
	MAGICKIND_FISTS_LIGHT4 = 30700303,

	MAGICKIND_FISTS_HEAVY1 = 30700000,
	MAGICKIND_FISTS_HEAVY2 = 30700201,
	MAGICKIND_FISTS_HEAVY3 = 30700202,
	MAGICKIND_FISTS_HEAVY4 = 30700203,
	MAGICKIND_FISTS_HEAVY5 = 30700204,

	MAGICKIND_DOUBLE_HANDED_BROADSWORDS_LIGHT1 = 30100100,
	MAGICKIND_DOUBLE_HANDED_BROADSWORDS_LIGHT2 = 30100301,
	MAGICKIND_DOUBLE_HANDED_BROADSWORDS_LIGHT3 = 30100302,
	MAGICKIND_DOUBLE_HANDED_BROADSWORDS_LIGHT4 = 30100303,

	MAGICKIND_DOUBLE_HANDED_BROADSWORDS_HEAVY1 = 30100000,
	MAGICKIND_DOUBLE_HANDED_BROADSWORDS_HEAVY2 = 30100201,
	MAGICKIND_DOUBLE_HANDED_BROADSWORDS_HEAVY3 = 30100202,
	MAGICKIND_DOUBLE_HANDED_BROADSWORDS_HEAVY4 = 30100203,
	MAGICKIND_DOUBLE_HANDED_BROADSWORDS_HEAVY5 = 30100204,

	MAGICKIND_TWO_HANDED_SWORD_LIGHT1 = 30200100,
	MAGICKIND_TWO_HANDED_SWORD_LIGHT2 = 30200301,
	MAGICKIND_TWO_HANDED_SWORD_LIGHT3 = 30200302,
	MAGICKIND_TWO_HANDED_SWORD_LIGHT4 = 30200303,

	MAGICKIND_TWO_HANDED_SWORD_HEAVY1 = 30200000,
	MAGICKIND_TWO_HANDED_SWORD_HEAVY2 = 30200201,
	MAGICKIND_TWO_HANDED_SWORD_HEAVY3 = 30200202,
	MAGICKIND_TWO_HANDED_SWORD_HEAVY4 = 30200203,
	MAGICKIND_TWO_HANDED_SWORD_HEAVY5 = 30200204,

	MAGICKIND_LONG_STAFF_LIGHT1 = 30400100,
	MAGICKIND_LONG_STAFF_LIGHT2 = 30400301,
	MAGICKIND_LONG_STAFF_LIGHT3 = 30400302,
	MAGICKIND_LONG_STAFF_LIGHT4 = 30400303,

	MAGICKIND_LONG_STAFF_HEAVY1 = 30400000,
	MAGICKIND_LONG_STAFF_HEAVY2 = 30400201,
	MAGICKIND_LONG_STAFF_HEAVY3 = 30400202,
	MAGICKIND_LONG_STAFF_HEAVY4 = 30400203,
	MAGICKIND_LONG_STAFF_HEAVY5 = 30400204,

	MAGICKIND_TUMBLE = 40000002,
	//程序自定义技能（无magictype数据）
	MAGICKIND_CUSTOM_RANGE = 1000,	//程序自定义技能请小于此值
	MAGICKIND_IGNITE = 10,	//燃烧技能 TQD16910【末日危机】关于燃烧爆炸的设计总案

	//服务端用于测试的技能类型
	MAGICKIND_TEST = 199,
	MAGICKIND_TEST2 = 30100100,
	MAGICKIND_TEST3 = 30100201,
};

// 以下是吸血鬼代码中的技能类型定义值，应该删除 2010-01-30
//////////////////////////////////////////////////////////////////////
enum MAGICSORT
{
		MAGICSORT_NONE				= 0,
		MAGICSORT_KICKBACK			= 1,			// 击退  	
 		MAGICSORT_KICKDOWN			= 2,			// 击倒
		MAGICSORT_KICKFLYAWAY		= 3,			// 击飞
		MAGICSORT_FAN				= 4,			// support auto active(random).
		MAGICSORT_BOMB				= 5,
		MAGICSORT_ATTACHSTATUS		= 6,
		MAGICSORT_DETACHSTATUS		= 7,
		MAGICSORT_SQUARE			= 8,
		MAGICSORT_JUMPATTACK		= 9,			// move, a-lock
		MAGICSORT_RANDOMTRANS		= 10,			// move, a-lock
		MAGICSORT_DISPATCHXP		= 11,
		MAGICSORT_COLLIDE			= 12,			// move, a-lock & b-synchro
		MAGICSORT_SERIALCUT			= 13,			// auto active only.
		MAGICSORT_LINE				= 14,			// support auto active(random).
		MAGICSORT_ATKRANGE			= 15,			// auto active only, forever active.
		MAGICSORT_ATKSTATUS			= 16,			// support auto active, random active.
		MAGICSORT_CALLTEAMMEMBER	= 17,
		MAGICSORT_RECORDTRANSSPELL	= 18,
		MAGICSORT_TRANSFORM			= 19,
		MAGICSORT_ADDMANA			= 20,			// support self target only.
		MAGICSORT_LAYTRAP			= 21,
		MAGICSORT_DANCE				= 22,			// 跳舞(only use for client)
		MAGICSORT_CALLPET			= 23,			// 召唤兽
		MAGICSORT_VAMPIRE			= 24,			// 吸血，power is percent award. use for call pet
		MAGICSORT_INSTEAD			= 25,			// 替身. use for call pet
		MAGICSORT_DECLIFE			= 26,			// 扣血(当前血的比例)
		MAGICSORT_GROUNDSTING		= 27,			// 地刺
		// jz
		MAGICSORT_NORMAL			= 100,			// 普通单体攻击等
		MAGICSORT_EXPLODE			= 101,			// 死后爆炸
		MAGICSORT_DOUBLE			= 103,			// 会心一击
		MAGICSORT_MORTAL			= 104,			// 一击必杀
		MAGICSORT_FINAL				= 105,			// 终结技
		MAGICSORT_EXTREMITY			= 106,			// 绝命技
		MAGICSORT_STATUS			= 107,			// 附加状态
		MAGICSORT_DESTROY			= 108,			// 破坏装备
		MAGICSORT_LOOP	 			= 109,			// 循环攻击
		MAGICSORT_STEAL				= 110,			// 偷
		MAGICSORT_BEATBACK			= 111,			// 打退
		MAGICSORT_SELFBACK			= 112,			// 自退
		MAGICSORT_WOUND				= 113,			// 打伤后增加自己属性
		MAGICSORT_KILL				= 114,			// 打死后增加自己属性
		MAGICSORT_ADD				= 115,			// 攻击附加
		MAGICSORT_DEFENCE_INVALID	= 117,			// 无视防御
		MAGICSORT_REBORN			= 118,			// 复活
		MAGICSORT_ADD_RANGE			= 119,			// 范围攻击
		MAGICSORT_AIR				= 120,			// 空地属性
		MAGICSORT_DROP_MAPITEM		= 121,			// 增加掉物品的概率
		MAGICSORT_DROP_MONEY		= 122,			// 增加掉钱的概率
		MAGICSORT_DROP_STONE		= 123,			// 增加掉原石的概率
		MAGICSORT_DROP_EXP			= 124,			// 增加掉经验的概率
		MAGICSORT_ONRUSH			= 125,			// 突进技能
		MAGICSORT_CANNONFIREOVERCAST= 126,			// 炮火覆盖
		MAGICSORT_CLOSETODIE		= 127,			// 濒死技能
		MAGICSORT_FUELERASER		= 128,			// 燃料杀灭
		MAGICSORT_ENERGYERASER		= 129,			// En杀灭
		MAGICSORT_BURNWALLAMMO		= 130,			// 燃烧弹
		MAGICSORT_INJURESELF		= 131,			// 自伤
		MAGICSORT_BODYBLAST			= 132,			// 尸爆
		MAGICSORT_CURE				= 134,			// 治疗
		MAGICSORT_RECOVERHP			= 135,			// HP回复
		MAGICSORT_DRAWCLOSE			= 136,			// 拉近
		MAGICSORT_ADDITIONINJURE	= 137,			// 低伤害，高伤害
		MAGICSORT_CAPTURE			= 138,			// 捕获
		MAGICSORT_RETALIATEUPON		= 139,			// 还击
		MAGICSORT_SHIELDSKILL		= 140,			// 盾技能
		MAGICSORT_SHIELDSKILL1		= 141,			// 盾技能1
		MAGICSORT_SHIELDSKILL2		= 142,			// 盾技能2
		MAGICSORT_SHIELDSKILL3		= 143,			// 盾技能3
		MAGICSORT_SEARCHBODY		= 144,			// 搜索
		MAGICSORT_IMPACT			= 145,			// 撞击
		MAGICSORT_SELFBLAST1		= 146,			// 自爆1
		MAGICSORT_SELFBLAST2		= 147,			// 自爆2
		MAGICSORT_SELFBLAST3		= 148,			// 自爆3
		MAGICSORT_MINESWEEPING		= 150,			// 拆雷			
		MAGICSORT_INTERLINK			= 151,			// 连环
		MAGICSORT_INTERLINKFORCE	= 152,			// 连环附属加强第一击威力技能
		MAGICSORT_INTERLINKFAINT	= 153,			// 连环附属最后一击晕技能
		MAGICSORT_INTERLINKEXTRA	= 154,			// 连环附属增加攻击次数技能
		MAGICSORT_COUNTERSTRICK		= 155,			// 反击
		MAGICSORT_COUNTERSTRICKFORCE= 157,			// 反击附属增强威力 被动
		MAGICSORT_COUNTERSTRICKLIGHT= 158,			// 反击附属增强威力 主动
		MAGICSORT_RETALIATEUPONCURSE= 159,			// 还击附属 诅咒
		MAGICSORT_RETALIATEUPONBLAST= 160,			// 还击附属 自爆
		MAGICSORT_THROWENEMY		= 161,			// 投技
		MAGICSORT_THROWENEMYDOUBLE	= 162,			// 投技附属会心一击
		MAGICSORT_MULTISELECTENEMY	= 163,			// 多目标指定
		MAGICSORT_CENTERINJURE		= 164,			// 中心伤害
		MAGICSORT_ENSKILLMASTER		= 166,			// En消耗减少
		MAGICSORT_POISONRANGE		= 167,			// 毒环
		MAGICSORT_POISONRANGE_ADD	= 168,			// 毒环附属 增加范围
		MAGICSORT_POISONRANGE_POWER	= 169,			// 毒环附属 增加比例
		MAGICSORT_POISONRANGE_DANGE	= 170,			// 毒环附属 自伤
		MAGICSORT_ADJUSTTOGETHER	= 171,			// 调和
		MAGICSORT_KILLLINEUP		= 172,			// 杀阵
		MAGICSORT_KILLLINEUP1		= 173,			// 杀阵附属1
		MAGICSORT_KILLLINEUP2		= 174,			// 杀阵附属2
		MAGICSORT_CRAZYFIGHTER		= 175,			// 狂战士
		MAGICSORT_CRAZYFIGHTER_POWER= 176,			// 狂战士附属技能 真・狂战士		
		MAGICSORT_CRAZYFIGHTER_TIME	= 177,			// 狂战士附属技能 延长时间
		MAGICSORT_CRAZYFIGHTER_HP	= 178,			// 狂战士附属技能 Hp回复
		MAGICSORT_CRAZYFIGHTER_TIME2= 179,			// 狂战士附属技能 受击延长时间
		MAGICSORT_KILLLINEUP3		= 180,			// 杀阵附属3 全体攻击
//		MAGICSORT_FLAMETHROWER		= 181,			// 火焰喷射 移动攻击
		MAGICSORT_HOTBURN			= 182,			// 高温灼烧
		MAGICSORT_ICE				= 183,			// 冷冻
		MAGICSORT_SHAKE				= 184,			// 震荡
		MAGICSORT_REPARE_XP			= 185,			// 维修XP技能
		MAGICSORT_RETURNSTAR		= 186,			// 回旋星斩
		MAGICSORT_SHOTGUN_XP		= 187,			// 霰弹枪XP tcp 2007-3-5 add
		
		MAGICSORT_CHAOS				= 188,			//混乱技能
		MAGICSORT_SINGLE_IMPACT		= 189,			//单人冲击技能
		
		MAGICSORT_FULLSCREEN_ATK_BEGIN=190,			//全屏轰炸的sort值为190～199
		MAGICSORT_FULLSCREEN_ATK_NORMAL	= MAGICSORT_FULLSCREEN_ATK_BEGIN,//普通全屏轰炸攻击
		MAGICSORT_FULLSCREEN_ATK_HOT,				// 高温全屏轰炸攻击
		MAGICSORT_FULLSCREEN_ATK_ICE,				// 冰冻全屏轰炸攻击
		MAGICSORT_FULLSCREEN_ATK_SHAKE,				// 振荡全屏轰炸攻击
		MAGICSORT_FULLSCREEN_ATK_ICE_SHAKE,			// 冰冻+振荡全屏轰炸
		MAGICSORT_FULLSCREEN_ATK_END=199,			// 
		MAGICSORT_RECOVERY          = 200,          //初级加防
		
		MAGICSORT_INCEXP_DECATK		= 211,			// 经验值增加、攻击力下降状态
		MAGICSORT_INCEXP_DECDEF		= 212,			// 经验值增加、防御下降状态
		MAGICSORT_BAITMONSTER		= 220,			// 引诱怪物技能
		MAGICSORT_SUDDENMOVEATTACK	= 221,			// 瞬移攻击技能
		
//		MAGICSORT_CREATE_MAP_DOMAIN_START	= 222,	//创建地图领域技能开始
		MAGICSORT_CREATE_MAP_DOMAIN_END		= 224,	//创建地图领域技能结束
//		MAGICSORT_CREATE_REGION_DOMAIN_START = 225,	//创建区域领域技能开始
		
//		MAGICSORT_DOMAIN_DEC_DAMAGE			 = 226, //领域内伤害减少技能
//		MAGICSORT_DOMAIN_HP					 = 227,//hp领域

		MAGICSORT_CREATE_REGION_DOMAIN_END	 = 599,	//创建区域领域技能结束

		MAGICSORT_CONTROL_DOMAIN	= 229,			//操控领域技能
		
		MAGICSORT_HOT_ATTACK		= 230,			// 火焰属性 tcp 2007-3-22 add
		MAGICSORT_COLD_ATTACK		= 231,			// 冰冻属性 tcp 2007-3-22 add
		MAGICSORT_SAHKE_ATTACK		= 232,			// 震荡属性 tcp 2007-3-22 add		
		
		MAGICSORT_PK_BEATBACK		= 234,			// 特殊PK技能-冲撞打飞技能
		MAGICSORT_CONJURE_DEVIL     = 235,

		MAGICSORT_CURSE				= 251,			//玩家诅咒技能
		MAGICSORT_REINFORCE			= 252,			// 援助攻击

		MAGICSORT_HURT			    = 253,			// 吸血鬼技能刺击（流血）
		MAGICSORT_HEMO_LOP			= 254,			// 吸血鬼技能血斩（流血）
		MAGICSORT_Z_LOP			    = 255,			// 吸血鬼技能Z字斩（流血）
		MAGICSORT_HEMO_SHADOW		= 256,			// 血族战士技能-血影步
		MAGICSORT_CHARGE    		= 257,			// 神圣冲锋
		MAGICSORT_CHGAMMO    		= 258,			// 换弹

		

		MAGICSORT_CALL_ALTAR		= 261,			//召唤祭坛
		MAGICSORT_WORSHIP			= 262,			//献祭
		MAGICSORT_CATCH				= 263,			//献祭抓捕
		MAGICSORT_CATCH_WORSHIP		= 264,			//抓捕献祭

		MAGICSORT_DODGE				= 265,			//分身躲避技能

		MAGICSORT_FLY				= 270,			//飞行技能

		MAGICSORT_TEAM_IMPACT		= 280,			//组队冲击技能
		//怪物专用
		MAGICSORT_REVIVISCENCE		= 300,			// 重生，损伤时变身为另一个怪物，怪物专用  power和data字段分别代表怪物会变成的两种怪物ID（各50%几率，如填0则无），percent字段则为怪物死亡后变身的概率
		MAGICSORT_TRANSFER			= 301,			// 怪物使用该技能时，会使目标玩家被传送至该技能设定好的地图坐标点上

		MAGICSORT_SANSTORM			= 310,			// 神圣风暴
		MAGICSORT_VELOCITY_SOUND	= 311,			// 音速攻击
		MAGICSORT_SOUL_LIGHTNING	= 312,			// 灵魂闪电
		MAGICSORT_SAN_BEAT			= 313,			// 神圣打击
		MAGICSORT_BLOOD_SHAKE		= 314,			// 鲜血震击
		MAGICSORT_REVENAGE_SHIELD	= 315,			// 复仇之盾
		MAGICSORT_SAN_SHIELD_BEAT	= 316,			// 神圣盾击
		MAGICSORT_GROUP_CURE		= 317,			//人类游侠群体治疗
		MAGICSORT_SINGLE_CURE		= 318,			//人类游侠单体治疗
		
		//全地图全员减伤害领域
		MAGICSORT_DOMAIN_DEC_MAXHP    = 463,
		MAGICSORT_WHOLEMAP_DEC_DAMAGE = 468,

		MAGICSORT_DOMAIN_BEGIN		= 400,			//领域技能开始
		MAGICSORT_DOMAIN_DEC_DAMAGE = 420,			//领域内伤害减少技能
		MAGICSORT_DOMAIN_HP			= 421,			//hp领域
		MAGICSORT_CREATE_MAP_DOMAIN_START = 422,	//总案
		MAGICSORT_CREATE_REGION_DOMAIN_START = 423, //
		MAGICSORT_REGION_FORBID_RESTORE_HP	 = 424, ////全员禁止HP回复区域结界
		MAGICSORT_DOMAIN_WHOLEMAP_SYNDIACTE_HP = 425,//全地图帮派HP结界
		MAGICSORT_DOMAIN_WHOLEMAP_TEAM_HP = 426, //全地图队伍HP结界
        
		//
		//180
		//181
		MAGICSORT_DOMAIN_FIELD_NO_ENERGY_RECORY = 440,			//
		MAGICSORT_DOMAIN_FIELD_NO_HP_RECOVER,					// 区域		禁止Hp回复
		MAGICSORT_DOMAIN_FIELD_ADD_DAMAGE,						// 区域		加伤害
		MAGICSORT_DOMAIN_MAP_TEAM_ADD_DAMAGE,					// 全地图	队伍加伤害
		MAGICSORT_DOMAIN_REGION_DAYTIME	= 480,			// 白天区域领域技能

		MAGICSORT_DOMAIN_WHOLEMAP_FAMILY_INCDAMAGE = 500,    //全地图家族加伤害
        MAGICSORT_DOMAIN_FIELD_NO_MOVE ,				     //区域禁止瞬移
		MAGICSORT_DOMAIN_FIELD_DECDAMAGE ,				     //区域减少伤害
		MAGICSORT_DOMAIN_FIELD_NO_JUMP ,				     //区域禁止跳跃
		MAGICSORT_DOMAIN_WHOLEMAP_TEAMEXP ,				     //全地图队伍经验值
		MAGICSORT_DOMAIN_WHOLEMAP_FAMILYEXP ,				 //全地图家族经验值
		MAGICSORT_DOMAIN_WHOLEMAP_TEAMINCDAMAGE ,		     //全地图队伍加伤害
		MAGICSORT_DOMAIN_FIELD_INCDAMAGE ,		             //区域全员加伤害
		MAGICSORT_DOMAIN_WHOLEMAP_SYNDECDAMAGE ,		    //全地图帮派成员减伤害
		MAGICSORT_DOMAIN_WHOLEMAP_FAMILYDECDAMAGE ,		    //全地图家族减伤害


		//领域技能（400 ~ 599）
		//MAGICSORT_REGION_DAMAGE					= 72,	//法宝的区域范围全员伤害结界
		//MAGICSORT_REGION_BATTLEEFFECT				= 73,	//法宝-战斗力区域结界
		//MAGICSORT_REGION_BE_DAMAGE					= 74,	//法宝的区域范围全员被伤害结界
		MAGICSORT_REGION_ADD_HP					= 404,	//法宝的区域范围全员HP结界
		//MAGICSORT_REGION_ANTI_HOT					= 76,	//法宝的区域结界高温抗性
		//MAGICSORT_REGION_ANTI_ICE					= 77,	//法宝的区域结界冰冻抗性
		//MAGICSORT_REGION_ANTI_SHAKE				= 78,	//法宝的区域结界震荡抗性
		
		//MAGICSORT_REGION_FORBID_RESTORE_HP			= 79,	//全员禁止HP回复区域结界
		//MAGICSORT_REGION_FORBID_RESTORE_POWER		= 80,   //全员禁止功率恢复区域结界		
		MAGICSORT_REGION_FORBID_RESTORE_EN			= 406,	//全员禁止恢复EN区域区域结界
		//MAGICSORT_REGION_FORBID_RESTORE_THRUSTER   = 82,   //全员禁止动力恢复域区结界		
		//MAGICSORT_REGION_FORBID_RESTORE_DEF		= 83,	//全员禁止磁能恢复区域结界
		//MAGICSORT_REGION_FORBID_TRANS_POS			= 84,   //法宝-区域禁止瞬移结界
		//MAGICSORT_REGION_FORBID_JUMP				= 87,	//法宝-区域全员禁止跳跃结界		
		//MAGICSORT_REGION_RESTORE_XP_SPEED			= 92,   //法宝-区域范围全员XP恢复速度结界	
		
		//MAGICSORT_ANTI_REGION_FORBID_JUMP				= 113,	//法宝-无视区域全员禁止跳跃结界	
		//MAGICSORT_ANTI_REGION_FORBID_RESTORE_HP		= 115,  //法宝的无视HP禁止回复
		//MAGICSORT_ANTI_REGION_FORBID_RESTORE_EN		= 116,	//法宝-无视禁止恢复EN区域结界
		//MAGICSORT_ANTI_REGION_FORBID_RESTORE_POWER	    = 117,	//法宝-无视禁止功率恢复区域结界
		//MAGICSORT_ANTI_REGION_FORBID_RESTORE_THRUSTER  = 118,  //法宝-无视禁止动力恢复区域结界		
		//MAGICSORT_ANTI_REGION_FORBID_RESTORE_DEF		= 119,	//法宝-无视禁止磁能恢复区域结界	
		
		MAGICSORT_WHOLEMAP_ADD_EXP					= 401, //法宝-全地图全员经验值结界
		MAGICSORT_WHOLEMAP_SYNDIACTE_ADD_EXP		= 402,  //法宝-全地图舰队经验值结界
		//MAGICSORT_WHOLEMAP_TEAM_ADD_EXP			= 102,  //法宝-全地图队伍经验值结界
		//MAGICSORT_WHOLEMAP_FAMILY_ADD_EXP			= 103,	//法宝-全地图家族经验值结界
		
		//MAGICSORT_WHOLEMAP_HP						= 1Ui64 << 63;  //法宝-全地图全员HP结界
		//MAGICSORT_WHOLEMAP_SYNDIACTE_HP			= 161,  //法宝-全地图舰队HP结界
		 MAGICSORT_DOMAIN_WHOLEMAP_FAMILY_HP		= 521,	//法宝-全地图家族HP结界
		//MAGICSORT_WHOLEMAP_TEAM_HP					= 163,  //法宝-全地图队伍HP结界		
		MAGICSORT_DOMAIN_FIELD_ADD_DEAD_TIME		= 451,//法宝-区域增加死亡时间	
		MAGICSORT_WHOLEMAP_ADD_DAMAGE				= 403,	//法宝的全地图全员加伤害结界
		MAGICSORT_WHOLEMAP_SYNDIACTE_ADD_DAMAGE		= 405,	//法宝的全地图舰队加伤害结界
		//MAGICSORT_WHOLEMAP_TEAM_ADD_DAMAGE			= 166,	//法宝的全地图队伍加伤害结界
		//MAGICSORT_WHOLEMAP_FAMILY_ADD_DAMAGE		= 167,	//法宝的全地图家族加伤害结界
		//MAGICSORT_WHOLEMAP_DEC_DAMAGE				= 168,	//法宝的全地图全员减伤害结界
		//MAGICSORT_WHOLEMAP_SYNDIACTE_DEC_DAMAGE	= 169,	//法宝的全地图舰队减伤害结界
		//MAGICSORT_WHOLEMAP_TEAM_DEC_DAMAGE			= 170,	//法宝的全地图队伍减伤害结界
		//MAGICSORT_WHOLEMAP_FAMILY_DEC_DAMAGE		= 171,	//法宝的全地图家族减伤害结界
		
		//MAGICSORT_WHOLEMAP_ANTI_HOT				= 172,	//法宝-全地图全员高温抗性结界		
		//MAGICSORT_WHOLEMAP_SYNDIACTE_ANTI_HOT		= 173,	//法宝-全地图帮派高温抗性结界				
		//MAGICSORT_WHOLEMAP_TEAM_ANTI_HOT			= 174,	//法宝-全地图队伍高温抗性结界		
		//MAGICSORT_WHOLEMAP_FAMILY_ANTI_HOT			= 175,	//法宝-全地图家族高温抗性结界		
		
		//MAGICSORT_WHOLEMAP_ANTI_ICE				= 176,	//法宝-全地图全员冰冻抗性结界		
		//MAGICSORT_WHOLEMAP_SYNDIACTE_ANTI_ICE		= 177,	//法宝-全地图帮派冰冻抗性结界				
		//MAGICSORT_WHOLEMAP_TEAM_ANTI_ICE			= 178,	//法宝-全地图队伍冰冻抗性结界		
		
		//MAGICSORT_WHOLEMAP_ANTI_SHAKE				= 180,	//法宝-全地图全员震荡抗性结界				
		//MAGICSORT_WHOLEMAP_SYNDIACTE_ANTI_SHAKE	= 181,	//法宝-全地图帮派震荡抗性结界		
		//MAGICSORT_WHOLEMAP_TEAM_ANTI_SHAKE			= 182,	//法宝-全地图队伍震荡抗性结界
		//MAGICSORT_WHOLEMAP_FAMILY_ANTI_SHAKE		= 183,	//法宝-全地图家族震荡抗性结界
		MAGICSORT_DOMAIN_END		= 600,			//

		MAGICSORT_SHADOWMBOMB						= 611,	//暗影炸弹
		MAGICSORT_WHIRLWIND							= 612,	//旋风斩
		MAGICSORT_CHGMAGAZINE						= 613,	//交替换弹
		MAGICSORT_AIMSHOOT							= 614,	//瞄准射击
		MAGICSORT_SHADOWMISSILE						= 615,	//暗影飞弹
		MAGICSORT_EXPLODE_FIREBALL					= 616,	//爆裂火球
		MAGICSORT_BLOOD_LOP							= 617,	//血气斩（流血）
		MAGICSORT_THREETIMES_LOP					= 618,	//三重斩（流血）
		MAGICSORT_RANDSWORD_ASSAULT					= 619,  //乱刃突击
		MAGICSORT_ICE_BALL							= 620,	//寒冰球
		MAGICSORT_THROWOBJ							= 621,	//投掷物品
		MAGICSORT_INSPIRER_ADDMONEY					= 622,	//鼓舞者增加金币获取
		MAGICSORT_INSPIRER_ADDDAMAG					= 623,	//鼓舞者增加伤害效果
		MAGICSORT_INSPIRER_DECATTACK				= 624,  //鼓舞者降低攻击效果
		MAGICSORT_INSPIRER_ADDEXP					= 625,	//鼓舞者增加经验获取
		MAGICSORT_INSPIRER_REMOVE_BADSTATE			= 626,	//鼓舞者解除不良状态
		MAGICSORT_HEALER_PALA_GROUP_CURE			= 627,	//人类骑士群体治疗
		MAGICSORT_HEALER_PALA_SINGLE_CURE			= 628,	//人类骑士单体治疗
		MAGICSORT_HEALER_MAGE_SINGLE_CURE			= 629,	//血族法师单体治疗
		MAGICSORT_HEALER_MAGE_GROUP_CURE			= 630,	//血族法师群体治疗
		MAGICSORT_HEALER_MAGE_STEAL_LIFE			= 631,	//血族法师偷取生命
		MAGICSORT_TEAM_SIGNROLE						= 632,	//队长标记怪物技能
		MAGICSORT_TRANSFORM_BEGIN = 10000,			// 变形技能开始编号
};

enum MAGICTYPE
{
	
	MAGICTYPE_GROUP_CURE						= 317,			//人类游侠群体治疗
	MAGICTYPE_SINGLE_CURE						= 318,			//人类游侠单体治疗	
	MAGICTYPE_INSPIRER_ADDMONEY					= 622,	//鼓舞者增加金币获取
	MAGICTYPE_INSPIRER_ADDDAMAG					= 623,	//鼓舞者增加伤害效果
	MAGICTYPE_INSPIRER_DECATTACK				= 624,  //鼓舞者降低攻击效果
	MAGICTYPE_INSPIRER_ADDEXP					= 625,	//鼓舞者增加经验获取
	MAGICTYPE_INSPIRER_REMOVE_BADSTATE			= 626,	//鼓舞者解除不良状态
	MAGICTYPE_HEALER_PALA_GROUP_CURE			= 627,	//人类骑士群体治疗
	MAGICTYPE_HEALER_PALA_SINGLE_CURE			= 628,	//人类骑士单体治疗
	MAGICTYPE_HEALER_MAGE_SINGLE_CURE			= 629,	//血族法师单体治疗
	MAGICTYPE_HEALER_MAGE_GROUP_CURE			= 630,	//血族法师群体治疗
	MAGICTYPE_HEALER_MAGE_STEAL_LIFE			= 631,	//血族法师偷取生命
	MAGICTYPE_CHGMAGAZINE						= 1103,	//交替换弹
	MAGICTYPE_TEAM_SIGNROLE						= 6320,	//队长标记怪物技能
};

enum { ADJUST_HOT, ADJUST_SHAKE, ADJUST_STING, ADJUST_DECAY };
enum { SPIRITSORT_NONE=0, SPIRITSORT_FIGHTER, SPIRITSORT_GUNNER, SPIRITSORT_ENERGY, SPIRIT_ASSISTANT };

enum{
		MAGICEFFECTEX_FREEZING			= 0x01,	//冰冻表现
		MAGICEFFECTEX_BURNING			= 0x02,	//灼烧表现
		MAGICEFFECTEX_FIRSTATTACK		= 0x04, //第一次攻击(音速)
};

////////////////////升型专用资源的掉落规则2007-1-9 tcp add/////////////////////////////
enum DROP_STONE_RULE_DATA
{
	DROP_STONE_RULE_DATA_ID					,
	DROP_STONE_RULE_DATA_TIME_COE			,
	DROP_STONE_RULE_DATA_STARLV_COE			,
	DROP_STONE_RULE_DATA_WEAPON_COE			,
	DROP_STONE_RULE_DATA_MAGIC_COE			,
	DROP_STONE_RULE_DATA_SPIRITTYPE_COE		,
	DROP_STONE_RULE_DATA_GREENNAME_COE		,
	DROP_STONE_RULE_DATA_REDNAME_COE		,	
	DROP_STONE_RULE_DATA_BLACKNAME_COE		,
	DROP_STONE_RULE_DATA_DROP_STONE0_CHANCE ,
	DROP_STONE_RULE_DATA_DROP_STONE0_MIN	,
	DROP_STONE_RULE_DATA_DROP_STONE0_MAX	,
	DROP_STONE_RULE_DATA_DROP_STONE1_CHANCE ,
	DROP_STONE_RULE_DATA_DROP_STONE1_MIN	,
	DROP_STONE_RULE_DATA_DROP_STONE1_MAX	,
	DROP_STONE_RULE_DATA_DROP_STONE2_CHANCE ,
	DROP_STONE_RULE_DATA_DROP_STONE2_MIN	,
	DROP_STONE_RULE_DATA_DROP_STONE2_MAX	,	
};

enum NEWDROPRULEDATA
{
	NEWDROPRULEDATA_ID = 0,
	NEWDROPRULEDATA_TYPE ,
	NEWDROPRULEDATA_CHANCE,
	NEWDROPRULEDATA_ITEMTYPE_ID,
	NEWDROPRULEDATA_QUALITY0,
	NEWDROPRULEDATA_QUALITY1,
	NEWDROPRULEDATA_QUALITY2,
	NEWDROPRULEDATA_QUALITY3,
	NEWDROPRULEDATA_QUALITY4,
	NEWDROPRULEDATA_QUALITY5,
	NEWDROPRULEDATA_QUALITY6,
	NEWDROPRULEDATA_QUALITY7,
	NEWDROPRULEDATA_QUALITY8,
	NEWDROPRULEDATA_QUALITY9,
	NEWDROPRULEDATA_GEM_NOTHING,
	NEWDROPRULEDATA_GEM,
	NEWDROPRULEDATA_ADDITION_NOTHING,
	NEWDROPRULEDATA_ADDITION,
	NEWDROPRULEDATA_IDENTYFY_NOTHING,	
	NEWDROPRULEDATA_IDENTYFY,
	NEWDROPRULEDATA_DROP_ITEM_RULE,
};

////////////////////////////////////////////////////////////////
enum {	RACE_NONE	= 0,
		RACE_EARTH	= 1,		// 地球军
		RACE_SPACE	= 2,		// 宇宙军
		RACE_DUAL	= 3			// 双重国籍
};




enum ADDPOINTDATA
{
		ADDPOINTDATA_ID,
		ADDPOINTDATA_PROF,
		ADDPOINTDATA_LEVEL,
		ADDPOINTDATA_LIFE_INC,
		ADDPOINTDATA_MANA_INC,
		ADDPOINTDATA_MANA_RE_INC,
		ADDPOINTDATA_STA_INC,
		ADDPOINTDATA_ATK_SHORT_INC,
		ADDPOINTDATA_ATK_LONG_INC,
		ADDPOINTDATA_DEF_SHORT_INC,
		ADDPOINTDATA_DEF_LONG_INC,
		ADDPOINTDATA_ATTR_POINT_INC,         // 玩家等级属性点数 封测完善2/5 从 user_attribute_type 表中
		ADDPOINTDATA_DODGE_INC,              // 玩家等级初始敏捷值
};


enum {
		PKMODE_TEAMMENBER			=	0x00000001,
		PKMODE_SYNDICATEMENBER		=	0x00000002,
		PKMODE_FRIEND				=	0x00000004,
		PKMODE_ENEMY				=	0x00000008,		
		PKMODE_CRIMINAL				=	0x00000010,
		PKMODE_REDNAME				=	0x00000020,
		PKMODE_BLACKNAME			=	0x00000040,
		PKMODE_MATE					=	0x00000080,
		PKMODE_WHITENAME			=	0x00000100,				
		PKMODE_NEWGUY				=   0x00000200,
		PKMODE_PURPLENAME			=	0x00000400,
		PKMODE_SYNWAR_SIDE			=	0x00001000,
		PKMODE_SAFE_NEW             =   0x00002000,
		PKMODE_ADVANCED				=	0x80000000,		
};

//pk的几种默认模式
enum{

		PKMODE_SAFE	= 			PKMODE_SAFE_NEW, 
		PKMODE_PEACE =          PKMODE_ADVANCED,

		PKMODE_TEAM	=			PKMODE_TEAMMENBER
								|PKMODE_MATE
								|PKMODE_SYNDICATEMENBER
								|PKMODE_FRIEND,
							

		PKMODE_SYNDICATE =		PKMODE_SYNDICATEMENBER,

		PKMODE_ARRESTMENT =		PKMODE_ADVANCED
								|PKMODE_CRIMINAL
								|PKMODE_REDNAME
								|PKMODE_BLACKNAME
								|PKMODE_PURPLENAME
								,
		PKMODE_SYNWAR	=		PKMODE_SYNWAR_SIDE,

		PKMODE_FREE = 0,
};

enum TRANSFORM_TYPE
{
	SPIRITFORM_NONE,	
	SPIRITFORM_CHARIOT		= 1,	//战车
	SPIRITFORM_HUMMER		= 2,	//悍马
	SPIRITFORM_BATTLEPLANE	= 3,	//战斗机
	SPIRITFORM_WHIRLYBIRD	= 4,	//直升机
	SPIRITFORM_HUGECANNON	= 5,	//巨炮 
	SPIRITFORM_DINOSAUR		= 6,	//恐龙
	SPIRITFORM_RAPTORIAL		= 7,	//猛兽
	SPIRITFORM_INSECT		= 8,	//昆虫
};

enum
{
	MAGICSORT_ROBOTFORM_CHARIOT0	= 10100,
	MAGICSORT_ROBOTFORM_CHARIOT1,
	MAGICSORT_ROBOTFORM_CHARIOT2,
	MAGICSORT_ROBOTFORM_CHARIOT3,
	MAGICSORT_ROBOTFORM_CHARIOT4,
	MAGICSORT_ROBOTFORM_CHARIOT5,
	MAGICSORT_ROBOTFORM_CHARIOT6,
	MAGICSORT_ROBOTFORM_CHARIOT7,
	MAGICSORT_ROBOTFORM_CHARIOT8,
	MAGICSORT_ROBOTFORM_CHARIOT9,

	MAGICSORT_TRANSFORM_HUMMER0		= 10200,
	MAGICSORT_TRANSFORM_HUMMER1,
	MAGICSORT_TRANSFORM_HUMMER2,
	MAGICSORT_TRANSFORM_HUMMER3,
	MAGICSORT_TRANSFORM_HUMMER4,
	MAGICSORT_TRANSFORM_HUMMER5,
	MAGICSORT_TRANSFORM_HUMMER6,
	MAGICSORT_TRANSFORM_HUMMER7,
	MAGICSORT_TRANSFORM_HUMMER8,
	MAGICSORT_TRANSFORM_HUMMER9,

	MAGICSORT_TRANSFORM_BATTLEPLANE0		= 10300,
	MAGICSORT_TRANSFORM_BATTLEPLANE1,
	MAGICSORT_TRANSFORM_BATTLEPLANE2,
	MAGICSORT_TRANSFORM_BATTLEPLANE3,
	MAGICSORT_TRANSFORM_BATTLEPLANE4,
	MAGICSORT_TRANSFORM_BATTLEPLANE5,
	MAGICSORT_TRANSFORM_BATTLEPLANE6,
	MAGICSORT_TRANSFORM_BATTLEPLANE7,
	MAGICSORT_TRANSFORM_BATTLEPLANE8,
	MAGICSORT_TRANSFORM_BATTLEPLANE9,

	MAGICSORT_TRANSFORM_WHIRLYBIRD0		= 10400,
	MAGICSORT_TRANSFORM_WHIRLYBIRD1,
	MAGICSORT_TRANSFORM_WHIRLYBIRD2,
	MAGICSORT_TRANSFORM_WHIRLYBIRD3,
	MAGICSORT_TRANSFORM_WHIRLYBIRD4,
	MAGICSORT_TRANSFORM_WHIRLYBIRD5,
	MAGICSORT_TRANSFORM_WHIRLYBIRD6,
	MAGICSORT_TRANSFORM_WHIRLYBIRD7,
	MAGICSORT_TRANSFORM_WHIRLYBIRD8,
	MAGICSORT_TRANSFORM_WHIRLYBIRD9,

	MAGICSORT_TRANSFORM_HUGECANNON0		= 10500,
	MAGICSORT_TRANSFORM_HUGECANNON1,
	MAGICSORT_TRANSFORM_HUGECANNON2,
	MAGICSORT_TRANSFORM_HUGECANNON3,
	MAGICSORT_TRANSFORM_HUGECANNON4,
	MAGICSORT_TRANSFORM_HUGECANNON5,
	MAGICSORT_TRANSFORM_HUGECANNON6,
	MAGICSORT_TRANSFORM_HUGECANNON7,
	MAGICSORT_TRANSFORM_HUGECANNON8,
	MAGICSORT_TRANSFORM_HUGECANNON9,

	MAGICSORT_TRANSFORM_DINOSAUR0	= 10600,
	MAGICSORT_TRANSFORM_DINOSAUR1,
	MAGICSORT_TRANSFORM_DINOSAUR2,
	MAGICSORT_TRANSFORM_DINOSAUR3,
	MAGICSORT_TRANSFORM_DINOSAUR4,
	MAGICSORT_TRANSFORM_DINOSAUR5,
	MAGICSORT_TRANSFORM_DINOSAUR6,
	MAGICSORT_TRANSFORM_DINOSAUR7,
	MAGICSORT_TRANSFORM_DINOSAUR8,
	MAGICSORT_TRANSFORM_DINOSAUR9,

	MAGICSORT_TRANSFORM_RAPTORIAL0	= 10700,
	MAGICSORT_TRANSFORM_RAPTORIAL1,
	MAGICSORT_TRANSFORM_RAPTORIAL2,
	MAGICSORT_TRANSFORM_RAPTORIAL3,
	MAGICSORT_TRANSFORM_RAPTORIAL4,
	MAGICSORT_TRANSFORM_RAPTORIAL5,
	MAGICSORT_TRANSFORM_RAPTORIAL6,
	MAGICSORT_TRANSFORM_RAPTORIAL7,
	MAGICSORT_TRANSFORM_RAPTORIAL8,
	MAGICSORT_TRANSFORM_RAPTORIAL9,

	MAGICSORT_TRANSFORM_INSECT0	= 10800,
	MAGICSORT_TRANSFORM_INSECT1,
	MAGICSORT_TRANSFORM_INSECT2,
	MAGICSORT_TRANSFORM_INSECT3,
	MAGICSORT_TRANSFORM_INSECT4,
	MAGICSORT_TRANSFORM_INSECT5,
	MAGICSORT_TRANSFORM_INSECT6,
	MAGICSORT_TRANSFORM_INSECT7,
	MAGICSORT_TRANSFORM_INSECT8,
	MAGICSORT_TRANSFORM_INSECT9,
};


enum TRANSFORM_STATUS
{
	TRANSFORM_STATUS_STOP,		// 暂停状态
	TRANSFORM_STATUS_ADD,		// 增长状态
	TRANSFORM_STATUS_WAIT,		// 满值状态(等待触发)
	TRANSFORM_STATUS_FIRE,		// 爆发状态(已经在变形中了)
};


enum GLOBALVARIABLE_DATA
{
	GLOBALVARIABLE_DATA_ID,
	GLOBALVARIABLE_DATA_TYPE,
	GLOBALVARIABLE_DATA_DATA1,
	GLOBALVARIABLE_DATA_DATA2,
	GLOBALVARIABLE_DATA_DATA3,
	GLOBALVARIABLE_DATA_DATA4,
	GLOBALVARIABLE_DATA_DATA5,
	GLOBALVARIABLE_DATA_DESCRIPTION,
};

enum NEWBIEBORNMAPDATA
{
	NEWBIEBORNMAPDATA_ID,
	NEWBIEBORNMAPDATA_PROVINCEID,
	NEWBIEBORNMAPDATA_MAPID,
	NEWBIEBORNMAPDATA_POSX,
	NEWBIEBORNMAPDATA_POSY,
};

enum SHAPEDATA
{
		SHAPEDATA_ID,
		SHAPEDATA_CX,
		SHAPEDATA_CY,
		SHAPEDATA_Line0,
		SHAPEDATA_Line1,
		SHAPEDATA_Line2,
		SHAPEDATA_Line3,
		SHAPEDATA_Line4,
		SHAPEDATA_Line5,
		SHAPEDATA_Line6,
		SHAPEDATA_Line7,
		SHAPEDATA_Line8,
		SHAPEDATA_Line9,
		SHAPEDATA_Artifact,
};

enum FAMILYDATA
{
	FAMILYDATA_ID		= 0,			// 仅用于INSERT
	FAMILYDATA_NAME		= 1,
	FAMILYDATA_RANK,					// 家族等级，默认为0；rank =0表示1级；rank=1表示2级
	FAMILYDATA_SHAIKHNAME,
	FAMILYDATA_SHAIKHID,
	FAMILYDATA_ANNOUNCE,				// 家族公告信息，默认为空
	FAMILYDATA_MONEY,					// 家族资金
	FAMILYDATA_REPUTE,					// 家族声望
	FAMILYDATA_AMOUNT,					// 当前人数
	FAMILYDATA_ENEMY0,
	FAMILYDATA_ENEMY1,
	FAMILYDATA_ENEMY2,
	FAMILYDATA_ENEMY3,
	FAMILYDATA_ENEMY4,
	FAMILYDATA_ALLY0,
	FAMILYDATA_ALLY1,
	FAMILYDATA_ALLY2,
	FAMILYDATA_ALLY3,
	FAMILYDATA_ALLY4,
	FAMILYDATA_CREATEDATE,				// 创建时间
	FAMILYDATA_CREATENAME,				// 家族创始人名
	FAMILYDATA_STARTOWER,				// 2006.11.22 家族建设系统Add, 家族战斗力塔的具体等级
	FAMILYDATA_MAPID,					// 2006.11.25 家族建设系统Add, 家族地图ID
	FAMILYDATA_DELFLAG,					// 删除标志
	FAMILYDATA_CHALLENGE,				// 记录该家族当前挑战的家族NPC_id
	FAMILYDATA_OCCUPY,					// 记录该家族当前占领的家族NPC_id
	FAMILYDATA_TRUCE,					// 当前的免战状态 0：未使用免战功能 1：处于第一次免战状态 2、使用第一次免战状态后 3、处于第二次免战状态 4、使用第二次免战状态后
};

enum FAMILYATTRDATA
{
	FAMILYATTRDATA_USERID	= 0,						// 玩家ID
	FAMILYATTRDATA_FAMILYID	= 1,
	FAMILYATTRDATA_RANK,
	FAMILYATTRDATA_PROFFER,
	FAMILYATTRDATA_JOINDATE,							// 入帮时间20051215
	FAMILYATTRDATA_AUTOEXE,
	FAMILYATTRDATA_EXP_DATE,
	FAMILYATTRDATA_LASTLOGOUT
};

enum FAMILYFIGHTPRIZEDATA
{
		FAMILYFIGHTPRIZEDATA_PRIZEID = 0,	//ID(族长收益)
		FAMILYFIGHTPRIZEDATA_PRIZELEVEL	= 1,	//奖励档次				
		FAMILYFIGHTPRIZEDATA_WEEKS,				//占领周数
		FAMILYFIGHTPRIZEDATA_ATTRIB,			//属性奖励
		FAMILYFIGHTPRIZEDATA_EXPBALL,			//经验球奖励
		FAMILYFIGHTPRIZEDATA_MAN_ITEM1,			//人类奖励物品1			
		FAMILYFIGHTPRIZEDATA_MAN_ITEM2,			//人类奖励物品2
		FAMILYFIGHTPRIZEDATA_MAN_ITEM3,			//人类奖励物品3	
		FAMILYFIGHTPRIZEDATA_VMP_ITEM1,			//吸血鬼奖励物品1
		FAMILYFIGHTPRIZEDATA_VMP_ITEM2,			//吸血鬼奖励物品2
		FAMILYFIGHTPRIZEDATA_VMP_ITEM3			//吸血鬼奖励物品3
};

enum BusinessAccountSetType
{
	BUSINESSACCOUNT_UNDEFINED_SETTYPE	= -1,
	BUSINESSACCOUNT_CANCEL			= 0,	//撤销商人号，不能更改此值
	BUSINESSACCOUNT_CANCEL_APPLY	= 1,	//撤销申请商人号
	BUSINESSACCOUNT_APPLY			= 2,	//申请商人号
	BUSINESSACCOUNT_APPLY_FIRST		= 3,	//首次申请商人号
	BUSINESSACCOUNT_APPLY_EFFECT	= 4,		//登录时检测到商人号申请生效
	
	BUSINESSACCOUNT_APPLY_EFFECT_ON_MIDNIGHT = 5,		//午夜后满足条件检测到商人号申请生效
	BUSINESSACCOUNT_APPLY_EFFECT_ON_LOGIN = 6   		//登入后满足条件检测到商人号申请生效
		
};

enum PEERAGE_LEVEL
{
	PEERAGE_LEVEL_MIN = 0,
	PEERAGE_LEVEL0 = PEERAGE_LEVEL_MIN,	//平民
	PEERAGE_LEVEL1 = 1,	//男爵
	PEERAGE_LEVEL2 = 2,	//子爵
	PEERAGE_LEVEL3 = 3,	//伯爵
	PEERAGE_LEVEL4 = 4,	//侯爵
	PEERAGE_LEVEL5 = 5,	//公爵
	PEERAGE_LEVEL6 = 6,	//王
	
	PEERAGE_LEVEL_MAX = PEERAGE_LEVEL6
};

enum STEP_TYPE
{ 
	STEP_NONE=0, 
	STEP_LOGIN, 
	STEP_ENTERMAP, 
	STEP_INIT_ITEM, 
	STEP_INIT_FRIEND, 
	STEP_INIT_SKILL, 
	STEP_INIT_MAGIC, 
	STEP_INIT_SYNATTR, 
	STEP_INIT_CONTRACT, 
	STEP_INIT_RESEARCH, 
	STEP_SIZE 
};

enum CHEAT_TYPE
{ 
	_TYPE_MAGIC=0, 
	_TYPE_WS=1, 
	_TYPE_FY=2, 
	_TYPE_USE_LIFE=3, 
	_TYPE_USE_MANA=4, 
}; // 无双// 风云	// 用红药// 用蓝药

enum LEVUPEXPDATA
{
		LEVUPEXPDATA_LEVEL = 0,
		LEVUPEXPDATA_EXP,
		//LEVUPEXPDATA_POINT,
		//LEVUPEXPDATA_TEAM_EXP_LIMIT,
		LEVUPEXPDATA_PERATK,
		LEVUPEXPDATA_OVERADJATK,
		LEVUPEXPDATA_PERXP,
		LEVUPEXPDATA_OVERADJXP,
		LEVUPEXPDATA_PERXPTEAM,
		LEVUPEXPDATA_OVERADJXPTEAM,
		LEVUPEXPDATA_KILLBONUS,
		LEVUPEXPDATA_OVERADJKILLBONUS,
		LEVUPEXPDATA_METEMPSYCHOSIS,
		LEVUPEXPDATA_UPLEVTIME,
		LEVUPEXPDATA_EXPBALLMAX,
		LEVUPEXPDATA_TYPE,		// 2006.06.04 机师经验(type=0) 机体经验(type=1、type=2…)（注：将来会推出升级经验不同的多种机体）
		LEVUPEXPDATA_FINALEXP,
		LEVUPEXPDATA_OVERADJFINAL,
		LEVUPEXPDATA_BASELIFE,
		LEVUPEXPDATA_KILLMONSTER,  //用户在武圣塔（ID：8180）和乾坤塔（ID：8181），升级所需的杀怪数量
};

enum SYNATTRDATA
{
	SYNATTRDATA_BEGIN = 0,
	SYNATTRDATA_USERID	= 0,		     // 玩家ID
	SYNATTRDATA_SYNID	= 1,
	SYNATTRDATA_RANK,
	SYNATTRDATA_PROFFER,
	SYNATTRDATA_DAYS,				// 入帮时间20051215
	SYNATTRDATA_END = SYNATTRDATA_DAYS
};

enum	TRANS_ADJUST_DATA
{
	TRANS_ADJUST_Exp,								//悍马
	TRANS_ADJUST_Def,								//悍马,战车,恐龙,战斗机,昆虫
	//	TRANS_ADJUST_SpendPower_Attack,					//悍马
	TRANS_ADJUST_Power_Jump,						//悍马,恐龙,猛兽
	TRANS_ADJUST_MaxPower,							//悍马
	TRANS_ADJUST_Power_Recover,						//悍马
	TRANS_ADJUST_ShakeDef,							//悍马,战车,恐龙,猛兽,战斗机,昆虫
	TRANS_ADJUST_HotDef,							//战车,恐龙,战斗机,直升飞机,昆虫
	TRANS_ADJUST_ColdDef,							//战车,恐龙,猛兽,战斗机,直升飞机,昆虫
	//	TRANS_ADJUST_SpendAmmo,							//悍马
	TRANS_ADJUST_BeAttackByNearWar_Dec_Damage,		//战车
	TRANS_ADJUST_MaxLife,							//恐龙
	TRANS_ADJUST_MaxLife_Percent,					//战车,恐龙
	TRANS_ADJUST_BattleEffect,						//战车,战斗机
	TRANS_ADJUST_AttackDestroyObj_Add_Damage,		//战车,巨炮,战斗机
	TRANS_ADJUST_AttackFarWar_Add_Atk,				//战车
	TRANS_ADJUST_AttackHummer_Add_Damage,			//战车
	TRANS_ADJUST_Df,								//战车
	TRANS_ADJUST_AttackEmplacement_Add_Atk,			//恐龙
	TRANS_ADJUST_Additional_Damage,					//恐龙
	TRANS_ADJUST_BeAttackByMachineGun_Dec_Damage,	//恐龙
	TRANS_ADJUST_AttackNearWar_Add_Damage,			//恐龙
	TRANS_ADJUST_AttackHugeCannon_Add_Damage,		//猛兽
	TRANS_ASSIT_SKILL_ID,							//猛兽,巨炮,战斗机
	TRANS_ATTACK_PERCENT,							//猛兽,巨炮,昆虫
	TRANS_ATTACK_POWER_PERCENT,						//猛兽,昆虫
	TRANS_BATTALEEFFECT_DEC_TIME,					//猛兽,直升飞机
	TRANS_ADJUST_Dec_def_Add_Atk,					//猛兽
	TRANS_NEED_TIME,								//猛兽,巨炮,昆虫
	TRANS_ATTACK_POWER_VALUE,						//猛兽,昆虫
	TRANS_DISABLE_TRUMP_REGION,						//猛兽
	TRANS_BATTLEEFFECT_CONDITION,					//猛兽,昆虫,直升飞机
	TRANS_HP_Revert_Percent,						//巨炮
	TRANS_ADJUST_Df_Revert,							//巨炮
	TRANS_Generator_Be_Attack_Revert_Time,			//巨炮
	TRANS_ADJUST_AttackBattleplane_Add_Atk,			//巨炮,战斗机
	TRANS_ADJUST_AttackWhirlybird_Add_Atk,			//巨炮
	TRANS_Attack_TargetUser_Make_Lost_HP,			//巨炮
	TRANS_ADJUST_MOVESPEED,							//战斗机
	TRANS_ADJUST_Max_Flytime,						//战斗机
	TRANS_ADJUST_Spend_Flytime_PerSec,				//战斗机
	TRANS_ADJUST_RevertSpeed_Flytime,				//战斗机
	TRANS_Attach_BattleEffect_Status,				//战斗机,直升飞机
	TRANS_ADJUST_AttackChariot_Add_Damage,			//战斗机
	TRANS_ADJUST_FloatCannon_Add_Atk,				//战斗机
	TRRANS_Attach_ElectronGlitch_Status,			//战斗机
	TRANS_BE_ATTACK_Damage_Revert_HP,				//战斗机
	TRANS_ADJUST_Add_Dodge,							//直升飞机
	TRANS_Generator_Be_Attack_Dec_Damage,			//直升飞机
	TRANS_ADJUST_Dec_Radiation,						//直升飞机
			
			
	TRANS_ADJUST_TOTAL_ATK_ADJ,
	TRANS_ADJUST_TOTAL_DEF_ADJ,
	TRANS_ADJUST_TOTAL_BEATTACK_DAMAGE_ADJ,				//
	TRANS_ADJUST_TOTAL_ATTACK_DAMAGE_ADJ,				//
};

enum CHECKCASE
{
	CHECKCASE_CREATENAME,		// 检查起名字时的非法字符或者字符串
};

enum GuardEvent
{
	GUARD_EVENT_BEGIN = 0,
	STONE_USE =  GUARD_EVENT_BEGIN,
	EXPBALL_USE,	
	COMPOSE_TIMES,	//传功内力
	GUARD_ENENT_END,
};

enum CHECK_ENUM 
{ 
	CHECK_FALSE = false, 
	CHECK_TRUE = true 
};


enum FRIEND_SHARED_TYPE
{
    _SHARE_AUTOEXERCIZE,
	_SHARE_EXPBALLUSE,
	_SHARE_OTHER,
};

enum 
{	
	ITEMINFO_NONE=0, 
	ITEMINFO_ADDITEM,				// 添加物品
	ITEMINFO_TRADE,					// 公平交易对方添加的物品
	ITEMINFO_UPDATE,				// update item info
	ITEMINFO_OTHERPLAYER_EQUIPMENT, // 返回其他玩家装备// id is user id
	ITEMINFO_QUERY_STORAGE,			// 放入仓库
	ITEMINFO_UPGRADE,				// TC：和ITEMINFO_UPDATE用法一样，不过升级时才用这个，/TS：客户端调整完改良数据后上传验证
	ITEMINFO_BOOTH,					// for booth
	ITEMINFO_EQUIPMENT,				// equipment update
	ITEMINFO_OTHERPLAYER_USER_EQUIPMENT,//to client
	ITEMINFO_OTHERPLAYER_ROBOTBLUEPRINT_EQUIPMENT, //to client OwnerID为机体设计图的id 查询他人机体设计图相关武器信息		
	ITEMINFO_ROBOT_OUTER,			//to client OwnerID为格纳库外置装备的信息 
	ITEMINFO_OTHERPLAYER_QUERY_CHAT_ITEMINFO,//to client only 其他玩家查询聊天物品信息
	ITEMINFO_QUERY_VIRTUALSPACE,	//to client 查询扩展舱物品信息
	ITEMINFO_QUERY_VIP_STORAGE,		//to client 查询VIP仓库信息
	
	ITEMINFO_TRUMP_PREVIEW=30,		// 法宝信息预览
	
	ITEMINFO_CONTROL_CENTER=40,		//控制中心物品
	ITEMINFO_BOOTH_REMOTE,          //发送远程物品信息

	ITEMINFO_WAITSTATE_BOND = 45,   //绑定申请中的装备信息	
};
enum E_VIPREBORN_TYPE
{
	NONE_REBORN = 0 ,
	VIP_STAND_REBORN,
    VIP_RAND_REBORN,
	NORMAL_REBORN,
};

enum{
		MSGPACKAGE_QUERYLIST			= 0,
		MSGPACKAGE_CHECKIN				= 1,
		MSGPACKAGE_CHECKOUT				= 2,
		MSGPACKAGE_SPLITITEM				= 3,	// to server, data: num
		MSGPACKAGE_COMBINEITEM				= 4,	// to server, data: id
		MSGPACKAGE_MOVEPOS			= 5,			// to client / to server  // 在同一个背包中挪动物品的位置
		MSGPACKAGE_QUERY_VIPDEPOT_ITEM		= 6,	// to client / to server  // 查询VIP仓库中是否有物品

};

enum WANTEDDATA
{
	DATA_ID	= 0, 
	DATA_TARGET_NAME,
	DATA_TARGET_LEV,
	DATA_TARGET_PRO,
	DATA_TARGET_SYN,
	DATA_PAYER,
	DATA_BOUNTY,
	DATA_ORDER_TIME,
	DATA_HUNTER,
	DATA_FINISH_TIME,
};

enum BUSINESSDATA
{
	BUSINESSDATA_ID,
	BUSINESSDATA_USER_ID,
	BUSINESSDATA_BUSINESS_ID,
	BUSINESSDATA_NAME,
	BUSINESSDATA_DATE
};

enum EXPBALL_USETYPE
{
	EXPBALL_EAT,
	EXPBALL_STORE
};



// GetInstantType返回类型
enum INSTANT_TYPE
{
	INSTANT_HP				= 0,
	INSTANT_EN				= 1,
	INSTANT_FUEL			= 2,
	INSTANT_EQUIP			= 3,
	INSTANT_STATUS_FIRST	= 10,
	INSTANT_STATUS_LAST		= 39,
	INSTANT_EXPLODE_FIRST	= 40,
	INSTANT_EXPLODE_LAST	= 79,
};
// MonsterBook
enum
{
		ACTION_QUERY_IDENTIFY_LIST			= 0,				// to server, to client查询怪物名称列表
		ACTION_IDENTIFY_FIRST_TIP				= 1,					// to client第一次杀死某类怪物后，系统消息提示
		ACTION_IDENTIFY_MIDDLE_TIP			= 2,				// to client怪物图鉴等级得到提升时，系统消息提示
		ACTION_IDENTIFY_TOP_LEVEL_TIP		= 3,				// to client图鉴等级达到8级后，系统消息提示
		ACTION_IDENTIFY_ADDITIONAL_TIP	= 4,				// to client额外的图鉴经验值奖励，系统消息提示
		ACTION_QUERY_MONSTER_KILL				= 5,					// to server, to client查询单个怪物的杀怪数量，usPageNum表示怪物种类usShort
		ACTION_QUERY_MONSTER_KILL_LIST	= 6,				// to server, to client查询杀怪列表
};

// Storage
enum
{	// type
	MSGPACKAGE_TYPE_NONE			= 0,
	MSGPACKAGE_TYPE_STORAGE			= 10,	// 寄存处
	MSGPACKAGE_TYPE_TRUNK			= 20,	// 箱子
	MSGPACKAGE_TYPE_CHEST			= 30,	// 百宝囊
	MSGPACKAGE_TYPE_VIRTUALSPACE	= 40,	// 虚空间扩展舱
	MSGPACKAGE_TYPE_VIPSTORAGE      = 50    // VIP专用仓库
		
};

enum TASKDATA
{
	TASKDATA_ID_		=0,
	TASKDATA_IDNEXT		=1,
	TASKDATA_IDNEXTFAIL,
	TASKDATA_ITEMNAME1,
	TASKDATA_ITEMNAME2,
	TASKDATA_MONEY,
	TASKDATA_PROFESSION,
	TASKDATA_SEX,
	TASKDATA_MINPK,
	TASKDATA_MAXPK,
	TASKDATA_TEAM,
	TASKDATA_METEMPSYCHOSIS,
	TASKDATA_QUERY,
	TASKDATA_MARRIAGE,
	TASKDATA_CLIENTACT,
};

// enum ENUM_MAPTYPE 
// {
// 	MAPTYPE_NORMAL								= 0x0000,			// 普通地图 
// 	MAPTYPE_PKFIELD								= 0x0001,			// PK场
// 	MAPTYPE_CHGMAP_DISABLE						= 0x0002,			// 不能用魔法在地图实现移动
// 	MAPTYPE_RECORD_DISABLE						= 0x0004,			// 不能记录
// 	MAPTYPE_PK_DISABLE							= 0x0008,			// 8，不能PK
// 	MAPTYPE_BOOTH_ENABLE						= 0x0010,			// 16，专用摆摊地图(无记录点)
// 	MAPTYPE_TEAM_DISABLE						= 0x0020,			// 32，不能组队
// 	MAPTYPE_TELEPORT_DISABLE					= 0x0040,			// 64 // chgmap by action，不能用chgmap（指令）、回城卷
// 	MAPTYPE_SYN_MAP								= 0x0080,			// 128，帮派地图
// 	MAPTYPE_PRISON_MAP							= 0x0100,			// 256，监狱地图
// 	MAPTYPE_DISABLE_TRANSFER_SOURCE				= 0x00200,			// 512，不能作为瞬移的源地
// 	MAPTYPE_FAMILY								= 0x00400,			// 1024， 家庭地图 
// 	MAPTYPE_MINEFIELD							= 0x0800,			// 2048，矿场
// 	MAPTYPE_PKGAME								= 0x1000,			// 4096 // PK赛
// 	MAPTYPE_HUMAN								= 0x2000,			// 8192 // 人类场景（人类专用场景，不能PK、飞行）
// 	MAPTYPE_WORLDWAR							= 0x4000,			// 16384 // 国战地图 
// 	MAPTYPE_UNIVERSE							= 0x8000,			// 32768 //宇宙场景 （用来跟普通地图区分移动方式）
// 	MAPTYPE_EXPERIMENT							= 0x10000,			// 32768 //感受室地图 （用来跟普通地图区分）
// 	MAPTYPE_SPACESHIPJOB						= 0x20000,			// 飞船任务地图 类型
// 	MAPTYPE_SPACESHIP							= 0x40000,			// 飞船地图 类型
// 	MAPTYPE_TRAININGFIELD						= 0x80000,			// 524300 // 练功场地图 类型 (auto set no_pk|no_record, 此类型无战斗消耗)
// 	MAPTYPE_NEWPIE_PK_PROTECT					= 0x100000,			// 新手保护地图	
// 	MAPTYPE_DISABLE_TRANSFER_TARGET				= 0x200000,			// 不能作为瞬移的目的地
// 	MAPTYPE_NO_REBORN_INNOWPOS					= 0x400000,			// 限制原地复活功能
// 	MAPTYPE_DISABLE_TRANSPOS					= 0x800000,			// 不可召唤 2007-2-27 tcp add
// 	MAPTYPE_DISABLE_TRANSFORM					= 0x1000000,		// 不可变形的地图 2007-3-29 tcp add	
// 	MAPTYPE_DISABLE_TRUMP_REBORN				= 0x2000000,		// 禁止使用法宝复活技能	
// 	MAPTYPE_DISABLE_TRUMP_REGION				= 0x4000000,		// 禁止使用法宝结界技能	
// 	MAPTYPE_DISABLE_TRUMP_RAND_TRANS_POS		= 0x8000000,		// 禁止使用法宝-小瞬移		
// 	MAPTYPE_PK_LOST_NOTHING						= 0x10000000,		// PK对玩家不产生任何损失				
// 	MAPTYPE_DISABLE_AREA_MAGIC					= 0x20000000,		// ?	禁止使用范围技能	
// 	MAPTYPE_DISABLE_STEAL						= 0x40000000,		// ?	禁止偷窃
// 	MAPTYPE_DISBLE_TEAM_SEARCH					= 0x80000000,		// 禁止队伍搜索的地图属性
// };

enum WEAPONATK_PROPERTYTYPE
{
	WEAPONATK_NORMAL = 0,
	WEAPONATK_HOT,					// 高温属性攻击类型
	WEAPONATK_SHAKE,				// 震荡属性攻击类型
	WEAPONATK_STING,				// 穿刺属性攻击类型
	WEAPONATK_DECAY,				// 腐蚀属性攻击类型
	WEAPONATK_MATE_SHARE_DAMEGE,	// 配偶平分伤害性攻击类型	
	WEAPONATK_RECURSIVE_DAMEGE,	    // 反弹伤害		
	WEAPONATK_ADD_MONSTER_DAMAGE,   // 法宝：对怪物间歇伤害
	WEAPONATK_SHOTGUN    = 11,              // 散弹枪攻击
	
	WEAPONATK_END,					// 结束标志
};

enum STARWAR_STATUS
{
	STARWAR_STATUS_NOT_BEGIN =0,
		STARWAR_STATUS_WAITFOR_JION,
		STARWAR_STATUS_BEGIN,
		STARWAR_STATUS_WAIT_FOR_CHANGE_TO_BONUSMAP,
		STARWAR_STATUS_BONUSMAP,
		STARWAR_STATUS_END,
};

enum SYNAWARD
{
	SYNAWARD_SCORE,
	SYNAWARD_MONEY,
};

enum
{
	MSG_TRUMP_APPLY = 0,			// TSTC 请求对目标使用法宝,dwFunctionCode为功能编号
	MSG_TRUMP_REFUSE,				// TSTC 对方拒绝被使用法宝
	MSG_TRUMP_AGREE,				// TSTC 对方同意被使用法宝
		
	MSG_TRUMP_USE,					// TS   使用法宝,只要找到dwFunctionCode功能编号的物品即可
	MSG_TRUMP_USE_SUCCESS,			// TC   法宝使用成功
		
	MSG_TRUMP_CREATE_REGION,		// TS   使用法宝,idTrump表示法宝ID
		
	MSG_TRUMP_USE_BY_ID,			// TS   使用法宝,idTrump表示法宝ID,dwFunctionCode功能编号
		
	MSG_TRUMP_USE_SUCCESS_FLUSH,	// TC   法宝抗性起作用光效表现 dwFunctionCode功能编号的物品
		
	MSG_TRUMP_USE_SUCCESS_DAMAGE,	// TC   法宝抗性起作用伤血表现 dwFunctionCode功能编号的物品 dwData:伤血值
		
	MSG_TRUMP_HOLE1_PROGRESS,		// TS	法宝-开洞进度,开一洞操作
	MSG_TRUMP_HOLE2_PROGRESS,		// TS	法宝-开洞进度,开二洞操作
		
	MSG_TRUMP_HOLE1_MOONGEM,		// TS	法宝-开洞进度,扩展装置开洞开一洞操作
	MSG_TRUMP_HOLE2_MOONGEM,		// TS	法宝-开洞进度,扩展装置开洞开二洞操作
		
	MSG_TRUMP_HOLE1_RMB,			// TS	法宝-开洞进度,直接使用太阳石开一洞操作
	MSG_TRUMP_HOLE2_RMB,			// TS	法宝-开洞进度,直接使用太阳石开二洞操作
		
	MSG_TRUMP_ASSISTANT_FUN_COMBINE,// TS	法宝辅助功能合成 idTrump:主功能法宝	idOtherTrump:辅助法宝 idGem:以太id 	
	// btMainMask     :辅功能选取的掩码位 1 2 4 8 位置0:分别代表主法宝的  Hot_atk、Shake_atk、Sting_atk、Decay_atk
	// btAssistantMask:辅功能选取的掩码位 1 2 4 8 位置1:分别代表辅助法宝的Hot_atk、Shake_atk、Sting_atk、Decay_atk
	
	MSG_TRUMP_TYPE_DIE_BEAT_BACK = 43, //死亡后扣敌人HP
		
	MSG_TRUMP_IMPROVE_MAIN_FUNC_VAL = 100,	  // TS   法宝-主功能效果数值养成 idGem:流星物品id  idTrump:法宝id
	MSG_TRUMP_IMPROVE_MAIN_FUNC_SUCEESS = 101,// TC   法宝-主功能效果数值养成成功 dwDetalVal:提升的数值 dwData:该法宝的最大值
	MSG_TRUMP_IMPROVE_MAIN_FUNC_FAIL = 102,   // TC   法宝-主功能效果数值养成已达到最大值
		
	MSG_TRUMP_TYPE_INTERVAL_INCREASE_HP = 1000, //法宝间隔时间增加HP
};



enum
{
	MSG_TRUMPREGION_CREATE,				//创建成功
	MSG_TRUMPREGION_INFO,				//结界信息	
	MSG_TRUMPREGION_KICK,				//结界被撤消,被其他玩家的结界所顶替,m_StrPacker带踢者玩家名字
	MSG_TRUMPREGION_DIE_FOR_MONSTER,	//结界被撤消,被怪打死,m_StrPacker带MonsterType(字符串形式)
	MSG_TRUMPREGION_DIE_FOR_USER,		//结界被撤消,被PK,m_StrPacker带PK玩家名字
	
	MSG_TRUMPREGION_MOVEOUT,			//结界被撤消,离开结界区域范围
	MSG_TRUMPREGION_END,				//结界被撤消,持续时间结束
	
	MSG_TRUMPREGION_LEAVE_SYNDICATE,	//结界被撤消离开帮派
	MSG_TRUMPREGION_LEAVE_TEAM,			//结界被撤消离开队伍
	MSG_TRUMPREGION_LEAVE_FAMILY,		//结界被撤消离开创建家族
	
	MSG_TRUMPREGION_ADD_SYNDICATE,		//结界加入帮派
	MSG_TRUMPREGION_ADD_TEAM,			//结界加入队伍
	MSG_TRUMPREGION_ADD_FAMILY,			//结界加入家族
};

enum
{
	OBJ_MACHINEGUN	= 0x900001,
	OBJ_FREEZEGUN	= 0x900002,
	OBJ_SNIPEGUN	= 0x900003,
	OBJ_FLAMETHROWERGUN	= 0x900004,
	OBJ_SHOTGUN		= 0x900005,
	OBJ_MUSKETGUN	= 0x900006,
};

//地下城地形类型
enum DunTerrainType
{
	DUNTERRAINTYPE_NONE			=0,				//模版文件里面未配置的格子，认为是可挖区域

	//类型字段值0~9999为可挖掘地形
	DUNTERRAIN_DIG_BEGIN		=0,				//可挖掘地形
	
	//危险类地形：当该类地形的危险值字段值不为0时，表示该地形属于危险类地形，在挖掘过程中可能发生崩塌；
	DUNTERRAIN_DANGER			=201,
	//金矿类地形：当该类地形的掉落金币最小值及掉落金币最大值不为0时，表示该地形属于金矿类地形，在挖掘完成时将随即获得金币（具体金币掉落功能见相关子案）。
	DUNTERRAIN_GOLD				=202,
	
	DUNTERRAIN_DIG_END			=9999,			//可挖掘地形

	//////////////////////////////////////////////////////////////////////////
	//类型字段值10000~65535为不可挖掘地形
	DUNTERRAIN_UNDIG_BEGIN		=10000,			//不可挖掘地形

	//10000~10006为未占领的空地类地形；
	DUNTERRAIN_UNOCCUPY_BEGIN	=10000,
	DUNTERRAIN_UNOCCUPY_DEFAULT	=DUNTERRAIN_UNOCCUPY_BEGIN,	//默认的未占领地形
	DUNTERRAIN_UNOCCUPY_1		=DUNTERRAIN_UNOCCUPY_DEFAULT,
	DUNTERRAIN_UNOCCUPY_2 		=DUNTERRAIN_UNOCCUPY_DEFAULT + 1,
	DUNTERRAIN_UNOCCUPY_3 		=DUNTERRAIN_UNOCCUPY_DEFAULT + 2,
	DUNTERRAIN_UNOCCUPY_4 		=DUNTERRAIN_UNOCCUPY_DEFAULT + 3,
	DUNTERRAIN_UNOCCUPY_5 		=DUNTERRAIN_UNOCCUPY_DEFAULT + 4,
	DUNTERRAIN_UNOCCUPY_6 		=DUNTERRAIN_UNOCCUPY_DEFAULT + 5,
	DUNTERRAIN_UNOCCUPY_7 		=DUNTERRAIN_UNOCCUPY_DEFAULT + 6,
	DUNTERRAIN_UNOCCUPY_END		=DUNTERRAIN_UNOCCUPY_7,

	//10010~10019为水类地形；
	//10020~10029为岩浆类地形；
	//10030~10039为岩石类地形；

	//10040~10046为占领后的空地地形；
	DUNTERRAIN_OCCUPY_BEGIN		=10040,
	DUNTERRAIN_OCCUPY_DEFAULT	=DUNTERRAIN_OCCUPY_BEGIN,	//默认的未占领地形
	DUNTERRAIN_OCCUPY_1			=DUNTERRAIN_OCCUPY_DEFAULT,
	DUNTERRAIN_OCCUPY_2 		=DUNTERRAIN_OCCUPY_DEFAULT + 1,
	DUNTERRAIN_OCCUPY_3 		=DUNTERRAIN_OCCUPY_DEFAULT + 2,
	DUNTERRAIN_OCCUPY_4 		=DUNTERRAIN_OCCUPY_DEFAULT + 3,
	DUNTERRAIN_OCCUPY_5 		=DUNTERRAIN_OCCUPY_DEFAULT + 4,
	DUNTERRAIN_OCCUPY_6 		=DUNTERRAIN_OCCUPY_DEFAULT + 5,
	DUNTERRAIN_OCCUPY_7 		=DUNTERRAIN_OCCUPY_DEFAULT + 6,
	DUNTERRAIN_OCCUPY_END		=DUNTERRAIN_OCCUPY_7,

	//////////////////////////////////////////////////////////////////////////
	//10050~65535为各种建筑地形；
	DUNTERRAIN_BUILDING_BEGIN	=10050,
	//当为建筑地形时，前四位表示建筑类型，最后一位表示建筑当前等级；
	//等级位最小值为0，表示1级建筑。
	
	//DUNBUILDINGTYPE

	DUNTERRAIN_BUILDING_END		=65535,
	//////////////////////////////////////////////////////////////////////////

	DUNTERRAIN_UNDIG_END		=65535,			//不可挖掘地形
	
};

//地下城建筑物类型
enum DUNBUILDINGTYPE
{
	DUNBUILDINGTYPE_BEGIN			 =1005,
		
	DUNBUILDINGTYPE_UNDIG_ROAD		 =1005,		//道路（不可挖掘/无掩码）
	DUNBUILDINGTYPE_HEART			 =1006,		//地下城之心（可存金币部分）
	DUNBUILDINGTYPE_HEART_CENTER	 =1007,		//地下城之心（中央部分）
	DUNBUILDINGTYPE_MATERIAL_STORAGE =1008,    //地下城材料仓库
	DUNBUILDINGTYPE_MONEY_STORAGE	 =1009,	//地下城金钱仓库
	DUNBUILDINGTYPE_END				 =6553,
};
	
//用这张表实现一种robottype对应多个等级配置
enum DUNIMPTYPEDATA
{
	_DUNIMPTYPEDATA_ID,				//
	DUNIMPTYPEDATA_TYPE,			//对应robottype.id
	DUNIMPTYPEDATA_LEVEL,			//等级
	DUNIMPTYPEDATA_DIG_STRENGTH,	//小鬼:挖掘时的基础力量值
	DUNIMPTYPEDATA_DIG_TECH,		//小鬼:建造时的基础技巧值
	DUNIMPTYPEDATA_DIG_MAXLOAD,		//小鬼:挖掘时，携带资源的基础负重最大值
};

//cq_dun_dig中每个格子保存的数据
enum DIGSTATUS
{
	DIGSTATUS_BEGIN			= 0,
	DIGSTATUS_UNDEFIED		= DIGSTATUS_BEGIN,

	DIGSTATUS_BLOCK			= 1,	//还没被挖掘

	//未占领空地
	DIGSTATUS_UNOCCPY_BEGIN	= 2 ,
	DIGSTATUS_UNOCCPY_DEFAULT= DIGSTATUS_UNOCCPY_BEGIN ,
	DIGSTATUS_UNOCCPY_1		= DIGSTATUS_UNOCCPY_BEGIN ,
	DIGSTATUS_UNOCCPY_2		= 2 ,
	DIGSTATUS_UNOCCPY_3		= 3 ,
	DIGSTATUS_UNOCCPY_4		= 4 ,
	DIGSTATUS_UNOCCPY_5		= 5 ,
	DIGSTATUS_UNOCCPY_6		= 6 ,
	DIGSTATUS_UNOCCPY_7		= 7 ,
	DIGSTATUS_UNOCCPY_END	= DIGSTATUS_UNOCCPY_7,
	
	//已占领空地
	DIGSTATUS_OCCPY_BEGIN	= 8 ,
	DIGSTATUS_OCCPY_DEFAULT	= DIGSTATUS_OCCPY_BEGIN ,
	DIGSTATUS_OCCPY_1		= DIGSTATUS_OCCPY_BEGIN ,
	DIGSTATUS_OCCPY_2		= 9 ,
	DIGSTATUS_OCCPY_3		= 10,
	DIGSTATUS_OCCPY_4		= 11,
	DIGSTATUS_OCCPY_5		= 12,
	DIGSTATUS_OCCPY_6		= 13,
	DIGSTATUS_OCCPY_7		= 14,
	DIGSTATUS_OCCPY_END		= DIGSTATUS_OCCPY_7,
	
	//建筑物
	DIGSTATUS_BUILDING		= 15,

	DIGSTATUS_COUNT,
};

//cq_dun_terrain_type
enum DunTerrainTypeData
{
	DUNTERRAINTYPEDATA_ID,
	DUNTERRAINTYPEDATA_NAME,		//记录该地形的名称
	DUNTERRAINTYPEDATA_TYPE,		//记录该地形的类型
	DUNTERRAINTYPEDATA_MAXLIFE,
	DUNTERRAINTYPEDATA_EVENT_CHANCE,//记录该地形触发特殊事件的概率，表示百分比；如：危险值=10，则表示有10%的概率触发特殊事件
	DUNTERRAINTYPEDATA_DAMAGE,		//记录该地形对小鬼造成的伤害值，支持绝对值和百分比
	DUNTERRAINTYPEDATA_MINMONEY,	//记录该地形被破坏时，掉落金币的最小数量
	DUNTERRAINTYPEDATA_MAXMONEY,	//记录该地形被破坏时，掉落金币的最大数量
};

//dungeon
enum DUNDATA
{
	DUNDATA_ID			=0,
	DUNDATA_OWNERID,
	DUNDATA_OWNERTYPE,
	DUNDATA_GENNO,
	DUNDATA_TEMPLATE_FILE_ID,
};

//地下城城主等级
enum DUNKEEPERRANK
{
	DUNKEEPERRANK_NONE		= 0,
	DUNKEEPERRANK_SMALL		= 1,
	DUNKEEPERRANK_MIDDLE	= 2,
	DUNKEEPERRANK_LARGE		= 3,
	DUNKEEPERRANK_HUGE		= 4,
};

//侍卫各种状态判断
enum SPIRITSTATUS
{
	SPIRITSTATUS_WORKING	= 1< 1,	//劳动中
	SPIRITSTATUS_POSSESS	= 1< 2,	//被玩家附身
	SPIRITSTATUS_SWIMMY		= 1< 3,	//眩晕
};

enum LOTTERY_DATA
{ 
	LOTTERYDATA_ID_,
	LOTTERYDATA_TYPE,
	LOTTERYDATA_RANK,
	LOTTERYDATA_CHANCE,
	LOTTERYDATA_PRIZE_NAME,	
	LOTTERYDATA_PRIZE_TYPE,
	LOTTERYDATA_PRIZE_ITEM,
	LOTTERYDATA_COLOR,
	LOTTERYDATA_HOLE_NUM,
	LOTTERYDATA_ADDITION_LEV,
	LOTTERYDATA_HOT_ATK,
	LOTTERYDATA_SHAKE_ATK,
	LOTTERYDATA_STING_ATK,
	LOTTERYDATA_DECAY_ATK,
	LOTTERYDATA_HOT_DEF,
	LOTTERYDATA_SHAKE_DEF,
	LOTTERYDATA_STING_DEF,
	LOTTERYDATA_DECAY_DEF
};

enum PASSIVE_MAGIC_TYPE
{
	PASSIVE_MAGIC_NONE=0,
	PASSIVE_MAGIC_HOT_ATTACK,	//热攻击
	PASSIVE_MAGIC_ICE_ATTACK,	//冷攻击
	PASSIVE_MAGIC_SHAKE_ATTACK,	//震荡攻击
};

enum POWER_EQUIPTYPE
{
	POWER_EQUIPTYPE_ENGINER   			= ITEMPOS_ENGINE,  //发动机
	POWER_EQUIPTYPE_ENPACK        		= ITEMPOS_ENPACK,  //能量仓
	POWER_EQUIPTYPE_THRUSTER  			= ITEMPOS_THRUSTER,//推进器
};

enum BROTHER_RELATION_TYPE_DATA
{
	BROTHER_RELATION_TYPE_ID,
	BROTHER_RELATION_TYPE_LEV,
	BROTHER_RELATION_TYPE_NEED,
	BROTHER_RELATION_TYPE_NAME,
	BROTHER_RELATION_TYPE_PK_REDUCE,
	BROTHER_RELATION_TYPE_TALK_ADD,
};
enum
{
	GACTION_HEROINFO			= 0,
	GACTION_TOP10INFO			= 1,
	GACTION_UPDATE_FAMILY_FUND	= 2,	// 专用: 广播更新客户端家族基金属性, 只能更新dwSynMoney值
	GACTION_UPDATE_FAMILY_LEVEL	= 3,	// 专用：广播更新客户端家族等级，只更新ucFamilyLev值
	GACTION_UPDATE_STARTOWER	= 4,	// 专用：广播更新客户端家族战斗力塔等级，只更新ucStarTower值
};
enum ATK_GRADE_TYPE_DATA
{
	ATK_GRADE_TYPE_DATA_ID,
		ATK_GRADE_TYPE_DATA_ROBOT_LEVEL_MIN,
		ATK_GRADE_TYPE_DATA_ROBOT_LEVEL_MAX,
		ATK_GRADE_TYPE_DATA_QUALITY,
		ATK_GRADE_TYPE_DATA_ADDITION,
		ATK_GRADE_TYPE_DATA_GRADE,
};

enum USER_ATK_MONSTER_TYPE_DATA
{
	USER_ATK_MONSTER_TYPE_DATA_ID,
	USER_ATK_MONSTER_TYPE_DATA_DELTA_LEV,
	USER_ATK_MONSTER_TYPE_DATA_ATK_GRADE,
	USER_ATK_MONSTER_TYPE_DATA_ATK_TIMES,
	USER_ATK_MONSTER_TYPE_DATA_TYPE,
};

enum GUARD_DMG_TYPE_DATA
{
	GUARD_DMG_TYPE_DATA_ID,
	GUARD_DMG_TYPE_DATA_TYPE,
	GUARD_DMG_TYPE_DATA_DELTA_LEV,
	GUARD_DMG_TYPE_DATA_SHORT_DMG_MAX,
	GUARD_DMG_TYPE_DATA_LONG_DMG_MAX,
	GUARD_DMG_TYPE_DATA_SHORT_ATK_DMG_MIN,
	GUARD_DMG_TYPE_DATA_LONG_ATK_DMG_MIN,
};


enum GUARD_PK_TYPE_DATA
{
	GUARD_PK_TYPE_DATA_ID,
	GUARD_PK_TYPE_DATA_ATK_TYPE,
	GUARD_PK_TYPE_DATA_DEF_TYPE,
	GUARD_PK_TYPE_DATA_DELTA_LEV,
	GUARD_PK_TYPE_DATA_DMG_PERCENT,
	GUARD_PK_TYPE_DATA_RESTRAIN_STARLEV,
};
enum 
{
	STATUS_NONE = 0, 
	STATUS_WAR = 1,
};

// 帮派等级
enum SYN_RANK
{
	SYN_RANK_ERROR = 0,
	SYN_RANK_1,
	SYN_RANK_2,
	SYN_RANK_3,
	SYN_RANK_4,
	SYN_RANK_5,
	SYN_RANK_6,
	SYN_RANK_7,
	SYN_RANK_8,
	SYN_RANK_9,
	SYN_RANK_10,
	SYN_RANK_MAX = SYN_RANK_10
};

enum SYN_DATA
{
	SYN_DATA_BEGIN = 0,
	SYN_DATA_ID = 0,
	SYN_DATA_NAME = 1,
	SYN_DATA_ANNOUNCE,
	SYN_DATA_TENET,
	SYN_DATA_MEMBER_TITLE,
	SYN_DATA_LEADER_ID,
	SYN_DATA_LEADER_NAME,
	SYN_DATA_MONEY,
	SYN_DATA_DEL_FLAG,
	SYN_DATA_AMOUNT,
	SYN_DATA_ENEMY0,
	SYN_DATA_ENEMY1,
	SYN_DATA_ENEMY2,
	SYN_DATA_ENEMY3,
	SYN_DATA_ENEMY4,
	SYN_DATA_ALLY0,
	SYN_DATA_ALLY1,
	SYN_DATA_ALLY2,
	SYN_DATA_ALLY3,
	SYN_DATA_ALLY4,
	// 舰队等级
	SYN_DATA_RANK,
	// 舰队图标
	SYN_DATA_ICON,
	// 舰队创建时间
	SYN_DATA_CREATEDATE,
	// 被指导的玩家
	SYN_DATA_COACH_USER0,						
	SYN_DATA_COACH_USER1,
	SYN_DATA_COACH_USER2,
	SYN_DATA_COACH_USER3,
	SYN_DATA_COACH_USER4,
	SYN_DATA_COACH_USER5,
	SYN_DATA_COACH_USER6,
	SYN_DATA_COACH_USER7,
	SYN_DATA_COACH_USER8,
	SYN_DATA_COACH_USER9,
	SYN_DATA_TOTEM_POLE,
	SYN_DATA_MEMBER_TITLE_CNT,
	SYN_DATA_EMONEY,
	SYN_DATA_PUBLISH_TIME,
	SYN_DATA_END = SYN_DATA_PUBLISH_TIME
};

//teammission
enum TEAMMISSIONDATA
{
	//base：主线任务完成
	//perfect：完美完成
	TEAMMISSIONDATA_ID,				//任务编号id	
	TEAMMISSIONDATA_NAME,			//副本任务名称	
	TEAMMISSIONDATA_GENNO,			//记录该副本任务所对应的map.GenNo编号
	TEAMMISSIONDATA_TYPE,			//以二进制方式配置任务所属类型
	//第一位为对抗型任务标识，若为1，表示该任务为对抗型任务，允许其他队伍加入任务，与原任务队伍敌对
	//第二位为合作型任务标识，若为1，表示该任务为对抗型任务，允许其他队伍加入任务，辅助原任务队伍完成任务	
	TEAMMISSIONDATA_MINLEV,			//记录该副本任务对人物等级的最低要求
	//0表示无人物等级最低要求	
	
	TEAMMISSIONDATA_MAXLEV,			//记录该副本任务对人物等级的最高要求
	//0表示无人物等级最高要求	
	TEAMMISSIONDATA_MIN_BE,			//记录该副本任务对人物的战斗力要求
	//0表示无战斗力要求	
	TEAMMISSIONDATA_MAXMINUTE,		//记录该副本任务的完成时限，单位：分钟	
	TEAMMISSIONDATA_START_ACTION,	//记录副本任务开始后执行的主线任务、可选任务条件action_id
	TEAMMISSIONDATA_BASE_SCORE,		//记录副本任务中主线任务完成可获得任务评分
	TEAMMISSIONDATA_PERFECT_SCORE,	//记录副本任务中达成完美的所需任务评分
	TEAMMISSIONDATA_MINPROFFER,		//记录副本任务的个人完成任务的贡献度要求
	TEAMMISSIONDATA_AWARD_ITEMTYPE,	//记录副本任务完成后，可获得的奖励物品itemtype_id
	TEAMMISSIONDATA_AWARD_MONEY,	//记录副本任务完成后，可获得的金钱奖励
	TEAMMISSIONDATA_AWARD_UPLEVTIME,//记录副本任务完成后，可获得的奖励经验uplevtime
	TEAMMISSIONDATA_END_ACTION,		//记录副本任务的主线任务条件完成后，执行的Action_id，提供给任务部使用
	TEAMMISSIONDATA_BASE_SECS,		//记录主线任务完成获得保底奖励的标准时间，mmSS
	TEAMMISSIONDATA_PERFECT_SECS,	//记录完美任务完成获得保底奖励的标准时间，mmSS
	TEAMMISSIONDATA_RETURN_MAPID,	//记录玩家从任务副本中返回后的落脚点坐标	
	TEAMMISSIONDATA_RETURN_X,		//任务返回点坐标X		
	TEAMMISSIONDATA_RETURN_Y,		//任务返回点坐标Y		
	TEAMMISSIONDATA_START_TIME,		//记录任务开放的时间段起止点，若为0则无限制,支持对每天、每周、每月的指定时间进行配置	
	TEAMMISSIONDATA_END_TIME,		//任务开放时间终点,HHmmSS	
};

enum ZERO_TRUMP_VALUE
{
	ZERO_TRUMP_BATTLEEFFECT_VALUE,
	ZERO_TRUMP_ATTACK_VALUE,
	ZERO_TRUMP_DEFENCE_VALUE,
};

enum LOGSWITCH_DATA
{
	LOGSWITCH_PKCOMPETE,
	LOGSWITCH_SHIPJOB,
	LOGTRUMP_ASSISTANT_COMBINE,	
	LOGOPEN_HOLE,
	LOGSWITCH_MONSTER_DROP,
	LOGSWITCH_ITEM_ADDITION,
	LOGSWITCH_FORBIDWALLOW,//防沉迷开关
	LOGSWITCH_REPAIR,
	LOGSWITCH_SHOP_BUY_ITEM,
	LOGSWITCH_SHOP_SELL_ITEM,
	LOGSWITCH_BUY_BOOTH,	
	LOGSWITCH_PRISON_OUT,
	LOGSWITCH_BATTLE_EFFCET,//记录玩家战斗力开关
	LOGSWITCH_NIBUS,
	LOGMERGE_SERVER_NAME_CHECK,
	LOGSWITCH_PK_COMPETE,
	LOGSWITCH_SYNWAR,
	LOGSWITCH_GAMEMONEY,		
	LOGSWITCH_STONE,
	LOGSWITCH_WALKPIXDETAIL,
	LOGSWITCH_SKILLDETAIL,	//技能调试用
};

enum PKCOMPETE_GROUPTYPE
{
	PKCOMPETEGROUP_NONE,
	PKCOMPETEGROUP_NORMAL,
	PKCOMPETEGROUP_NEARORFAR,
};

enum DUN_CONSTRUCTION_MATERIAL
{
	DUN_CONSTRUCTION_MATERIAL_ID,
	DUN_CONSTRUCTION_MATERIAL_OWNER_ID,
	DUN_CONSTRUCTION_MATERIAL_OWNER_TYPE,

	DUN_CONSTRUCTION_MATERIAL_MONEY,
	DUN_CONSTRUCTION_MATERIAL_WOOD,
	DUN_CONSTRUCTION_MATERIAL_STONE,
	DUN_CONSTRUCTION_MATERIAL_OIL,
	DUN_CONSTRUCTION_MATERIAL_CRYSTAL,
	DUN_CONSTRUCTION_MATERIAL_AVENTURINE,
	DUN_CONSTRUCTION_MATERIAL_GUNMETAL,
	DUN_CONSTRUCTION_MATERIAL_STEEL,
	DUN_CONSTRUCTION_MATERIAL_MARBLE,
	DUN_CONSTRUCTION_MATERIAL_PEARL,
	DUN_CONSTRUCTION_MATERIAL_CORAL,
	DUN_CONSTRUCTION_MATERIAL_SILVER,
	DUN_CONSTRUCTION_MATERIAL_GOLD,
	DUN_CONSTRUCTION_MATERIAL_GEM,
	DUN_CONSTRUCTION_MATERIAL_JADE,
	DUN_CONSTRUCTION_MATERIAL_15,
	DUN_CONSTRUCTION_MATERIAL_16,
	DUN_CONSTRUCTION_MATERIAL_17,
	DUN_CONSTRUCTION_MATERIAL_18,
	DUN_CONSTRUCTION_MATERIAL_19,

	DUN_CONSTRUCTION_MATERIAL_BEGIN = DUN_CONSTRUCTION_MATERIAL_MONEY,
	DUN_CONSTRUCTION_MATERIAL_END = DUN_CONSTRUCTION_MATERIAL_19
};

enum ROLE_ACTION_ENUM
{
	ROLE_ACTION_BEGIN = 0, 
	ROLE_ACTION_ATTACK, 
	ROLE_ACTION_DIE,
	ROLE_ACTION_MOVE,
	ROLE_ACTION_EMOTION,
	ROLE_ACTION_CALLBACK,
	ROLE_ACTION_BEATTACK,
	ROLE_ACTION_END, 
};

enum COLLECT_TYPE
{
	COLLECT_TYPE_NONE,
	COLLECT_TYPE_EARTHBAG,
};

//////////////////////////////////////////////////////////////////////////
// QuizCompete
enum QUIZ_COMPETE_TYPE
{
	NONE_COMPETE = 0,
	M_PLAYER_COMPETE,  //全服务器竞赛
	S_PLAYER_COMPTET,   //单个人抢答竞赛
	AD_PLAYER_COMPET,   //广告题答题竞赛
	EXPBALL_COMPETE,    //经验球赠送竟赛
};


//// MsgCallEvent 中用到的东西!!!!
enum LUA_EVENT_TYPE
{
	UNKNOWN_TYPE,
		TIMEOUT_EVENT,
		ROLE_EVENT,
		PLAYER_EVENT,
		SYSTEM_EVENT,
		WINDOW_EVENT,
		MONSTER_EVENT,
};


enum LUA_EVENT_SUB_TYPE
{
		ROLE_EVENT_START			= 1000,
		ROLE_HEALTHY_CHANGE			= 1001,
		ROLE_POS_CHANGE				= 1002,
		ROLE_RUNACTION_END			= 1003,
		ROLE_ACTION_HIT				= 1004,
		ROLE_EVENT_WALK				= ROLE_EVENT_START + 5,  // hero走路
		ROLE_EVENT_RUN				= ROLE_EVENT_START + 6,  // hero跑
		ROLE_EVENT_JUMP				= ROLE_EVENT_START + 7,  // hero跳跃
		ROLE_EVENT_ATTACK			= ROLE_EVENT_START + 8,  // hero攻击
		ROLE_EVENT_WOUND			= ROLE_EVENT_START + 9,  // hero受伤
		ROLE_EVENT_DIE				= ROLE_EVENT_START + 10, // hero死亡
		ROLE_EVENT_ATTACK_ACTION    = ROLE_EVENT_START + 11, // hero攻击动作
		
		SYSTEM_EVENT_START			= 20000,
		SYSTEM_MONSTER_BORN			= 20001,
		SYSTEM_EFFECT_OVER			= 20002,
		SYSTEM_3DSCENE_BEGIN		= 20003,
		SYSTEM_3DSCENE_END			= 20004,
		//点击
		SYSTEM_EVENT_CLICK_GROUND   = SYSTEM_EVENT_START + 5,
		SYSTEM_ENENT_CLICK_PLAYER   = SYSTEM_EVENT_START + 6,
		
		PLAYER_EVENT_START          = 2000,
		PLAYER_EVENT_INWEREWOLF     = PLAYER_EVENT_START + 1,
		PLAYER_EVENT_OUTWEREWOLF    = PLAYER_EVENT_START + 2,
		PLAYER_EVENT_PREUSESKILL    = PLAYER_EVENT_START + 3,
		PLAYER_EVENT_BEUSEDSKILL    = PLAYER_EVENT_START + 4,
		PLAYER_EVENT_INCURSE		= PLAYER_EVENT_START + 5,
		PLAYER_EVENT_OUTCURSE       = PLAYER_EVENT_START + 6,
		
		
		//攻击相关action
		PLAYER_EVENT_ATTACK         = PLAYER_EVENT_START + 7, // player攻击动作
		PLAYER_EVENT_WOUND          = PLAYER_EVENT_START + 8, // player受伤动作
		PLAYER_EVENT_DIE            = PLAYER_EVENT_START + 9, // player死亡动作
		PLAYER_EVENT_RUN_FORWARD    = PLAYER_EVENT_START + 10, // player走路动作
		PLAYER_EVENT_JUMP			= PLAYER_EVENT_START + 11, // player跳跃动作
		PLAYER_EVENT_CHANGESHAPE	= PLAYER_EVENT_START + 12,
		PLAYER_EVENT_ATTACK_SCRIPT_PLAYER = PLAYER_EVENT_START + 13, // 攻击Script player的回调	
		
		PLAYER_EVENT_INDIZZY		= PLAYER_EVENT_START + 14,  //晕
		PLAYER_EVENT_OUTDIZZY       = PLAYER_EVENT_START + 15,  //解晕
		
		PLAYER_EVENT_PACTROMETER    = PLAYER_EVENT_START + 16, //  player冲锋蓄力
		PLAYER_EVENT_THROWGRENADE   = PLAYER_EVENT_START + 18, // player扔手雷
		PLAYER_EVENT_GRENADEBLAST   = PLAYER_EVENT_START + 19, // 手雷爆炸
		
		PLAYER_EVENT_STATUS_CHANGE_ADD = PLAYER_EVENT_START + 20, // 状态改变(增加)
		PLAYER_EVENT_STATUS_CHANGE_DEL = PLAYER_EVENT_START + 21, // 状态改变(减少)

		PLAYER_EVENT_REGION_CREATE_CENTER   = PLAYER_EVENT_START+22,    //领域影响开始
		PLAYER_EVENT_REGION_DESTROY_CENTER  = PLAYER_EVENT_START+23,	//领域影响结束

		PLAYER_EVENT_USE_SKILL = PLAYER_EVENT_START + 24, // 使用技能(服务器下发)

		PLAYER_EVENT_CREATE_HOSTAGE = PLAYER_EVENT_START  + 36, // 创建人质
		PLAYER_EVENT_DESTROY_HOSTAGE = PLAYER_EVENT_START  + 38, // 收回人质 

		PLAYER_EVENT_PROP_CHANGE		= PLAYER_EVENT_START + 25,
		MONSTER_EVENT_START         = 40000,
		MONSTER_EVENT_INCHAOS       = MONSTER_EVENT_START + 1,
		MONSTER_EVENT_OUTCHAOS      = MONSTER_EVENT_START + 2,
		
		SHELL_LBUTTON_DOWN           = 99998,
		SHELL_RBUTTON_DOWN           = 99999,
		
		WINDOW_EVENT_CTRL = 100,
		WINDOW_EVENT_OPEN,
		WINDOW_EVENT_CLOSE,
		WINDOW_EVENT_HINT,
		WINDOW_EVENT_PREOPEN,
		WINDOW_EVENT_HINTSTR,
		WINDOW_EVENT_ITEM_MOUSEOVER,
		WINDOW_EVENT_ITEM_INSERT,
		WINDOW_EVENT_ITEM_DELETE,
		WINDOW_EVENT_ITEM_MOVE,
		WINDOW_EVENT_HOVER,//鼠标指向
		WINDOW_EVENT_LEAVE,//鼠标离开
		WINDOW_EVENT_ENTERKEY,
		
};

enum PHYLE_TYPE				//吸血鬼种族	09-09-17
{
	PHYLE_TYPE_ERROR = 0,	//错误类型
	PHYLE_TYPE_HUMAN,		//人类
	PHYLE_TYPE_VAMPIRE,		//血族
};

enum CAMP_TYPE
{
	CAMP_TYPE_OTHER = 0,	//其他类型
	CAMP_TYPE_HUMAN,		//人类
	CAMP_TYPE_VAMPIRE,		//血族
	CAMP_TYPE_WILDANIMALS,  //野兽
	CAMP_TYPE_DEVIL,		//恶魔
	CAMP_TYPE_UNDEAD,		//不死生物
	CAMP_TYPE_VARIANCE,		//变异生物
};

enum VAMPIRE_robotTYPE_DB_FIELD                                              // 吸血鬼数据库字段枚举
{
    VAMPIRE_DB_robotTYPE_FIELD_ID,                   // "robottype, id"                       字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_PRICE,                // "robottype, price"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_HP,                   // "robottype, hp"                       字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_HP_INC,               // "robottype, hp_inc"                   字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_TOTALINSIDE_SIZE,     // "robottype, totalinside_size"         字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_SIZEX,                // "robottype, sizex"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_WEIGHT,               // "robottype, weight"                   字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DMG_SHARE,            // "robottype, dmg_share"                字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DATA0,                // "robottype, data0"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DATA1,                // "robottype, data1"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DATA2,                // "robottype, data2"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DATA3,                // "robottype, data3"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DATA4,                // "robottype, data4"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DATA5,                // "robottype, data5"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DATA6,                // "robottype, data6"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DATA7,                // "robottype, data7"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_REQ_LEV,              // "robottype, req_lev"                  字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_REQ_WEAPONSKILL,      // "robottype, req_weaponskill"          字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_REQ_SEX,              // "robottype, req_sex"                  字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_HOT_DEF,              // "robottype, hot_def"                  字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_SHAKE_DEF,            // "robottype, shake_def"                字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_WEAPON_TYPE,          // "robottype, weapon_type"              字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DECAY_DEF,            // "robottype, decay_def"                字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_LOOK,                 // "robottype, look"                     字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_TYPENAME,             // "robottype, typename"                 字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_AMOUNT_ADD,           // "robottype, amount_add"               字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_ROBOTNAME,            // "robottype, Robotname"                字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_DODGE,                // "robottype, dodge"                    字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_EXPTYPE,              // "robottype, exptype"                  字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_GUARD_DMG_TYPE,       // "robottype, guard_Dmg_type"           字段,   表示:
    VAMPIRE_DB_robotTYPE_FIELD_MAGIC_TYPE,           // "robottype, magic_type"               字段,   表示:
}; //VAMPIRE_robotTYPE_DB_FIELD


enum CALC_ANIMOSITY_TYPE
{
	PLAYER_ATTACK_MONSTER = 1,
	PLAYER_HEAL_PALYER,
	MONSTER_ATTACK_PLAYER,
	PLAYER_ATTACK_PALYER,
};


enum VAMPIRE_robot_DB_FIELD                                          // 吸血鬼数据库字段枚举
{
    VAMPIRE_DB_robot_FIELD_ID,                       // "robot, id"                       字段,   表示:
	VAMPIRE_DB_robot_FIELD_NAME,                     // "robot, name"                     字段,   表示:
	VAMPIRE_DB_robot_FIELD_OWNER_TYPE,               // "robot, owner_type"               字段,   表示:
	VAMPIRE_DB_robot_FIELD_OWNER_ID,                 // "robot, owner_id"                 字段,   表示:
	VAMPIRE_DB_robot_FIELD_PLAYER_ID,                // "robot, player_id"                字段,   表示:
	VAMPIRE_DB_robot_FIELD_TYPE,                     // "robot, type"                     字段,   表示:
	VAMPIRE_DB_robot_FIELD_EXP,                      // "robot, exp"                      字段,   表示:
	VAMPIRE_DB_robot_FIELD_LEVEL,                    // "robot, level"                    字段,   表示:
	VAMPIRE_DB_robot_FIELD_LIFE,                     // "robot, life"                     字段,   表示:
	VAMPIRE_DB_robot_FIELD_POSITION,                 // "robot, position"                 字段,   表示:
	VAMPIRE_DB_robot_FIELD_COLOR,                    // "robot, color"                    字段,   表示:
	VAMPIRE_DB_robot_FIELD_REBORN_CNT,               // "robot, reborn_cnt"               字段,   表示:
	VAMPIRE_DB_robot_FIELD_NUMBER,                   // "robot, number"                   字段,   表示:
	VAMPIRE_DB_robot_FIELD_GUARDSKILL1,              // "robot, guardskill1"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_GUARDSKILL2,              // "robot, guardskill2"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_GUARDSKILL3,              // "robot, guardskill3"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_GUARDSKILL4,              // "robot, guardskill4"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_EVENT_REC_BIN,            // "robot, event_rec_bin"            字段,   表示:
	VAMPIRE_DB_robot_FIELD_NATIVE_PLACE,             // "robot, native_place"             字段,   表示:
	VAMPIRE_DB_robot_FIELD_WEAPON_SELECT,            // "robot, weapon_select"            字段,   表示:
	VAMPIRE_DB_robot_FIELD_EATHERUPLEV_DATE,         // "robot, eatheruplev_date"         字段,   表示:
	VAMPIRE_DB_robot_FIELD_MAINSKILL_DATA,           // "robot, mainskill_data"           字段,   表示:
	VAMPIRE_DB_robot_FIELD_GUARDSKILL5,              // "robot, guardskill5"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_GUARDSKILL6,              // "robot, guardskill6"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_GUARDSKILL7,              // "robot, guardskill7"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_GUARDSKILL8,              // "robot, guardskill8"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_FACTION,                  // "robot, faction"                  字段,   表示:
	VAMPIRE_DB_robot_FIELD_MODEL_LEV,                // "robot, Model_lev"                字段,   表示:
	VAMPIRE_DB_robot_FIELD_METE_LEV,                 // "robot, Mete_lev"                 字段,   表示:
	VAMPIRE_DB_robot_FIELD_METE_ROBOTTYPE,           // "robot, Mete_RobotType"           字段,   表示:
	VAMPIRE_DB_robot_FIELD_VALUE_WEAPON,             // "robot, value_weapon"             字段,   表示:
	VAMPIRE_DB_robot_FIELD_VALUE_ARMET,              // "robot, value_armet"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_VALUE_ARMOR,              // "robot, value_armor"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_VALUE_BRACELET,           // "robot, value_bracelet"           字段,   表示:
	VAMPIRE_DB_robot_FIELD_VALUE_NECKLACE,           // "robot, value_necklace"           字段,   表示:
	VAMPIRE_DB_robot_FIELD_VALUE_SHOES,              // "robot, value_shoes"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_ACTIVITY_DATE,            // "robot, activity_date"            字段,   表示:
	VAMPIRE_DB_robot_FIELD_EVENT_REC_MET,            // "robot, event_rec_met"            字段,   表示:
	VAMPIRE_DB_robot_FIELD_SPECIALFLAG,              // "robot, specialflag"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_CHK_SUM,                  // "robot, chk_sum"                  字段,   表示:
	VAMPIRE_DB_robot_FIELD_QI,                       // "robot, qi"                       字段,   表示:
	VAMPIRE_DB_robot_FIELD_QIUSAGE,                  // "robot, qiusage"                  字段,   表示:
	VAMPIRE_DB_robot_FIELD_HAIR,                     // "robot, Hair"                     字段,   表示:
	VAMPIRE_DB_robot_FIELD_DELETE_STATE,             // "robot, Delete_state"             字段,   表示:
	VAMPIRE_DB_robot_FIELD_ABILITY_LIMIT1,           // "robot, ability_limit1"           字段,   表示:
	VAMPIRE_DB_robot_FIELD_ABILITY_LIMIT2,           // "robot, ability_limit2"           字段,   表示:
	VAMPIRE_DB_robot_FIELD_UPGRADETIME,              // "robot, Upgradetime"              字段,   表示:
	VAMPIRE_DB_robot_FIELD_UPGRADE_TIMES,            // "robot, Upgrade_times"            字段,   表示:
	VAMPIRE_DB_robot_FIELD_CONTRACT_TIME,            // "robot, contract_time"            字段,   表示:
	VAMPIRE_DB_robot_FIELD_DIALECT,                  // "robot, Dialect"                  字段,   表示:
	VAMPIRE_DB_robot_FIELD_LOOKFACE,                 // "robot, Lookface"                 字段,   表示:
	VAMPIRE_DB_robot_FIELD_SYNDICATE,                // "robot, syndicate"                字段,   表示:
	VAMPIRE_DB_robot_FIELD_RELATIONSHIP,             // "robot, relationship"             字段,   表示:
	VAMPIRE_DB_robot_FIELD_IDENTIFYED,               // 是否坚定过了!
}; //VAMPIRE_robot_DB_FIELD

enum PROFESSION_SORT		//吸血鬼职业类型 09-12-22
{
	PROFESSION_NONE,
	PROFESSION_KNIGHT,		//圣骑士
	PROFESSION_PALADIN,		//游侠
	PROFESSION_RABBI,		//法师
	PROFESSION_FIGHTER,		//战士
};

enum 
{
	GunShootSpecialEffect_Block     = 1, //--格挡
	GunShootSpecialEffect_Bingo     = 2, //--击中 
	GunShootSpecialEffect_HeadShoot = 3, //--爆头
	GunShootSpecialEffect_Limb      = 4, //--断肢
	GunShootSpecialEffect_Suppress  = 5, //--压制
    GunShootSpecialEffect_UnderShoot= 6, //--未命中
	GunShootSpecialEffect_BackOff   = 8, //--震退
};
enum
{
	Attack_Effect_HeadShoot		= 1		,//--爆头
	Attack_Effect_Limb			= 2		,//--断肢
	Attack_Effect_Block			= 3		,//--格挡
	Attack_Effect_Bingo			= 4		,//--击中
	Attack_Effect_Suppress		= 5		,//--压制
	Attack_Effect_UnderShoot	= 6		,//--未命中
	Attack_Effect_ShootGround	= 7		,//--击中地面
	Attack_Effect_Die			= 8		,//--被打死了
	Attack_Effect_Stiff			= 9		,//--僵直
	Attack_Effect_KickBack		= 10	,//--击退
	Attack_Effect_KickDown		= 11	,//--击倒
	Attack_Effect_KickFlyAway	= 12	,//--击飞
    Attack_Effect_SkillMove		= 13	,//--技能位移
};


enum EFFECT_MODE_TYPE	//最多16个
{
	EFFECT_MODE_NONE				    = 0x00,	// 无
	EFFECT_MODE_HEADSHOOT				= 0x01,	// 爆头
	EFFECT_MODE_LIMB				    = 0x02,	// 断肢
	EFFECT_MODE_BLOCK				    = 0x04,	// 格挡
	EFFECT_MODE_HIT				        = 0x08,	// 击中 
	EFFECT_MODE_SUPPRESS      		    = 0x10,	// 压制(僵直)
	EFFECT_MODE_UNDERHIT			    = 0x20,	// 未命中
	EFFECT_MODE_BACK_ABSOLUTE_POSITION  = 0x40,	// 震退
	EFFECT_MODE_DIE					    = 0x80,	// 被打死了
	EFFECT_MODE_KICKBACK				= 0x0100,	//击退
	EFFECT_MODE_KICKDOWN				= 0x0200,	//击倒
	EFFECT_MODE_KICKFLYAWAY				= 0x0400,	//击飞
	EFFECT_MODE_SKILLMOVE				= 0x0800,	//技能位移
};


enum QUEST_DATA
{
	QUEST_DATA_ID,
	QUEST_DATA_IDUSER,
	QUEST_DATA_QUEST_ID,
	QUSET_DATA_COMPLETE_FLAG,
	QUEST_DATA_NOTIFY_FLAG,
	QUEST_DATA_DATA1, 
	QUEST_DATA_DATA2,
	QUEST_DATA_DATA3,
	QUEST_DATA_DATA4,
	QUEST_DATA_DATA5,
	QUEST_DATA_DATA6,
	QUEST_DATA_DATA7,
	QUEST_DATA_REQURE_TIME
};

enum MAGIC_ACTIVITY_TYPE
{
	MAGIC_ACTIVITY_NONE,
	MAGIC_ACTIVITY_INITIATIVE,
	MAGIC_ACTIVITY_PASSIVE,
	MAGIC_ACTIVITY_AUXILIARY,
};

enum MONSTER_CANBECATCH_FLAG
{
	MONSTER_CANBECATCH_NONE = 0,       // 无
	MONSTER_CANBECATCH_CATCH = 1,       // 能被捕捉
	MONSTER_CONVOYNPC = 10,      // 被被护送的NPC
};

enum
{
	MSG_VTIME_DAY = 3,   // 白天
	MSG_VTIME_NIGHT,    // 夜晚
};

// enum MONSTER_PART_TYPE	//怪物肢体定义
// {
// 	MONSTER_PART_ERROR,
// 	MONSTER_PART_HAND_LEFT		= 0x1 << 0,
// 	MONSTER_PART_HAND_RIGHT		= 0x1 << 1,
// 	MONSTER_PART_FOOT_LEFT		= 0x1 << 2,
// 	MONSTER_PART_FOOT_RIGHT		= 0x1 << 3,
// 	MONSTER_PART_BODY_UPSIDE	= 0x1 << 4,
// 	MONSTER_PART_BODY_DOWNSIDE	= 0x1 << 5,
// };

// by xuxb: 不要使用MONSTER_PART_TYPE, 使用以下常量
enum
{
	BODYTYPE_PERFECT          = 0,             // 身体完好
	BODYTYPE_LACK_HAND        = 0x1 << 0,      // 缺手
	BODYTYPE_LACK_LEG         = 0x1 << 1,      // 缺脚
};

const int	ITEMPOSITION_BACKPACK	= ITEMPOS_BACKPACK;
const int	ITEMPOSITION_EQUIPBEGIN		= 1;
//const int	ITEMPOSITION_HELMET		= 1;
//const int	ITEMPOSITION_NECKLACE	= 2;
const int	ITEMPOSITION_ARMOR		= 3;
const int	ITEMPOSITION_WEAPONR	= ITEMPOS_HAND;
const int	ITEMPOSITION_WEAPONL	= ITEMPOS_SHIELD;
//const int	ITEMPOSITION_RINGR		= 6;
//const int	ITEMPOSITION_RINGL		= 7;
const int	ITEMPOSITION_TALISMAN	= 7;
//const int	ITEMPOSITION_SHOES		= 8;
const int	ITEMPOSITION_OVERCOAT	= 9;
const int	ITEMPOSITION_INCREASE_DMG_ARTIFACT	= 10;	// 加伤害的宝物位置
const int	ITEMPOSITION_DECREASE_DMG_ARTIFACT	= 11;	// 减伤害的宝物位置
const int	ITEMPOSITION_EQUIPEND	= ITEMPOS_EQUIPEND;

//Dota代码
enum ERESISTANCE       
{
	RESISTANCE_ATTACK					= 0,    //攻击力变化
	RESISTANCE_MAGIC_ARMOR       		= 1,    //魔法抗性非线性变化
	RESISTANCEDISPLACE                  = 2,
	RESISTANCE_INC_MAXLIFE             	= 3,    //最大生命变化
	RESISTANCE_INC_LIFE             	= 4,    //当前生命变化
	RESISTANCE_DAMAGE_MODULE_MULTIPLE	= 5,    //伤害系数倍数变化
	RESISTANCE_MOVE_SPEED		        = 6,	//移动速度
	RESISTANCE_BAT_MULTIPLE		        = 7,	//攻击速度
	RESISTANCE_BAT_HIT_MULTIPLE         = 8,	//命中倍数变化
	RESISTANCE_RESTORE_MANA				= 9,	//魔法恢复速度
	RESISTANCE_RESTORE_MANA_MULTIPLE	= 10,	//魔法恢复速度倍数
	RESISTANCE_RESTORE_HEALTH	        = 11,	//生命恢复速度
	RESISTANCE_ATTACK_MULTIPLE          = 12,   //攻击力倍数变化
	RESISTANCE_MOVE_SPEED_MULTIPLE      = 13,   // 移动速度倍数变化
	RESISTANCE_AROM_INC                 = 14,   //护甲增加或者减少的数值
	RESISTANCE_AROM_MULTIPLE            = 15,   //护甲倍数变化
	//RESISTANCE_END	                    = 16,  //RESISTANCE枚举值必须在[0,15]内。见 UNIT_FILED_RESISTANCETYPE1

	//扩展 
	RESISTANCE_DAMAGE_CONTAINER         = 48,   //伤害的的容器
	RESISTANCE_VAMPIRE_MUL              = 49,   //吸血
	RESISTANCE_ATTACK_MODULE	        = 50,    //攻击伤害系数变化
    RESISTANCE_MAGIC_EFFECT             = 51,   //魔法效果
    RESISTANCE_INC_MAXMANA              = 52,   //最大魔法值
    RESISTANCE_INC_JOUK                 = 53,   //闪避
    RESISTANCE_Dedicated_IBS            = 54,   //专注攻击速度百分比
    RESISTANCE_MAXLIFT_TO_ATTACK        = 55,   //最大生命转换为攻击力百分比
    //RESISTANCE_IBS	                    = 56,    //攻击速度
    RESISTANCE_MOVE_SPEED_TEMP	        = 57,    //移动速度临时值 

    RESISTANCE_MAGIC_PROTECT	        = 65,    //魔法护盾
    RESISTANCE_NORMAL_PROTECT	        = 66,    //普通护盾
    RESISTANCE_ALL_PROTECT	            = 67,    //护盾
    RESISTANCE_LINEARITY_MAGIC_ARMOR    = 68,    //魔法抗性线性变化

	RESISTANCE_MAGIC_ATTACK             = 69,    //法术攻击
	RESISTANCE_ARMOR_THROUGH_INC        = 70,    //物理护甲穿透 （破甲）
	RESISTANCE_ARMOR_THROUGH_MULTIPLE   = 71,    //物理护甲穿透百分比 （破甲）
	RESISTANCE_MAGICARMOR_THROUGH_INC        = 72,    //魔法护甲穿透 （破甲）
	RESISTANCE_MAGICARMOR_THROUGH_MULTIPLE   = 73,    //魔法护甲穿透百分比 （破甲）

	RESISTANCE_ALL_PROTECT_MODULE       = 74,    //护盾根据法伤调整的系数
    RESISTANCE_MONEY_RATE_SOLDIER       = 75,    //金币倍率(杀小兵)
	RESISTANCE_REBORN_TIME_RATE         = 76,    //重生时间倍率
	RESISTANCE_MONEY_RATE_NEUTRAL       = 77,    //金币倍率(杀野怪)

	RESISTANCE_CRIT_RATE          = 78,    //暴击率
	RESISTANCE_CRIT_MODULUS       = 79,    //暴击倍率
	RESISTANCE_MAGIC_VAMPIRE_MUL  = 80,    //法术吸血率
	RESISTANCE_BRAIN_TO_MAGICATTACK_RATE=81,//智力转法强率
	RESISTANCE_DEL_DAMAGE         = 82,    //抵抗伤害
    RESISTANCE_DEC_COOLDOWN       = 83,    //减cd状态
    RESISTANCE_BRAIN              = 84,    //智力

	RESISTANCE_SPLASH             = 98,
    RESISTANCE_AGILITY            = 99,    //敏捷
    RESISTANCE_POWER              = 100,    //力量
	RESISTANCE_All_DAMAGE_JOUK    = 101,   //闪避所有伤害

	RESISTANCE_BEKILL_EXTRA_MONEY = 102,    
	RESISTANCE_BESEC_EXTRA_MONEY  = 103,   
	RESISTANCE_FORBID_ADD_HEALTH  = 104,  //不能回血
	RESISTANCE_DEL_LONGRANGE_DAMAGE = 105,    //抵抗伤害(远程)
	RESISTANCE_SECOND_ADD_MONEY		= 106,    //每秒获得额外金币
	RESISTANCE_REDUCE_ADD_HEALTH	= 107,    //减少恢复血量
	RESISTANCE_TARGET_HEALTH_JUDGE  = 108,  //预判血量促发 

	RESISTANCE_ARMOR_IGNORE_MULTIPLE			= 122,						//穿透物理护甲百分比 （穿甲）
	RESISTANCE_MAGICARMOR_IGNORE_MULTIPLE		= 123,						//穿透魔法护甲百分比 （穿甲）
	RESISTANCE_MAIGIC_DAMAGE_MODULE_MULTIPLE	= 124,						//魔法伤害系数倍数变化
	RESISTANCE_PETADD_MOVE_SPEED				= 125,						//骑宠附加速度值
	RESISTANCE_PHYSICS_IMMUNE					= 126,						//物理免疫
	RESISTANCE_BAT_COUNTED_RATE					= 127,						//必中概率
	RESISTANCE_PHY_DAMAGE_MODULE_MULTIPLE		= 128,						//物理系数倍数变化
	RESISTANCE_PVE_ADD_HEALTH					= 129,							//增加PVE药水恢复血量
	RESISTANCE_TARGET_PHY_HEALTH_JUDGE			= 130,						//预判血量促发（物理伤害）
	RESISTANCE_ATTACK_DAMAGEDERATE_MODULUS		= 131,						//攻击者减伤弱化系数
	RESISTANCE_DAMAGE_CONVERT					= 132,						// 伤害转换

	RESISTANCE_DAMAGE_CONVERT_MANA				= 154,						// 伤害转换为蓝耗
	RESISTANCE_DAMAGECONFIG_MODULUS				= 155,						// 配置伤害影响系数
	RESISTANCE_DAMAGE_CONVERT_MANA_POWERPECENT  = 156,						// 伤害转换为耗蓝（转换百分比：智力属性占总属性百分比）
	RESISTANCE_SKILL_CPTIME_COEF				= 157,						// 技能前摇时间系数
	RESISTANCE_MAGIC_ATTACK_MULTIPLE			= 158,						// 法术攻击倍数变化
	RESISTANCE_END								= 164,						//RESISTANCE枚举值必须在[0,15] [48,58] [65,84] [98,108] [122,132][154,164]内。见 UNIT_FILED_RESISTANCETYPE1

};

//金币获得调整率类型（与游服同类型对应）
enum MONEY_RATE_TYPE
{
	MONEY_RATE_SOLDIER,	//杀死小兵调整
	MONEY_RATE_NEUTRAL,	//杀死野怪调整
};

enum BODYPART_TYPE  //肢体破坏类型定义
{
	BODYPART_ERROR,
	BODYPART_HEAD = 0x1 << 0,  //头部
	BODYPART_HAND = 0x1 << 1,  //手
	BODYPART_FOOT = 0x1 << 2,  //脚
	BODYPART_UPPERBODY = 0x1 << 3,  //上半身
	BODYPART_LOWERBODY = 0x1 << 4,  //下半身
};

enum EDotaCamp
{
	eDotaCamp_Sentinel = 0,	//
	eDotaCamp_Scourge = 1,	//
	eDotaCamp_Judgement = 2,	//
	eDotaCamp_Neutrality = 3,	// 中立
	eDotaCamp_Max					// 无效阵营
};

enum
{
    ONEVIPADDFRIENDCOUNT   = 5,
    TWOVIPADDFRIENDCOUNT   = 25,
    THREEVIPADDFRIENDCOUNT = 35,
    FOURVIPADDFRIENDCOUNT  = 45,
    FIVEVIPADDFRIENDCOUNT  = 55,
    SIXVIPADDFRIENDCOUNT   = 75,
};

enum RANDDROP_KIND
{
    RANDDROP_WHITE = 0,
    RANDDROP_RED   = 1,
    RANDDROP_BLACK = 2,
};

enum USER_EMOTIONAL_EXPREESION_TYPE	//玩家表情类型定义.喜、怒、忧思、悲、恐惊
{
	USER_EMOTIONAL_EXPREESION_NULL,
	USER_EMOTIONAL_EXPREESION_HAPPY,	//喜
	USER_EMOTIONAL_EXPREESION_ANGER,	//怒
	USER_EMOTIONAL_EXPREESION_WORRY,	//忧思
	USER_EMOTIONAL_EXPREESION_SAD,		//悲
	USER_EMOTIONAL_EXPREESION_TERRIFIED,	//恐惊
};

enum ATK_TYPE			 //  攻击类型
{
	ATK_TYPE_SHORT	= 1, //	 该字段值为1表示近身攻击类型		
	ATK_TYPE_FAR	= 2, //	 该字段值为2表示远程攻击类型	
};


///////////////////////////////////////////////////////////////////
//Dota项目新增

enum CREATURE_ADDITIVE_ATTR_TYPE
{
	CREATURE_ADDITIVE_ATTR_GEN_OWNER	= 1 << 0,		//兵营等，死亡后会中断对应的刷怪控制对象
	CREATURE_ADDITIVE_ATTR_SOLDIERS	    = 1 << 1,		//小兵
	CREATURE_ADDITIVE_ATTR_EMPLACEMENT	= 1 << 2,		//炮台
	CREATURE_ADDITIVE_ATTR_NEUTRAL		= 1 << 3,		//野怪
	CREATURE_ADDITIVE_ATTR_ALTAR		= 1 << 4,		//祭坛
};

enum EVALUATE
{
    EVALUATE_MVP            = 1 << 0,
    EVALUATE_PODI           = 1 << 1,
    EVALUATE_PIAN_JIANG     = 1 << 2,
    EVALUATE_YING_LING      = 1 << 3,
    EVALUATE_DEAD           = 1 << 4,
    EVALUATE_PO_YING        = 1 << 5,
    EVALUATE_WEALTHY        = 1 << 6,
	EVALUATE_DA_HENG		= 1 << 7,
};

enum TALENTDATA
{
	TALENTDATA_ID,
	TALENTDATA_TALENT,
	TALENTDATA_TYPE,
	TALENTDATA_PARAM,
};

enum
{
    Result_Win      = 0,			//胜利
    Result_Fail     = 1,			//失败
    Result_About    = 2,			//逃跑
    Result_AboutEx  = 3,			//逃跑
	Result_WinEx    = 4,			// 推到对方主堡胜利
	Result_FailEx   = 5,			// 推到对方主堡失败
	Result_Punish   = 6,			// 惩罚
	Result_ReturnLadder  = 7,		// 返回天梯
	Result_SingleWin = 8,			// 单人房间
	Result_Negative  = 9,			// 消极比赛
	Result_WaiGua = 10,				// 检测到外挂
	Result_Punish_DECSCORE   = 11,  //ban人匹配秒退 扣分
};

enum LP_ITEM_TYPE_DATA
{
	LP_ITEM_TYPE_ID			= 0,
	LP_ITEM_TYPE_NEED_SOUL,
	LP_ITEM_TYPE_EFFECT_MAP,
};

enum PVE_PLACE_HORNOR
{
	PVE_PLACE_HORNOR_ID = 0,
	PVE_PLACE_HORNOR_MAP_ID,
	PVE_PLACE_HORNOR_LEVEL,
	PVE_PLACE_HORNOR_LEVEL_RATE,
	PVE_PLACE_HORNOR_RESULT,
	PVE_PLACE_HORNOR_RESULT_RATE,
	PVE_PLACE_HORNOR_UP,
	PVE_PLACE_HORNOR_LOW,
	PVE_PLACE_HORNOR_HORNOR,
};

enum PVE_EVENT_POINT
{
	PVE_EVENT_POINT_ID = 0,
	PVE_EVENT_POINT_MAP_ID,
	PVE_EVENT_POINT_UP_SCORE,
	PVE_EVENT_POINT_LOW_SCORE,
	PVE_EVENT_POINT_TYPE,
	PVE_EVENT_POINT_POINT,
};

enum PVE_HORNOR_CONF
{
	PVE_HORNOR_CONF_ID = 0,
	PVE_HORNOR_CONF_MAP_ID,
	PVE_HORNOR_CONF_UP_SCORE,
	PVE_HORNOR_CONF_LOW_SCORE,
	PVE_HORNOR_CONF_POINT,
	PVE_HORNOR_CONF_SEC_POINT,
};

enum EHornorType
{
	eHornorType_None,
	eHornorType_Kill3,
	eHornorType_Kill4,
	eHornorType_Kill5,
	eHornorType_Kill6,
	eHornorType_Kill7,
	eHornorType_Kill8,
	eHornorType_Kill9,
	eHornorType_Kill10,
};

enum PVE_MAP_ATTR_DATA
{
	PVE_MAP_ATTR_MAP_ID = 0,	    
	PVE_MAP_ATTR_MIN_ATK,	  
	PVE_MAP_ATTR_MAX_ATK,	  
	PVE_MAP_ATTR_DEFENSE,	  
	PVE_MAP_ATTR_LIFE,			
	PVE_MAP_ATTR_MANA,			
	PVE_MAP_ATTR_LIFE_REGEN,
	PVE_MAP_ATTR_MANA_REGEN,
	PVE_MAP_ATTR_ATK_SPD,		
	PVE_MAP_ATTR_HIT,				
	PVE_MAP_ATTR_PHY_PASS,	
	PVE_MAP_ATTR_CRIT,			
	PVE_MAP_ATTR_CRIT_RES,	
	PVE_MAP_ATTR_PHY_SUCK,	
	PVE_MAP_ATTR_SPELL,			
	PVE_MAP_ATTR_SPE_PASS,	
	PVE_MAP_ATTR_SPE_SUCK,	
	PVE_MAP_ATTR_SPE_CD,		
	PVE_MAP_ATTR_SPE_RES,		
	PVE_MAP_ATTR_DUCK,		
	PVE_MAP_ATTR_POWER,		
	PVE_MAP_ATTR_AGILE,	
	PVE_MAP_ATTR_INTEL,	
	PVE_MAP_ATTR_MOVE_SPD,		
	PVE_MAP_ATTR_MAX_GENCOUNT,	
	PVE_MAP_ATTR_MAX_DAMAGE,
}; 

// Dota地图
enum EDotaMap
{
	eDotaMap_None				= 0,
	eDotaMap_Fresh				= 2,		// 新手
	eDotaMap_Strife				= 5,		// 纷争
    eDotaMap_Strife10v10		= 6,		// 10v10纷争
	eDotaMap_Battle				= 7,		// 决战
	eDotaMap_SiFang				= 8,		// 四方
    eDotaMap_Alaxi				= 30,		// 四方
	eDotaMap_BattleChaunt		= 31,		// 战歌
	eDotaMap_NationWar			= 32,		// 国战
	eDotaMap_PVE_Map1			= 300,		// PVE
	eDotaMap_PVE_Map2			= 301,
	eDotaMap_PVE_Map3			= 302,
	eDotaMap_PVE_Map4			= 303,
	eDotaMap_PVE_Map5			= 304,
	eDotaMap_PVE_Map6			= 305,		// 深渊领主副本

	eDotaMap_PVE_Map11			= 310,                          // 副本1
	eDotaMap_PVE_Map12			= 311,                          // 副本2
	eDotaMap_PVE_Map13			= 312,                          // 副本3
	eDotaMap_PVE_Map14			= 313,                          // 副本4
	eDotaMap_PVE_Map15			= 314,                          // 副本5
	eDotaMap_NianMonster		= 315,                          // 年兽副本
	eDotaMap_FinallyTussle		= 316,                          // 守护者圣殿序章 终级试炼
	eDotaMap_PVE_WATCH_MAP1		= 317,                          // 守护者圣殿 地图1
	eDotaMap_PVE_WATCH_MAP2		= 318,                          // 守护者圣殿 地图2
	eDotaMap_PVE_WATCH_MAP3		= 319,                          // 守护者圣殿 地图3
	eDotaMap_PVE_WATCH_MAP4		= 320,                          // 守护者圣殿 地图4
	eDotaMap_PVE_WATCH_MAP5		= 321,                          // 守护者圣殿 地图5
	eDotaMap_PVE_WATCH_MAP6		= 322,                          // 守护者圣殿 地图6
	eDotaMap_PVE_WATCH_MAP7		= 323,                          // 守护者圣殿 地图7
	eDotaMap_PVE_WATCH_MAP8		= 324,                          // 守护者圣殿 地图8
	eDotaMap_PVE_WATCH_MAP9		= 325,                          // 守护者圣殿 地图9
	eDotaMap_PVE_WATCH_MAP10	= 326,                          // 守护者圣殿 地图10
	eDotaMap_PVE_WATCH_MAP11	= 327,                          // 守护者圣殿 地图11
	eDotaMap_PVE_WATCH_MAP12	= 328,                          // 守护者圣殿 地图12
	eDotaMap_PVE_WATCH_MAP13	= 329,                          // 守护者圣殿 地图13
	eDotaMap_PVE_WATCH_MAP14	= 330,                          // 守护者圣殿 地图14
	eDotaMap_PVE_WATCH_MAP15	= 331,                          // 守护者圣殿 地图15
	eDotaMap_PVE_WATCH_MAP16	= 332,                          // 守护者圣殿 地图16
	eDotaMap_PVE_BABELTOWER		= 340,							// 通天塔

	eDotaMap_PVE_10V10_War = 500,                       // PVE10V10
};

enum EPhoneMap
{
    ePhoneMap_Single1v1 = 5,                          //手游中的单路地图1v1
    ePhoneMap_Single3v3 = 9,                          //手游中的单路地图3v3 以及房间单路
    ePhoneMap_Three5v5 = 13,                          //手游中的三路地图5v5 以及房间三路
    ePhoneMap_RookieStep1 = 21,                       //手游中新手引导1，单路
    ePhoneMap_RookieStep2 = 23,                       //手游中新手引导2，三路
};

enum EHeroInitLevel
{
    eHeroInitLevel1 = 1,                          //初始1级
    eHeroInitLevel3 = 3,                          //初始3级
};

#define IS_PVE_MAP( mapId )                 ( mapId == eDotaMap_PVE_Map1 || mapId == eDotaMap_PVE_Map2 || mapId == eDotaMap_PVE_Map3 || mapId == eDotaMap_PVE_Map4 || mapId == eDotaMap_PVE_Map5 || mapId == eDotaMap_PVE_Map6 || mapId == eDotaMap_PVE_Map11 || mapId == eDotaMap_PVE_Map12 || mapId == eDotaMap_PVE_Map13 || mapId == eDotaMap_PVE_Map14 || mapId == eDotaMap_PVE_Map15 || mapId == eDotaMap_NianMonster || mapId == eDotaMap_FinallyTussle/* || mapId == eDotaMap_NationWar*/ || (mapId >= eDotaMap_PVE_WATCH_MAP1 && mapId <= eDotaMap_PVE_WATCH_MAP16) || mapId == eDotaMap_PVE_BABELTOWER)
#define USE_PVE_HERO( mapId )				( mapId == eDotaMap_PVE_10V10_War || mapId == eDotaMap_Alaxi || mapId == eDotaMap_BattleChaunt/* || mapId == eDotaMap_NationWar*/ )
#define IS_PVE_BATTLECHAUNT_MAP( mapId )    ( mapId == eDotaMap_BattleChaunt)
#define IS_PVE_FINALLYTUSSLE_MAP( mapId )   ( mapId == eDotaMap_FinallyTussle)
#define IS_PVE_NATIONWAR( mapId )			( mapId == eDotaMap_NationWar)
#define IS_PVE_WATCH_MAP( mapId )			( mapId >= eDotaMap_PVE_WATCH_MAP1 && mapId <= eDotaMap_PVE_WATCH_MAP16 )
#define IS_PVE_LEVELUP_MAP( mapId )         IS_PVE_WATCH_MAP ( mapId )
#define IS_PVE_BABELTOWER_MAP( mapId )      ( mapId == eDotaMap_PVE_BABELTOWER)

#define LOOKTYPEID_WATCHSOLDIER1		81001			// 守护兽扎卡lookID
#define LOOKTYPEID_WATCHSOLDIER2		99001			// 守护兽九尾狐lookID
#define LOOKTYPEID_WATCHSOLDIER3		100001			// 守护兽黑龙lookID
#define LOOKTYPEID_HANDBANNERSOLDIER1	91001			// 力量型扛旗小兵lookID
#define LOOKTYPEID_HANDBANNERSOLDIER2	220001			// 敏捷型扛旗小兵lookID
#define LOOKTYPEID_HANDBANNERSOLDIER3	221001			// 智力型扛旗小兵lookID
#define ISHANDBANNERSOLDIER( lookId )				( lookId == LOOKTYPEID_HANDBANNERSOLDIER1 || lookId == LOOKTYPEID_HANDBANNERSOLDIER2 || lookId == LOOKTYPEID_HANDBANNERSOLDIER3)
#define ISWATCHSOLDIER( lookId )					( lookId == LOOKTYPEID_WATCHSOLDIER1 || lookId == LOOKTYPEID_WATCHSOLDIER2 || lookId == LOOKTYPEID_WATCHSOLDIER3)

const int WATCH_MAP_MAX_ENERGY = 1500;					// 地狱狂潮限制最高能量值

/// 模式用1位，地图用3位，人数用2位
enum EGameMode
{
	eGameMode_None        = 0,                   // 
	eGameMode_All         = 10000000,            // 所有模式
	eGameMode_Leisure     = 1,                   // 匹配
	eGameMode_Match       = 2,                   // 天梯
	eGameMode_AI          = 3,                   // 人机
	eGameMode_Fight       = 4,                   // 比赛
	eGameMode_Strife      = 101,                 // 纷争圣坛
	eGameMode_Battle      = 102,                 // 决战之谷
	eGameMode_10v10       = 110,                 // 10v10
	eGameMode_3V3         = 11,                  // 3V3
	eGameMode_5V5         = 12,                  // 5V5
	eGameMode_Leisure_Strife = 1101,             // 匹配纷争
	eGameMode_Leisure_Battle = 1102,             // 匹配决战
	eGameMode_AILeisure_Strife = 1103,           // 人机匹配纷争
	eGameMode_Match_Strife   = 2101,             // 天梯纷争
	eGameMode_Match_Battle   = 2102,             // 天梯决战
	eGameMode_Fight_Strife   = 4101,             // 比赛纷争
	eGameMode_Fight_Battle   = 4102,             // 比赛决战
	eGameMode_Match_Strife_3V3 = 110111,         // 天梯纷争3V3
	eGameMode_Match_Strife_5V5 = 110112,         // 天梯纷争5V5
	eGameMode_Match_Battle_3V3 = 110211,         // 天梯决战3V3
	eGameMode_Match_Battle_5V5 = 110212,         // 天梯决战5V5
};

#define FOR_ALL_BEG( TDataMapIt, datas )                                                        \
{                                                                                               \
	uint32 loopCount    = 0;                                                                    \
	TDataMapIt it       = datas.begin();                                                        \
	TDataMapIt itEnd    = datas.end();                                                          \
	for( ; it != itEnd; ++it )                                                                  \
	{																							\
		DEAD_LOOP_BREAK( loopCount, 10000 );


#define FOR_ALL_END                                                                             \
	}                                                                                           \
}

enum INSTANCETYPEDATA               // 副本类型表
{
    INSTANCETYPEDATA_INSTANCE_ID = 0,   // 副本编号AABBCCDDEE，AA表示第一个分类，BB表示第二个分类
    // CC表示第三个分类，DD表示第四个分类，EE表示具体分类的副本编号
    INSTANCETYPEDATA_NAME,          // 副本名称
    INSTANCETYPEDATA_PLAYER_MAX,    // 进入副本人数上限
    INSTANCETYPEDATA_PLAYER_MIN,    // 进入副本人数下限
    INSTANCETYPEDATA_EXPEND_STA,    // 进入副本消耗精力
    INSTANCETYPEDATA_LEV_MIN,       // 进入副本最低等级
    INSTANCETYPEDATA_LEV_MAX,       // 进入副本最高等级
    INSTANCETYPEDATA_REQ_TASK,      // 副本前置任务
    INSTANCETYPEDATA_REQ_INSTANCE1, // 前置副本1
    INSTANCETYPEDATA_REQ_INSTANCE2, // 前置副本2
    INSTANCETYPEDATA_REQ_INSTANCE3, // 前置副本3
    INSTANCETYPEDATA_OPENTIME_FLAG, // 副本开放周期INSTANCEOPEN_CYC
    INSTANCETYPEDATA_START_TIME,    // 副本开放时间
    INSTANCETYPEDATA_CLOSE_TIME,    // 副本关闭时间
    INSTANCETYPEDATA_LIMIT,         // 条件限制范围INSTANCEENTER_LIMIT
    INSTANCETYPEDATA_STAY_TIME,     // 副本存在时间（0表示无时间限制）
    INSTANCETYPEDATA_TOTAL_REBORN,  // 总重生次数，副本中所有玩家的最大重生次数，0表示无限次复活
    INSTANCETYPEDATA_PERSONAL_REBORN, // 个人重生次数，副本中单个玩家的最大重生次数，0表示无限次复活
    INSTANCETYPEDATA_BEGIN_SCRIPT,  // 副本开启时触发的脚本
    INSTANCETYPEDATA_END_SCRIPT,    // 副本通关时触发的脚本
    INSTANCETYPEDATA_RECORD_TIME,   // 副本记录时间，0表示该副本无时间要求，非0表示再此记录时间点以前完成的副本能获得额外奖励
};

enum INSTANCEPRIZEDATA              // 副本奖励表
{
    INSTANCEPRIZEDATA_INSTANCE_ID = 0, // 副本类型编号
    INSTANCEPRIZEDATA_MASTER_TASK,     // 副本主线任务完成的奖励脚本
    INSTANCEPRIZEDATA_LATERAL_TASK1, // 副本支线任务1完成的奖励脚本
    INSTANCEPRIZEDATA_LATERAL_TASK2, // 副本支线任务2完成的奖励脚本
    INSTANCEPRIZEDATA_LATERAL_TASK3, // 副本支线任务3完成的奖励脚本
    INSTANCEPRIZEDATA_LATERAL_TASK4, // 副本支线任务4完成的奖励脚本
    INSTANCEPRIZEDATA_LATERAL_TASK5, // 副本支线任务5完成的奖励脚本
    INSTANCEPRIZEDATA_TIME_LIMIT,   // 副本在记录时间点前完成得到的奖励脚本
    INSTANCEPRIZEDATA_ADDITIONAL_PRIZE0,
    INSTANCEPRIZEDATA_ADDITIONAL_PRIZE1,
    INSTANCEPRIZEDATA_ADDITIONAL_PRIZE2,
};

enum INSTANCEMAPTYPEDATA            // 副本地图类型表
{
    INSTANCEMAPTYPEDATA_ID = 0,      // 系统编号
    INSTANCEMAPTYPEDATA_INSTANCE_ID, // 副本类型编号
    INSTANCEMAPTYPEDATA_INSTANCE_MAPID, // 副本地图id
    INSTANCEMAPTYPEDATA_ENTER_X,    // 进入副本的落脚点x
    INSTANCEMAPTYPEDATA_ENTER_Y,    // 进入副本的落脚点y
    INSTANCEMAPTYPEDATA_MAPFLAG,    // 地图标记1为副本入口地图，0为非副本入口地图
};

enum STATISTIC_DATA
{
    STATISTICDATA_ID = 0,
    STATISTICDATA_PLAYERID,
    STATISTICDATA_EVENTTYPE,
    STATISTICDATA_DATA,
    STATISTICDATA_EVENTTIME,
    STATISTICDATA_OWNER_TYPE,
    STATISTICDATA_HERO_TYPE,
    STATISTICDATA_MONEY,
    STATISTICDATA_KILL_HERO_AMOUNT,
    STATISTICDATA_DEAD_AMOUNT,
    STATISTICDATA_SECONDAR_ATTACK_AMOUNT,
    STATISTICDATA_KILL_SOLDIERS_AMOUNT,//杀死小兵
    STATISTICDATA_KILL_EMPACEMENT_AMOUNT,//杀死炮台数
    STATISTICDATA_KILL_BARRACKS_AMOUNT,//杀死兵营数
    STATISTICDATA_KILL_NEUTRAL_AMOUNT,//杀死中立生物
    STATISTICDATA_EXPORT_DAMAGE,
    STATISTICDATA_EXPORT_NORMAL_DAMAGE,
    STATISTICDATA_EXPORT_MAGIC_DAMAGE,
    STATISTICDATA_ENDURE_DAMAGE,
    STATISTICDATA_ENDURE_NORMAL_DAMAGE,
    STATISTICDATA_ENDURE_MAGIC_DAMAGE,
    STATISTICDATA_GAME_RESULT,
    STATISTICDATA_MAP,
    STATISTICDATA_HERO_MODE,
    STATISTICDATA_EQUIP_TYPE1,
    STATISTICDATA_EQUIP_TYPE2,
    STATISTICDATA_EQUIP_TYPE3,
    STATISTICDATA_EQUIP_TYPE4,
    STATISTICDATA_EQUIP_TYPE5,
    STATISTICDATA_EQUIP_TYPE6,
    STATISTICDATA_SOUL,							// 游戏中使用魂石
    STATISTICDATA_EXPORT_BUILD_DAMAGE,			// 输出建筑伤害
    STATISTICDATA_EXPORT_HERO_DAMAGE,			// 输出英雄伤害
    STATISTICDATA_PVE_HORNOR,					// 荣誉
    STATISTICDATA_PVE_SEC_HORNOR,				// 助攻荣誉
    STATISTICDATA_PVE_ALTAR_HORNOR,				// 祭坛荣誉
    STATISTICDATA_EXPORT_ALTAR_DAMGE,			// 祭坛伤害
    STATISTICDATA_PVE_ENERGY,					// 能量
    STATISTICDATA_PVE_RESOURCE,					// 资源
    STATISTICDATA_PVE_WAR_LEV,					// 战场等级
    STATISTICDATA_PVE_BANNER_HORNOR,			// 夺旗荣誉
    STATISTICDATA_MAX,							// 无效
};

// TODO::MILO 11/9/2015 BS中也有一个HERO_TYPE定义在StructDef.h中 现在改成DOTA_HERO_TYPE
enum HERO_TYPE				//英雄类型 
{
	HERO_NONE,
	HERO_POWER,             //力量英雄
	HERO_AGILITY,           //敏捷英雄
	HERO_BRAINS,            //智力英雄
};
//Dota项目新增
///////////////////////////////////////////////////////////////////

#endif // end of define _GS_ENUM_DEFINE_H_
